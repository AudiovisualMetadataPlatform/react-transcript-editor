// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TimeTextEditor /> should render correctly in "debug" mode 1`] = `
<section>
  <section
    onDoubleClick={[Function]}
  >
    <style
      scoped={true}
    >
      span.Word[data-start="NA"] { background-color: #69e3c2; text-shadow: 0 0 0.01px black }
      span.Word[data-start="NA"]+span { background-color: #69e3c2 }
      span.Word[data-prev-times~="NaN"] { color: #767676 }
      span.Word[data-prev-times~="NaN"] { color: #767676 }
      span.Word[data-confidence="low"] { border-bottom: 1px dotted blue }
    </style>
    <CustomEditor
      customKeyBindingFn={[Function]}
      editorState={
        EditorState {
          "_immutable": Immutable.Record {
            "allowUndo": true,
            "currentContent": Immutable.Record {
              "entityMap": Object {
                "__add": [Function],
                "__create": [Function],
                "__get": [Function],
                "__getLastCreatedEntityKey": [Function],
                "__mergeData": [Function],
                "__replaceData": [Function],
                "add": [Function],
                "create": [Function],
                "get": [Function],
                "getLastCreatedEntityKey": [Function],
                "mergeData": [Function],
                "replaceData": [Function],
              },
              "blockMap": Immutable.OrderedMap {
                "eqvsq": Immutable.Record {
                  "key": "eqvsq",
                  "type": "unstyled",
                  "text": "",
                  "characterList": Immutable.List [],
                  "depth": 0,
                  "data": Immutable.Map {},
                },
              },
              "selectionBefore": Immutable.Record {
                "anchorKey": "eqvsq",
                "anchorOffset": 0,
                "focusKey": "eqvsq",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
              "selectionAfter": Immutable.Record {
                "anchorKey": "eqvsq",
                "anchorOffset": 0,
                "focusKey": "eqvsq",
                "focusOffset": 0,
                "isBackward": false,
                "hasFocus": false,
              },
            },
            "decorator": null,
            "directionMap": Immutable.OrderedMap {
              "eqvsq": "LTR",
            },
            "forceSelection": false,
            "inCompositionMode": false,
            "inlineStyleOverride": null,
            "lastChangeType": null,
            "nativelyRenderedContent": null,
            "redoStack": Immutable.Stack [],
            "selection": Immutable.Record {
              "anchorKey": "eqvsq",
              "anchorOffset": 0,
              "focusKey": "eqvsq",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "treeMap": Immutable.OrderedMap {
              "eqvsq": Immutable.List [
                Immutable.Record {
                  "start": 0,
                  "end": 0,
                  "decoratorKey": null,
                  "leaves": Immutable.List [
                    Immutable.Record {
                      "start": 0,
                      "end": 0,
                    },
                  ],
                },
              ],
            },
            "undoStack": Immutable.Stack [],
          },
        }
      }
      handleKeyCommand={[Function]}
      onChange={[Function]}
      onWordClick={[Function]}
      setEditorNewContentState={[Function]}
      stripPastedStyles={true}
    />
  </section>
</section>
`;
