{"version":3,"sources":["lib/TranscriptEditor/Settings/index.module.css","lib/TranscriptEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/PlayerControls.module.css","index.module.css","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/SpeakerLabel.js","lib/Util/timecode-converter/secondsToTimecode.js","lib/Util/timecode-converter/timecodeToSeconds.js","lib/Util/timecode-converter/padTimeToTimecode.js","lib/Util/timecode-converter/index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.js","lib/Util/adapters/generate-entities-ranges/index.js","lib/Util/adapters/bbc-kaldi/group-words-by-speakers.js","lib/TranscriptEditor/TimedTextEditor/index.js","lib/Util/adapters/bbc-kaldi/index.js","lib/Util/adapters/autoEdit2/index.js","lib/Util/adapters/speechmatics/index.js","lib/Util/adapters/amazon-transcribe/index.js","lib/Util/adapters/ibm/index.js","lib/Util/adapters/index.js","lib/Util/export-adapters/txt/index.js","lib/Util/export-adapters/index.js","lib/TranscriptEditor/MediaPlayer/Select.js","lib/TranscriptEditor/MediaPlayer/PlayerControls.js","lib/TranscriptEditor/MediaPlayer/ProgressBar.js","lib/TranscriptEditor/MediaPlayer/defaultHotKeys.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/MediaPlayer/VideoPlayer.js","lib/TranscriptEditor/Settings/Toggle/index.js","lib/TranscriptEditor/Settings/TimecodeOffset/index.js","lib/TranscriptEditor/Settings/index.js","lib/TranscriptEditor/Settings/Shortcuts.js","lib/TranscriptEditor/index.js","select-stt-json-type.js","select-export-format.js","index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.module.css","lib/TranscriptEditor/Settings/Shortcuts.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css","lib/TranscriptEditor/Settings/TimecodeOffset/index.module.css","lib/TranscriptEditor/Settings/Toggle/index.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/Select.module.css","lib/TranscriptEditor/MediaPlayer/ProgressBar.module.css","lib/TranscriptEditor/MediaPlayer/VideoPlayer.module.css"],"names":["module","exports","settings","header","closeButton","controlsContainer","settingElement","label","rollbackValue","timecodeLabel","color-subt-green","color-darkest-grey","color-labs-red","container","help","helpMessage","icon","nav","grid","row","settingsContainer","settingsButton","aside","main","keyboardShortcutsButon","color-light-shilo","color-light-grey","playerControls","playerButton","playBackRate","timeBox","currentTime","separator","duration","btnsGroup","pip","demoNavItem","demoInput","demoNav","Word","generateConfidence","data","confidence","generatePreviousTimes","prevTimes","i","start","concat","dec","Math","floor","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","data-start","data-end","end","data-confidence","data-prev-times","data-entity-key","key","className","children","PureComponent","SpeakerLabel","style","speaker","onClick","handleOnClickEdit","EditLabel","index_es","faUserEdit","name","secondsToTimecode","seconds","framePerSeconds","fps","undefined","normalisedSeconds","Number","toPrecision","toFixed","normalisePlayerTime","wholeSeconds","frames","_padZero","n","parseInt","timecodeToSecondsHelper","tc","s","split","timecodeToFrames","isOneDigit","str","length","padTimeToTimecode","time","timecode","includes","includesFullStop","replace","timecodeToSeconds","resultPadded","parseFloat","WrapperBlock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newSpeakerName","prompt","setState","blockProps","handleAnalyticsEvents","category","action","value","keyForCurrentCurrentBlock","block","getKey","currentBlockSelection","SelectionState","createEmpty","currentBlockSelectionState","EditorState","acceptSelection","editorState","getSelection","newBlockDataWithSpeakerName","newContentState","Modifier","mergeBlockData","setEditorNewContentState","handleTimecodeClick","onWordClick","state","timecodeOffset","get","startTimecode","speakerElement","TimedTextEditor_SpeakerLabel","timecodeElement","slice","markers","contentEditable","showSpeakers","showTimecodes","text","Draft","React","Component","generateEntitiesRanges","words","wordAttributeName","position","map","word","result","offset","random","toString","substring","groupWordsInParagraphsBySpeakers","mutability","segments","wordsWithSpeakers","currentSpeaker","results","paragraph","forEach","push","punct","trim","groupWordsBySpeaker","tmpWordsWithSpeakers","tmpSpeakerSegment","tmpSegment","find","seg","segEnd","@type","@id","gender","findSegmentForWord","addSpeakerToEachWord","bbcKaldiToDraft","bbcKaldiJson","tmpWords","speakerSegmentation","retval","segmentation","test","join","groupWordsInParagraphs","speakerLabel","draftJsContentBlockParagraph","type","entityRanges","autoEdit2ToDraft","autoEdit2Json","autoEditText","autoEditparagraph","autoEditLine","line","tmpWord","startTime","endTime","getSpeaker","speakers","speakerIdx","speechmaticsToDraft","speechmaticsJson","tmpSpeakers","curatedWords","curatePunctuation","element","index","toLowerCase","paragraphStart","getBestAlternativeForWord","assign","alternatives","reduce","prev","current","mapPunctuationItemsToWords","itemsToRemove","punctuation","previousWord","punctuationContent","content","objectSpread","w","appendPunctuationToPreviousWord","filter","item","normalizedWord","currentWord","bestAlternative","start_time","end_time","normalizeWord","amazonTranscribeToDraft","amazonTranscribeJson","items","wordsWithRemappedPunctuation","ibmToDraft","ibmJson","ibmWords","ibmSpeakers","normalisedWords","ibmResults","normalisedResults","timestamps","ibmWord","normalizeIBMWordsList","ibmNormalisedWordsWithSpeakers","draftJsParagraphsResults","ibmParagraph","ibmNormalisedWordsToDraftJs","speaker_labels","lines","speakerSegments","segStart","from","to","findSpeakerSegmentForWord","createEntityMap","blocks","flatEntityRanges","flatten","list","b","Array","isArray","entityMap","sttJsonAdapter","transcriptData","sttJsonType","console","error","txt","blockData","x","exportAdapter","exportFormat","JSON","stringify","ext","draftToTxt","TimedTextEditor","onChange","getCurrentContent","isPauseWhileTypingOn","isPlaying","playMedia","clearTimeout","plauseWhileTypingTimeOut","setTimeout","bind","assertThisInitialized","isEditable","saveTimer","localSave","mediaUrl","handleDoubleClick","event","nativeEvent","target","hasAttribute","parentElement","t","getAttribute","mediaUrlName","fileName","convertToRaw","localStorage","setItem","newLastLocalSavedDate","Date","getWordCount","wordArray","getPlainText","match","setEditorContentState","convertFromRaw","createWithContent","decorator","forceRenderDecorator","getDecorator","newState","newEditorState","customKeyBindingFn","e","keyCode","altKey","getDefaultKeyBinding","preventDefault","handleKeyCommand","command","splitParagraph","currentSelection","isCollapsed","currentContent","splitBlock","splitState","targetSelection","originalBlock","blockMap","selectionBefore","getStartKey","blockSpeaker","wordStartTime","isEndOfParagraph","getEntityAt","getStartOffset","closestEntityToSelection","findClosestEntityKeyToSelectionPoint","entityData","afterMergeContentState","startSelectionOffsetKey","lengthPlainTextForTheBlock","getLength","remainingCharNumber","j","initialSelectionOffset","renderBlockWithTimecodes","component","editable","getCurrentWord","isScrollIntoViewOn","document","querySelector","scrollIntoView","inline","loadData","prevProps","prevState","isPresentInLocalStorage","format","getItem","parse","lastLocalSavedDate","_this2","round","editor","onDoubleClick","scoped","stripPastedStyles","blockRendererFn","keyBindingFn","nextProps","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","Select","options","option","selectPlayerControl","currentValue","handleChange","PlayerControls","setIntervalHelperBackward","interval","setInterval","skipBackward","setIntervalHelperForward","skipForward","clearIntervalHelper","clearInterval","title","promptSetCurrentTime","rollback","faUndo","onMouseDown","onMouseUp","faBackward","faPause","faPlay","faForward","MediaPlayer_Select","playbackRateOptions","playbackRate","setPlayBackRate","handleSaveTranscript","faSave","pictureInPicture","faTv","handleMuteVolume","isMute","faVolumeMute","faVolumeUp","ProgressBar","bar","buttonClick","min","max","returnHotKeys","self","alt+k","priority","handler","togglePlayMedia","displayKeyCombination","alt+l","alt+j","alt+-","decreasePlaybackRate","alt+=","increasePlaybackRate","alt+r","rollBack","alt+t","PLAYBACK_RATES","MediaPlayer","hot_keys","setCurrentTime","newCurrentTime","newCurrentTimeInSeconds","videoRef","readyState","userTimecodeValue","setTimeCodeOffset","newTimeCodeOffSet","rollBackValueInSeconds","tmpDesiredCurrentTime","handlePlayBackRateChange","input","slower","reverse","newSpeed","faster","handleChangeReplayRollbackValue","volume","paused","pauseMedia","pause","play","handleProgressBarClick","getMediaCurrentTime","handlePictureInPicture","pictureInPictureElement","exitPictureInPicture","catch","requestPictureInPicture","alert","hotKeys","previewIsDisplayed","hookSeek","hookPlayMedia","hookIsPlaying","progressBar","MediaPlayer_ProgressBar","playerControlsSection","styles","controlsSection","MediaPlayer_PlayerControls","mediaDuration","onSetCurrentTime","onSetTimecodeOffset","topSection","playerSection","hotkeys","VideoPlayer","handlePlayMedia","isDisplayed","id","playsInline","src","onTimeUpdate","data-testid","onLoadedData","onLoadedDataGetDuration","ref","videoEl","display","Toggle","switchContainer","switch","defaultChecked","defaultValue","handleToggle","slider","TimecodeOffset","resetTimecodeOffset","handleSetTimecodeOffset","setTimecodeOffset","offsetContainer","inputBox","button","Settings","handleSettingsToggle","faWindowClose","Settings_Toggle","defaultValuePauseWhileTyping","handlePauseWhileTyping","defaultValueScrollSync","handleIsScrollIntoViewChange","step","defaultRollBackValueInSeconds","handleRollBackValueInSeconds","handleShowTimecodes","handleShowSpeakers","handlePreviewIsDisplayed","Settings_TimecodeOffset","Shortcuts","hotKeysCheatsheet","keys","shortcut","listItem","shortcutLabel","shortcuts","handleShortcutsToggle","TranscriptEditor","ifPresentRetrieveTranscriptFromLocalStorage","timedTextEditor","timedTextEditorRef","info","loadLocalSavedData","handleWordClick","handleTimeUpdate","handleIsPlaying","isChecked","checked","rollBackValue","forceUpdate","showSettings","showShortcuts","getEditorContent","currentDuration","currentDurationWithOffset","durationInSeconds","handleChangePreviewViewWidth","newPreviewViewWidth","previewViewWidth","createRef","lastLocalSavedTime","videoPlayer","MediaPlayer_VideoPlayer","mediaControls","TranscriptEditor_MediaPlayer","foo","TranscriptEditor_Settings","Settings_Shortcuts","TranscriptEditor_TimedTextEditor","faMousePointer","faICursor","faKeyboard","tooltip","es","fadeDuration","fadeEasing","placement","radius","border","background","color","faQuestionCircle","Fragment","faCog","SttTypeSelect","disabled","ExportFormatSelect","App","handleIsTextEditable","isTextEditable","handleSttTypeChange","defineProperty","handleExportFormatChange","log","exportTranscript","_this$transcriptEdito","transcriptEditorRef","download","filename","contentType","blob","Blob","href","window","URL","createObjectURL","click","clearLocalStorage","clear","analyticsEvents","toConsumableArray","handleChangeTranscriptTitle","newTitle","handleChangeTranscriptName","sttType","kaldiTedTalkTranscript","files","file","canPlayType","fileURL","fr","FileReader","onload","readAsText","_this3","rel","faGithub","loadDemo","handleChangeLoadMedia","handleChangeLoadMediaUrl","select_stt_json_type","handleChangeLoadTranscriptJson","select_export_format","lib_TranscriptEditor","height","width","render","src_App","getElementById","color-mid-grey","color-dark-grey","color-lightest-grey","DraftEditor-root"],"mappings":"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","file":"static/js/main.f5e38637.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3UPB5\",\"header\":\"Settings_header__3Y30x\",\"closeButton\":\"Settings_closeButton__1i5o9\",\"controlsContainer\":\"Settings_controlsContainer__2E90Z\",\"settingElement\":\"Settings_settingElement__2ZeKY\",\"label\":\"Settings_label__1NQsi\",\"rollbackValue\":\"Settings_rollbackValue__3dic-\",\"timecodeLabel\":\"Settings_timecodeLabel__WyMOt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"color-labs-red\":\"#a0372d\",\"container\":\"TranscriptEditor_container__28OEI\",\"help\":\"TranscriptEditor_help__buCMC\",\"helpMessage\":\"TranscriptEditor_helpMessage__fa8A5\",\"icon\":\"TranscriptEditor_icon__2Lobp\",\"header\":\"TranscriptEditor_header__3t9qT\",\"nav\":\"TranscriptEditor_nav__173Ja\",\"grid\":\"TranscriptEditor_grid__1nFAG\",\"row\":\"TranscriptEditor_row__CxcVM\",\"settingsContainer\":\"TranscriptEditor_settingsContainer__2y-aY\",\"settingsButton\":\"TranscriptEditor_settingsButton__2_TCj\",\"aside\":\"TranscriptEditor_aside__1f7EK\",\"main\":\"TranscriptEditor_main__2aOzn\",\"keyboardShortcutsButon\":\"TranscriptEditor_keyboardShortcutsButon__KTr7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-shilo\":\"#E2A9A2\",\"color-darkest-grey\":\"#282828\",\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"playerControls\":\"PlayerControls_playerControls__3emd7\",\"playerButton\":\"PlayerControls_playerButton___xv7e\",\"playBackRate\":\"PlayerControls_playBackRate__2IcvZ\",\"timeBox\":\"PlayerControls_timeBox__2T0JQ\",\"currentTime\":\"PlayerControls_currentTime__QZjCv\",\"separator\":\"PlayerControls_separator__f03Pz\",\"duration\":\"PlayerControls_duration__l__Bv\",\"btnsGroup\":\"PlayerControls_btnsGroup__P0E3Y\",\"pip\":\"PlayerControls_pip__3gcKv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\",\"demoNavItem\":\"src_demoNavItem__3uYe9\",\"demoInput\":\"src_demoInput__3PALc\",\"demoNav\":\"src_demoNav__RG1XI\"};","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Word extends PureComponent {\n  generateConfidence = (data) => {\n    // handling edge case where confidence score not present\n    if (data.confidence) {\n      return data.confidence > 0.6 ? 'high' : 'low';\n    }\n\n    return 'high';\n  }\n\n  generatePreviousTimes = (data) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < data.start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (data.start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((data.start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(data.start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n      <span\n        data-start={ data.start }\n        data-end={ data.end }\n        data-confidence = { this.generateConfidence(data) }\n        data-prev-times = { this.generatePreviousTimes(data) }\n        data-entity-key={ data.key }\n        className=\"Word\">\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  entityKey: PropTypes.string,\n  children: PropTypes.array\n};\n\nexport default Word;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons';\n\nimport style from './WrapperBlock.module.css';\n\nclass SpeakerLabel extends PureComponent {\n  render() {\n    return (\n      <span className={ style.speaker }\n        onClick={ this.props.handleOnClickEdit }>\n        <span className={ style.EditLabel }>\n          <FontAwesomeIcon icon={ faUserEdit } />\n        </span>\n        {this.props.name}\n      </span>\n    );\n  }\n}\n\nSpeakerLabel.propTypes = {\n  name: PropTypes.string,\n  handleOnClickEdit: PropTypes.func\n};\n\nexport default SpeakerLabel;\n","/**\n* Raised in this comment https://github.com/bbc/react-transcript-editor/pull/9\n* abstracted from https://github.com/bbc/newslabs-cdn/blob/master/js/20-bbcnpf.utils.js\n* In broadcast VIDEO, timecode is NOT hh:mm:ss:ms, it's hh:mm:ss:ff where ff is frames,\n* dependent on the framerate of the media concerned.\n* `hh:mm:ss:ff`\n*/\n\n/**\n * Helper function\n * Rounds to the 14milliseconds boundaries\n * Time in video can only \"exist in\" 14milliseconds boundaries.\n * This makes it possible for the HTML5 player to be frame accurate.\n * @param {*} seconds\n * @param {*} fps\n */\nconst normalisePlayerTime = function (seconds, fps) {\n  return Number((1.0 / fps * Math.floor(Number((fps * seconds).toPrecision(12)))).toFixed(2));\n};\n\n/*\n* @param {*} seconds\n* @param {*} fps\n*/\nconst secondsToTimecode = function (seconds, framePerSeconds) {\n  // written for PAL non-drop timecode\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n\n  const normalisedSeconds = normalisePlayerTime(seconds, fps);\n\n  const wholeSeconds = Math.floor(normalisedSeconds);\n  const frames = ((normalisedSeconds - wholeSeconds) * fps).toFixed(2);\n\n  // prepends zero - example pads 3 to 03\n  function _padZero(n) {\n    if (n < 10) return `0${ parseInt(n) }`;\n\n    return parseInt(n);\n  }\n\n  return `${ _padZero((wholeSeconds / 60 / 60) % 60)\n  }:${\n    _padZero((wholeSeconds / 60) % 60)\n  }:${\n    _padZero(wholeSeconds % 60)\n  }:${\n    _padZero(frames) }`;\n};\n\nexport default secondsToTimecode;\n","/**\n * Helperf unction\n * @param {*} tc\n * @param {*} fps\n */\nconst timecodeToFrames = function (tc, fps) {\n  // TODO make 29.97 fps drop-frame aware - works for 25 only.\n\n  const s = tc.split(':');\n  let frames = parseInt(s[3]);\n  frames += parseInt(s[2]) * fps;\n  frames += parseInt(s[1]) * (fps * 60);\n  frames += parseInt(s[0]) * (fps * 60 * 60);\n\n  return frames;\n};\n\n/**\n * Convert broadcast timecodes to seconds\n * @param {*} tc - `hh:mm:ss:ff`\n * @param {*} framePerSeconds - defaults to 25 if not provided\n */\nconst timecodeToSecondsHelper = function (tc, framePerSeconds) {\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n  const frames = timecodeToFrames(tc, fps);\n\n  return Number(Number(frames / fps).toFixed(2));\n};\n\nexport default timecodeToSecondsHelper;\n","const countColon = timecode => timecode.split(':').length;\n\nconst includesFullStop = timecode => timecode.includes('.');\n\nconst isOneDigit = str => str.length === 1;\n\nconst padTimeToTimecode = (time) => {\n  if (typeof time === 'string') {\n    switch (countColon(time)) {\n    case 4:\n      // is already in timecode format\n      // hh:mm:ss:ff\n      return time;\n    case 2:\n      // m:ss\n      if (isOneDigit(time.split(':')[0])) {\n        return `00:0${ time }:00`;\n      }\n\n      return `00:${ time }:00`;\n    case 3:\n      // hh:mm:ss\n      return `${ time }:00`;\n    default:\n      // mm.ss\n      if (includesFullStop(time)) {\n        // m.ss\n        if (isOneDigit(time.split('.')[0])) {\n          return `00:0${ time.split('.')[0] }:${ time.split('.')[1] }:00`;\n        }\n\n        return `00:${ time.replace('.', ':') }:00`;\n      }\n\n      // if just int, then it's seconds\n      // s\n      if (isOneDigit(time)) {\n        return `00:00:0${ time }:00`;\n      }\n\n      return `00:00:${ time }:00`;\n    }\n    // edge case if it's number return a number coz cannot refactor\n    // TODO: might need to refactor and move this elsewhere\n  } else {\n    return time;\n  }\n};\n\nexport default padTimeToTimecode;\n","/**\n * Wrapping around \"time stamps\" and timecode conversion modules\n * To provide more support for variety of formats.\n */\nimport secondsToTimecode from './secondsToTimecode';\nimport timecodeToSecondsHelper from './timecodeToSeconds';\nimport padTimeToTimecode from './padTimeToTimecode';\n\n/**\n * @param {*} time\n * Can take as input timecodes in the following formats\n * - hh:mm:ss:ff\n * - mm:ss\n * - m:ss\n * - ss - seconds --> if it's already in seconds then it just returns seconds\n * - hh:mm:ff\n * @todo could be refactored with some helper functions for clarity\n */\nconst timecodeToSeconds = (time) => {\n  if (typeof time === 'string') {\n    const resultPadded = padTimeToTimecode(time);\n    const resultConverted = timecodeToSecondsHelper(resultPadded);\n\n    return resultConverted;\n  }\n\n  // assuming it receive timecode as seconds as string '600'\n  return parseFloat(time);\n};\n\nconst shortTimecode = (time) => {\n  const timecode = secondsToTimecode(time);\n\n  return timecode.slice(0, -3);\n};\n\nexport { secondsToTimecode, timecodeToSeconds, shortTimecode };\n","import React from 'react';\nimport { EditorBlock, Modifier, EditorState, SelectionState } from 'draft-js';\n\nimport SpeakerLabel from './SpeakerLabel';\nimport { shortTimecode, secondsToTimecode } from '../../Util/timecode-converter/';\n\nimport style from './WrapperBlock.module.css';\n\nclass WrapperBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      speaker: '',\n      start: 0,\n      timecodeOffset: this.props.blockProps.timecodeOffset\n    };\n  }\n\n  componentDidMount() {\n    const { block } = this.props;\n    const speaker = block.getData().get('speaker');\n\n    const start = block.getData().get('start');\n\n    this.setState({\n      speaker: speaker,\n      start: start\n    });\n  }\n\n  handleOnClickEdit = () => {\n    const newSpeakerName = prompt('New Speaker Name?');\n\n    if (newSpeakerName !== '' && newSpeakerName !== null) {\n      this.setState({ speaker: newSpeakerName });\n      if (this.props.blockProps.handleAnalyticsEvents !== undefined) {\n        this.props.blockProps.handleAnalyticsEvents({\n          category: 'WrapperBlock',\n          action: 'handleOnClickEdit',\n          name: 'newSpeakerName',\n          value: newSpeakerName\n        });\n      }\n\n      // From docs: https://draftjs.org/docs/api-reference-selection-state#keys-and-offsets\n      // selection points are tracked as key/offset pairs,\n      // where the key value is the key of the ContentBlock where the point is positioned\n      // and the offset value is the character offset within the block.\n\n      // Get key of the currentBlock\n      const keyForCurrentCurrentBlock = this.props.block.getKey();\n      // create empty selection for current block\n      // https://draftjs.org/docs/api-reference-selection-state#createempty\n      const currentBlockSelection = SelectionState.createEmpty(keyForCurrentCurrentBlock);\n      const editorStateWithSelectedCurrentBlock = EditorState.acceptSelection(this.props.blockProps.editorState, currentBlockSelection);\n\n      const currentBlockSelectionState = editorStateWithSelectedCurrentBlock.getSelection();\n      const newBlockDataWithSpeakerName = { speaker: newSpeakerName };\n\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const newContentState = Modifier.mergeBlockData(\n        this.props.contentState,\n        currentBlockSelectionState,\n        newBlockDataWithSpeakerName\n      );\n\n      this.props.blockProps.setEditorNewContentState(newContentState);\n    }\n  }\n\n  handleTimecodeClick = () => {\n    this.props.blockProps.onWordClick(this.state.start);\n    if (this.props.blockProps.handleAnalyticsEvents !== undefined) {\n      this.props.blockProps.handleAnalyticsEvents({\n        category: 'WrapperBlock',\n        action: 'handleTimecodeClick',\n        name: 'onWordClick',\n        value: secondsToTimecode(this.state.start)\n      });\n    }\n\n  }\n\n  render() {\n    let startTimecode = this.state.start;\n    if (this.props.blockProps.timecodeOffset) {\n      startTimecode += this.props.blockProps.timecodeOffset;\n    }\n\n    const speakerElement = <SpeakerLabel\n      name={ this.state.speaker }\n      handleOnClickEdit={ this.handleOnClickEdit }\n    />;\n\n    const timecodeElement = <span className={ style.time } onClick={ this.handleTimecodeClick }>{shortTimecode(startTimecode)}</span>;\n\n    return (\n      <div className={ style.WrapperBlock }>\n        <div className={ style.markers }\n          contentEditable={ false }>\n          {this.props.blockProps.showSpeakers ? speakerElement : ''}\n\n          {this.props.blockProps.showTimecodes ? timecodeElement : ''}\n        </div>\n        <div className={ style.text }>\n          <EditorBlock { ...this.props } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WrapperBlock;\n","/**\n * Helper function to generate draft.js entities,\n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\n\n/**\n*  @param {json} words  - List of words\n*  @param {string} wordAttributeName - eg 'punct' or 'text' or etc.\n* attribute for the word object containing the text. eg word ={ punct:'helo', ... }\n*  or eg word ={ text:'helo', ... }\n*/\nconst generateEntitiesRanges = (words, wordAttributeName) => {\n  let position = 0;\n  return words.map((word) => {\n    const result = {\n      start: word.start,\n      end: word.end,\n      confidence: word.confidence,\n      text: word[wordAttributeName],\n      offset: position,\n      length: word[wordAttributeName].length,\n      key: Math.random()\n        .toString(36)\n        .substring(6),\n    };\n    // increase position counter - to determine word offset in paragraph\n    position = position + word[wordAttributeName].length + 1;\n\n    return result;\n  });\n};\n\nexport default generateEntitiesRanges;\n","/**\nedge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  // add speakers to each word\n  const wordsWithSpeakers = addSpeakerToEachWord(words, segments.segments);\n  // group words by speakers sequentially\n  const result = groupWordsBySpeaker(wordsWithSpeakers);\n\n  return result;\n};\n\n/**\n* Add speakers to each words\n* if it doesn't have add unknown attribute `U_UKN`\n* @param {*} words\n* @param {*} segments\n*/\nfunction addSpeakerToEachWord(words, segments) {\n  const tmpWordsWithSpeakers = [];\n  words.forEach((word) => {\n    const tmpSpeakerSegment = findSegmentForWord(word, segments);\n\n    word.speaker = formatSpeakerName(tmpSpeakerSegment.speaker);\n    tmpWordsWithSpeakers.push(word);\n  });\n\n  return tmpWordsWithSpeakers;\n}\n\n/**\n * Groups Words by speaker attribute\n * @param {array} wordsWithSpeakers - same as kaldi words list but with a `speaker` label attribute on each word\n * @return {array} - list of paragraph objcts, with words, text and sepaker attributes.\n * where words is an array and the other two are strings.\n */\nfunction groupWordsBySpeaker(wordsWithSpeakers) {\n  let currentSpeaker = wordsWithSpeakers[0].speaker;\n  const results = [ ];\n  let paragraph = { words: [], text: '', speaker: '' };\n  wordsWithSpeakers.forEach((word) => {\n    // if current speaker same as word speaker add words to paragraph\n    if (currentSpeaker === word.speaker) {\n      paragraph.words.push(word);\n      paragraph.text += word.punct + ' ';\n      paragraph.speaker = currentSpeaker;\n    }\n    // if it's not same speaker\n    else {\n      // update current speaker\n      currentSpeaker = word.speaker;\n      // remove spacing in text\n      paragraph.text = paragraph.text.trim();\n      //save  previous paragraph\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: '', speaker: 'U_UKN' };\n      // add words attributes to new\n      paragraph.words.push(word);\n      paragraph.text += word.punct + ' ';\n    }\n  });\n  // add last paragraph\n  results.push(paragraph);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    const segEnd = seg.start + seg.duration;\n\n    return ((word.start >= seg.start) && (word.end <= segEnd));\n  });\n  // if find doesn't find any matches it returns an undefined\n  if (tmpSegment === undefined) {\n    // covering edge case orphan word not belonging to any segments\n    // adding UKN speaker label\n    return {\n      '@type': 'Segment',\n      // keeping both speaker id and gender as this is used later\n      // to format speaker label combining the two\n      speaker: { '@id': 'UKN', gender: 'U' }\n    };\n  } else {\n    // find returns the first element that matches the criteria\n    return tmpSegment;\n  }\n}\n\n/**\n* formats kaldi speaker object into a string\n* Combining Gender and speaker Id\n* @param {object} speaker - BBC kaldi speaker object\n* @return {string} -\n*/\nfunction formatSpeakerName(speaker) {\n  return speaker.gender + '_' + speaker['@id'];\n}\n\nexport default groupWordsInParagraphsBySpeakers;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Editor,\n  EditorState,\n  CompositeDecorator,\n  convertFromRaw,\n  convertToRaw,\n  getDefaultKeyBinding,\n  Modifier\n} from 'draft-js';\n\nimport Word from './Word';\nimport WrapperBlock from './WrapperBlock';\n\nimport sttJsonAdapter from '../../Util/adapters/index.js';\nimport exportAdapter from '../../Util/export-adapters/index.js';\nimport style from './index.module.css';\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData,\n      isEditable: this.props.isEditable,\n      sttJsonType: this.props.sttJsonType,\n      timecodeOffset: this.props.timecodeOffset,\n      showSpeakers: this.props.showSpeakers,\n      showTimecodes: this.props.showTimecodes,\n      // inputCount: 0,\n      currentWord: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n\n      return {\n        transcriptData: nextProps.transcriptData,\n        isEditable: nextProps.isEditable,\n        timecodeOffset: nextProps.timecodeOffset,\n        showSpeakers: nextProps.showSpeakers,\n        showTimecodes: nextProps.showTimecodes\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (prevState.transcriptData !== this.state.transcriptData)\n      && ( this.props.mediaUrl !== null && !this.isPresentInLocalStorage(this.props.mediaUrl) )\n    ) {\n      this.loadData();\n    }\n    if (prevState.timecodeOffset !== this.state.timecodeOffset\n      || prevState.showSpeakers !== this.state.showSpeakers\n      || prevState.showTimecodes !== this.state.showTimecodes) {\n      // forcing a re-render is an expensive operation and\n      // there might be a way of optimising this at a later refactor (?)\n      // the issue is that WrapperBlock is not update on TimedTextEditor\n      // state change otherwise.\n      // for now compromising on this, as setting timecode offset, and\n      // display preferences for speakers and timecodes are not expected to\n      // be very frequent operations but rather one time setup in most cases.\n      this.forceRenderDecorator();\n    }\n  }\n\n  onChange = (editorState) => {\n    // https://draftjs.org/docs/api-reference-editor-state#lastchangetype\n    // https://draftjs.org/docs/api-reference-editor-change-type\n    // doing editorStateChangeType === 'insert-characters'  is triggered even\n    // outside of draftJS eg when clicking play button so using this instead\n    // see issue https://github.com/facebook/draft-js/issues/1060\n    if (this.state.editorState.getCurrentContent() !== editorState.getCurrentContent()) {\n      if (this.props.isPauseWhileTypingOn) {\n        if (this.props.isPlaying()) {\n          this.props.playMedia(false);\n          // Pause video for X seconds\n          const pauseWhileTypingIntervalInMilliseconds = 3000;\n          // resets timeout\n          clearTimeout(this.plauseWhileTypingTimeOut);\n          this.plauseWhileTypingTimeOut = setTimeout(function() {\n            // after timeout starts playing again\n            this.props.playMedia(true);\n          }.bind(this), pauseWhileTypingIntervalInMilliseconds);\n        }\n      }\n    }\n\n    if (this.state.isEditable) {\n      this.setState(() => ({\n        editorState\n      }), () => {\n        // saving when user has stopped typing for more then five seconds\n        if (this.saveTimer !== undefined) {\n          clearTimeout(this.saveTimer);\n        }\n        this.saveTimer = setTimeout(() => {\n          this.localSave(this.props.mediaUrl);\n        }, 1000);\n      });\n    }\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = sttJsonAdapter(this.props.transcriptData, this.props.sttJsonType);\n      this.setEditorContentState(blocks);\n    }\n  }\n\n  getEditorContent(exportFormat) {\n    const format = exportFormat || 'draftjs';\n\n    return exportAdapter(convertToRaw(this.state.editorState.getCurrentContent()), format);\n  }\n\n  // click on words - for navigation\n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event) => {\n    // nativeEvent --> React giving you the DOM event\n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      this.props.onWordClick(t);\n    }\n  }\n\n  localSave = () => {\n    clearTimeout(this.saveTimer);\n    let mediaUrlName = this.props.mediaUrl;\n    // if using local media instead of using random blob name\n    // that makes it impossible to retrieve from on page refresh\n    // use file name\n    if (this.props.mediaUrl.includes('blob')) {\n      mediaUrlName = this.props.fileName;\n    }\n\n    const data = convertToRaw(this.state.editorState.getCurrentContent());\n    localStorage.setItem(`draftJs-${ mediaUrlName }`, JSON.stringify(data));\n    const newLastLocalSavedDate = new Date().toString();\n    localStorage.setItem(`timestamp-${ mediaUrlName }`, newLastLocalSavedDate);\n\n    // return newLastLocalSavedDate;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isPresentInLocalStorage(mediaUrl) {\n    if (mediaUrl !== null) {\n      let mediaUrlName = mediaUrl;\n\n      if (mediaUrl.includes('blob')) {\n        mediaUrlName = this.props.fileName;\n      }\n\n      const data = localStorage.getItem(`draftJs-${ mediaUrlName }`);\n      if (data !== null) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  loadLocalSavedData(mediaUrl) {\n    let mediaUrlName = mediaUrl;\n    if (mediaUrl.includes('blob')) {\n      mediaUrlName = this.props.fileName;\n    }\n    const data = JSON.parse(localStorage.getItem(`draftJs-${ mediaUrlName }`));\n    if (data !== null) {\n      const lastLocalSavedDate = localStorage.getItem(`timestamp-${ mediaUrlName }`);\n      this.setEditorContentState(data);\n\n      return lastLocalSavedDate;\n    }\n\n    return '';\n  }\n\n  // originally from\n  // https://github.com/draft-js-plugins/draft-js-plugins/blob/master/draft-js-counter-plugin/src/WordCounter/index.js#L12\n  getWordCount = (editorState) => {\n    const plainText = editorState.getCurrentContent().getPlainText('');\n    const regex = /(?:\\r\\n|\\r|\\n)/g; // new line, carriage return, line feed\n    const cleanString = plainText.replace(regex, ' ').trim(); // replace above characters w/ space\n    const wordArray = cleanString.match(/\\S+/g); // matches words according to whitespace\n\n    return wordArray ? wordArray.length : 0;\n  }\n\n  /**\n  * @param {object} data.entityMap - draftJs entity maps - used by convertFromRaw\n  * @param {object} data.blocks - draftJs blocks - used by convertFromRaw\n  * set DraftJS Editor content state from blocks\n  * contains blocks and entityMap\n  */\n  setEditorContentState = (data) => {\n    const contentState = convertFromRaw(data);\n    // eslint-disable-next-line no-use-before-define\n    const editorState = EditorState.createWithContent(contentState, decorator);\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TimedTextEditor',\n        action: 'setEditorContentState',\n        name: 'getWordCount',\n        value: this.getWordCount(editorState)\n      });\n    }\n\n    this.setState({ editorState });\n  }\n\n  // Helper function to re-render this component\n  // used to re-render WrapperBlock on timecode offset change\n  // or when show / hide preferences for speaker labels and timecodes change\n  forceRenderDecorator = () => {\n    // const { editorState, updateEditorState } = this.props;\n    const contentState = this.state.editorState.getCurrentContent();\n    const decorator = this.state.editorState.getDecorator();\n\n    const newState = EditorState.createWithContent(\n      contentState,\n      decorator\n    );\n\n    // this.setEditorNewContentState(newState);\n    const newEditorState = EditorState.push(newState, contentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n  * Update Editor content state\n  */\n  setEditorNewContentState = (newContentState) => {\n    const newEditorState = EditorState.push(this.state.editorState, newContentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n   * Listen for draftJs custom key bindings\n   */\n  customKeyBindingFn = (e) => {\n    const enterKey = 13;\n    const spaceKey = 32;\n    const kKey = 75;\n    const lKey = 76;\n    const jKey = 74;\n    const equalKey = 187;//used for +\n    const minusKey = 189; // -\n    const rKey = 82;\n    const tKey = 84;\n\n    if (e.keyCode === enterKey ) {\n      return 'split-paragraph';\n    }\n    // if alt key is pressed in combination with these other keys\n    if (e.altKey && ((e.keyCode === spaceKey)\n    || (e.keyCode === spaceKey)\n    || (e.keyCode === kKey)\n    || (e.keyCode === lKey)\n    || (e.keyCode === jKey)\n    || (e.keyCode === equalKey)\n    || (e.keyCode === minusKey)\n    || (e.keyCode === rKey)\n    || (e.keyCode === tKey))\n    ) {\n      e.preventDefault();\n\n      return 'keyboard-shortcuts';\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  /**\n   * Handle draftJs custom key commands\n   */\n  handleKeyCommand = (command) => {\n    if (command === 'split-paragraph') {\n      this.splitParagraph();\n    }\n\n    if (command === 'keyboard-shortcuts') {\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function to handle splitting paragraphs with return key\n   * on enter key, perform split paragraph at selection point.\n   * Add timecode of next word after split to paragraph\n   * as well as speaker name to new paragraph\n   */\n  splitParagraph = () => {\n    // https://github.com/facebook/draft-js/issues/723#issuecomment-367918580\n    // https://draftjs.org/docs/api-reference-selection-state#start-end-vs-anchor-focus\n    const currentSelection = this.state.editorState.getSelection();\n    // only perform if selection is not selecting a range of words\n    // in that case, we'd expect delete + enter to achieve same result.\n    if (currentSelection.isCollapsed()) {\n      const currentContent = this.state.editorState.getCurrentContent();\n      // https://draftjs.org/docs/api-reference-modifier#splitblock\n      const newContentState = Modifier.splitBlock(currentContent, currentSelection);\n      // https://draftjs.org/docs/api-reference-editor-state#push\n      const splitState = EditorState.push(this.state.editorState, newContentState, 'split-block');\n      const targetSelection = splitState.getSelection();\n\n      const originalBlock = currentContent.blockMap.get(newContentState.selectionBefore.getStartKey());\n      const originalBlockData = originalBlock.getData();\n      const blockSpeaker = originalBlockData.get('speaker');\n\n      let wordStartTime = 'NA';\n      // eslint-disable-next-line prefer-const\n      let isEndOfParagraph = false;\n      // identify the entity (word) at the selection/cursor point on split.\n      // eslint-disable-next-line prefer-const\n      let entityKey = originalBlock.getEntityAt(currentSelection.getStartOffset());\n      // if there is no word entity associated with a char then there is no entity key\n      // at that selection point\n      if (entityKey === null) {\n        const closestEntityToSelection = this.findClosestEntityKeyToSelectionPoint(currentSelection, originalBlock);\n        entityKey = closestEntityToSelection.entityKey;\n        isEndOfParagraph = closestEntityToSelection.isEndOfParagraph;\n        // handle edge case when it doesn't find a closest entity (word)\n        // eg pres enter on an empty line\n        if (entityKey === null) {\n          return 'not-handled';\n        }\n      }\n      // if there is an entityKey at or close to the selection point\n      // can get the word startTime. for the new paragraph.\n      const entityInstance = currentContent.getEntity(entityKey);\n      const entityData = entityInstance.getData();\n      if (isEndOfParagraph) {\n        // if it's end of paragraph use end time of word for new paragraph\n        wordStartTime = entityData.end;\n      }\n      else {\n        wordStartTime = entityData.start;\n      }\n      // split paragraph\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const afterMergeContentState = Modifier.mergeBlockData(\n        splitState.getCurrentContent(),\n        targetSelection,\n        {\n          'start': wordStartTime,\n          'speaker': blockSpeaker\n        }\n      );\n      this.setEditorNewContentState(afterMergeContentState);\n\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function for splitParagraph\n   * to find the closest entity (word) to a selection point\n   * that does not fall on an entity to begin with\n   * Looks before if it's last char in a paragraph block.\n   * After for everything else.\n   */\n  findClosestEntityKeyToSelectionPoint = (currentSelection, originalBlock) => {\n    // set defaults\n    let entityKey = null;\n    let isEndOfParagraph = false;\n\n    // selection offset from beginning of the paragraph block\n    const startSelectionOffsetKey = currentSelection.getStartOffset();\n    // length of the plain text for the ContentBlock\n    const lengthPlainTextForTheBlock = originalBlock.getLength();\n    // number of char from selection point to end of paragraph\n    const remainingCharNumber = lengthPlainTextForTheBlock - startSelectionOffsetKey;\n    // if it's the last char in the paragraph - get previous entity\n    if (remainingCharNumber === 0 ) {\n      isEndOfParagraph = true;\n      for (let j = lengthPlainTextForTheBlock; j > 0 ; j--) {\n        entityKey = originalBlock.getEntityAt(j);\n        if (entityKey !== null) {\n          // if it finds it then return\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n    // if it's first char or another within the block - get next entity\n    else {\n      let initialSelectionOffset = currentSelection.getStartOffset();\n      for (let i = 0; i < remainingCharNumber ; i++) {\n        initialSelectionOffset += i;\n        entityKey = originalBlock.getEntityAt(initialSelectionOffset);\n        // if it finds it then return\n        if (entityKey !== null) {\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n\n    // cover edge cases where it doesn't find it\n    return { entityKey, isEndOfParagraph };\n  }\n\n  renderBlockWithTimecodes = () => {\n    return {\n      component: WrapperBlock,\n      editable: true,\n      props: {\n        showSpeakers: this.state.showSpeakers,\n        showTimecodes: this.state.showTimecodes,\n        timecodeOffset: this.state.timecodeOffset,\n        editorState: this.state.editorState,\n        setEditorNewContentState: this.setEditorNewContentState,\n        onWordClick: this.props.onWordClick,\n        handleAnalyticsEvents: this.props.handleAnalyticsEvents\n      }\n    };\n  }\n\n  getCurrentWord = () => {\n    const currentWord = {\n      start: 'NA',\n      end: 'NA'\n    };\n\n    if (this.state.transcriptData) {\n      const contentState = this.state.editorState.getCurrentContent();\n      // TODO: using convertToRaw here might be slowing down performance(?)\n      const contentStateConvertEdToRaw = convertToRaw(contentState);\n      const entityMap = contentStateConvertEdToRaw.entityMap;\n\n      for (var entityKey in entityMap) {\n        const entity = entityMap[entityKey];\n        const word = entity.data;\n\n        if (word.start <= this.props.currentTime && word.end >= this.props.currentTime) {\n          currentWord.start = word.start;\n          currentWord.end = word.end;\n        }\n      }\n    }\n\n    if (currentWord.start !== 'NA') {\n      if (this.props.isScrollIntoViewOn) {\n        const currentWordElement = document.querySelector(`span.Word[data-start=\"${ currentWord.start }\"]`);\n        currentWordElement.scrollIntoView({ block: 'nearest', inline: 'center' });\n      }\n    }\n\n    return currentWord;\n  }\n\n  render() {\n    const currentWord = this.getCurrentWord();\n    const highlightColour = '#69e3c2';\n    const unplayedColor = '#767676';\n    const correctionBorder = '1px dotted blue';\n\n    // Time to the nearest half second\n    const time = Math.round(this.props.currentTime * 4.0) / 4.0;\n\n    const editor = (\n      <section\n        className={ style.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }\n        // TODO: decide if on mobile want to have a way to \"click\" on words\n        // to play corresponding media\n        // a double tap would be the ideal solution\n        // onTouchStart={ event => this.handleDoubleClick(event) }\n      >\n        <style scoped>\n          {`span.Word[data-start=\"${ currentWord.start }\"] { background-color: ${ highlightColour }; text-shadow: 0 0 0.01px black }`}\n          {`span.Word[data-start=\"${ currentWord.start }\"]+span { background-color: ${ highlightColour } }`}\n          {`span.Word[data-prev-times~=\"${ Math.floor(time) }\"] { color: ${ unplayedColor } }`}\n          {`span.Word[data-prev-times~=\"${ time }\"] { color: ${ unplayedColor } }`}\n          {`span.Word[data-confidence=\"low\"] { border-bottom: ${ correctionBorder } }`}\n        </style>\n\n        <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n          blockRendererFn={ this.renderBlockWithTimecodes }\n          handleKeyCommand={ command => this.handleKeyCommand(command) }\n          keyBindingFn={ e => this.customKeyBindingFn(e) }\n        />\n      </section>\n    );\n\n    return (\n      <section>\n        { this.props.transcriptData !== null ? editor : null }\n      </section>\n    );\n  }\n}\n\n// DraftJs decorator to recognize which entity is which\n// and know what to apply to what component\nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs\n// defines what to use to render the entity\nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word,\n  },\n]);\n\nTimedTextEditor.propTypes = {\n  transcriptData: PropTypes.object,\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  onWordClick: PropTypes.func,\n  sttJsonType: PropTypes.string,\n  isPlaying: PropTypes.func,\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.number,\n  isScrollIntoViewOn: PropTypes.bool,\n  isPauseWhileTypingOn: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleAnalyticsEvents: PropTypes.func,\n  showSpeakers: PropTypes.bool,\n  showTimecodes: PropTypes.bool,\n  fileName: PropTypes.string\n};\n\nexport default TimedTextEditor;\n","/**\n * Convert BBC Kaldi json to draftJs\n * see `sample` folder for example of input and output as well as `example-usage.js`\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = words => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach(word => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      paragraph.text = paragraph.text.join(' ');\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\nconst bbcKaldiToDraft = bbcKaldiJson => {\n  const results = [];\n  let tmpWords;\n  let speakerSegmentation = null;\n  let wordsByParagraphs = [];\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n    if (bbcKaldiJson.retval.segmentation !== undefined) {\n      speakerSegmentation = bbcKaldiJson.retval.segmentation;\n    }\n  } else {\n    tmpWords = bbcKaldiJson.words;\n    if (bbcKaldiJson.segmentation !== undefined) {\n      speakerSegmentation = bbcKaldiJson.segmentation;\n    }\n  }\n\n  if (speakerSegmentation === null) {\n    wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n  } else {\n    wordsByParagraphs = groupWordsInParagraphsBySpeakers(tmpWords, speakerSegmentation);\n  }\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    // if paragraph contain words\n    // eg sometimes the speaker segmentation might not contain words :man-shrugging:\n    if (paragraph.words[0] !== undefined) {\n      let speakerLabel = `TBC ${ i }`;\n      if (speakerSegmentation !== null) {\n        speakerLabel = paragraph.speaker;\n      }\n\n      const draftJsContentBlockParagraph = {\n        text: paragraph.text,\n        type: 'paragraph',\n        data: {\n          speaker: speakerLabel,\n          words: paragraph.words,\n          start: paragraph.words[0].start\n        },\n        // the entities as ranges are each word in the space-joined text,\n        // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n        entityRanges: generateEntitiesRanges(paragraph.words, 'punct') // wordAttributeName\n      };\n      results.push(draftJsContentBlockParagraph);\n    }\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","/**\n * Convert autoEdit2 Json to draftJS\n * see `sample` folder for example of input and output as well as `example-usage.js`\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index';\n\n/**\n * groups words list from autoEdit transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words objects from autoEdit transcript\n */\n\nconst groupWordsInParagraphs = (autoEditText) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  autoEditText.forEach((autoEditparagraph) => {\n    autoEditparagraph.paragraph.forEach((autoEditLine) => {\n      autoEditLine.line.forEach((word) => {\n        // adjusting time reference attributes from\n        // `startTime` `endTime` to `start` `end`\n        // for word object\n        const tmpWord = {\n          text: word.text,\n          start: word.startTime,\n          end: word.endTime,\n        };\n        //  if word contains punctuation\n        if (/[.?!]/.test(word.text)) {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n          results.push(paragraph);\n          // reset paragraph\n          paragraph = { words: [], text: [] };\n        } else {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n        }\n      });\n    });\n  });\n\n  return results;\n};\n\nconst autoEdit2ToDraft = (autoEdit2Json) => {\n  const results = [];\n  const tmpWords = autoEdit2Json.text;\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'text'),\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  // console.log(JSON.stringify(results,null,2))\n  return results;\n};\n\nexport default autoEdit2ToDraft;\n","/**\n *  Convert Speechmatics Json to DraftJs\n *  see `sample` folder for example of input and output as well as `example-usage.js`\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from speechmatics based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @todo As this function is also used in the bbc-kaldi adapter, should it be refactored into its own file?\n * @param {array} words - array of words objects from speechmatics transcript\n */\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach((word) => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\n/**\n * Determines the speaker of a paragraph by comparing the start time of the paragraph with\n * the speaker times.\n * @param {float} start - Starting point of paragraph\n * @param {array} speakers - list of all speakers with start and end time\n */\nconst getSpeaker = (start, speakers) => {\n  for (var speakerIdx in speakers) {\n    const speaker = speakers[speakerIdx];\n    if (start >= speaker.start & start < speaker.end) {\n      return speaker.name;\n    }\n  }\n\n  return 'UNK';\n};\n\n/**\n * Speechmatics treats punctuation as own words. This function merges punctuations with\n * the pevious word and adjusts the total duration of the word.\n * @param {array} words - array of words objects from speechmatics transcript\n */\nconst curatePunctuation = (words) => {\n  const curatedWords = [];\n  words.forEach((word) => {\n    if (/[.?!]/.test(word.name)) {\n      curatedWords[curatedWords.length - 1].name = curatedWords[curatedWords.length - 1].name + word.name;\n      curatedWords[curatedWords.length - 1].duration = (parseFloat(curatedWords[curatedWords.length - 1].duration) + parseFloat(word.duration)).toString();\n    } else {\n      curatedWords.push(word);\n    }\n  }\n  );\n\n  return curatedWords;\n};\n\nconst speechmaticsToDraft = (speechmaticsJson) => {\n  const results = [];\n\n  let tmpWords;\n  tmpWords = curatePunctuation(speechmaticsJson.words);\n  tmpWords = tmpWords.map((element, index) => {\n    return ({\n      start: element.time,\n      end: (parseFloat(element.time) + parseFloat(element.duration)).toString(),\n      confidence: element.confidence,\n      word: element.name.toLowerCase().replace(/[.?!]/g, ''),\n      punct: element.name,\n      index: index,\n    });\n  });\n\n  let tmpSpeakers;\n  tmpSpeakers = speechmaticsJson.speakers;\n  tmpSpeakers = tmpSpeakers.map((element) => {\n    return ({\n      start: element.time,\n      end: (parseFloat(element.time) + parseFloat(element.duration)).toString(),\n      name: element.name,\n    });\n  });\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph) => {\n    const paragraphStart = paragraph.words[0].start;\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: getSpeaker(paragraphStart, tmpSpeakers),\n        words: paragraph.words,\n        start: paragraphStart\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct'), // wordAttributeName\n    };\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default speechmaticsToDraft;\n","/**\n * Converts AWS Transcribe Json to DraftJs\n * see `sample` folder for example of input and output as well as `example-usage.js`\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\nexport const stripLeadingSpace = word => {\n  return word.replace(/^\\s/, '');\n};\n\n/**\n *  @param {json} words  - List of words\n *  @param {string} wordAttributeName - eg 'punct' or 'text' or etc.\n * attribute for the word object containing the text. eg word ={ punct:'helo', ... }\n *  or eg word ={ text:'helo', ... }\n */\nexport const getBestAlternativeForWord = word => {\n  if (/punctuation/.test(word.type)) {\n    return Object.assign(word.alternatives[0], { confidence: 1 }); //Transcribe doesn't provide a confidence for punctuation\n  }\n  const wordWithHighestConfidence = word.alternatives.reduce(function(\n    prev,\n    current\n  ) {\n    return parseFloat(prev.confidence) > parseFloat(current.confidence)\n      ? prev\n      : current;\n  });\n\n  return wordWithHighestConfidence;\n};\n\n/**\n * Normalizes words so they can be used in\n * the generic generateEntitiesRanges() method\n **/\nconst normalizeWord = currentWord => {\n  const bestAlternative = getBestAlternativeForWord(currentWord);\n\n  return {\n    start: parseFloat(currentWord.start_time),\n    end: parseFloat(currentWord.end_time),\n    text: bestAlternative.content,\n    confidence: parseFloat(bestAlternative.confidence)\n  };\n};\n\nexport const appendPunctuationToPreviousWord = (punctuation, previousWord) => {\n  const punctuationContent = punctuation.alternatives[0].content;\n\n  return {\n    ...previousWord,\n    alternatives: previousWord.alternatives.map(w => ({\n      ...w,\n      content: w.content + stripLeadingSpace(punctuationContent)\n    }))\n  };\n};\n\nexport const mapPunctuationItemsToWords = words => {\n  const itemsToRemove = [];\n  const dirtyArray = words.map((word, index) => {\n    let previousWord = {};\n    if (word.type === 'punctuation') {\n      itemsToRemove.push(index - 1);\n      previousWord = words[index - 1];\n\n      return appendPunctuationToPreviousWord(word, previousWord);\n    } else {\n      return word;\n    }\n  });\n\n  return dirtyArray.filter((item, index) => {\n    return !itemsToRemove.includes(index);\n  });\n};\n\n/**\n * groups words list from amazon transcribe transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words objects from kaldi transcript\n */\nconst groupWordsInParagraphs = words => {\n  const results = [];\n  let paragraph = {\n    words: [],\n    text: []\n  };\n  words.forEach((word, index) => {\n    const content = getBestAlternativeForWord(word).content;\n    const normalizedWord = normalizeWord(word);\n    if (/[.?!]/.test(content)) {\n      paragraph.words.push(normalizedWord);\n      paragraph.text.push(content);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(normalizedWord);\n      paragraph.text.push(content);\n    }\n  });\n\n  return results;\n};\n\nconst amazonTranscribeToDraft = amazonTranscribeJson => {\n  const results = [];\n  const tmpWords = amazonTranscribeJson.results.items;\n  const wordsWithRemappedPunctuation = mapPunctuationItemsToWords(tmpWords);\n  const wordsByParagraphs = groupWordsInParagraphs(\n    wordsWithRemappedPunctuation\n  );\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: parseFloat(paragraph.words[0].start)\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'text') // wordAttributeName\n    };\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default amazonTranscribeToDraft;\n","/**\n * Convert IBM json to draftJS\n * see `sample` folder for example of input and output as well as `example-usage.js`\n *\n */\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\nconst ibmToDraft = ibmJson => {\n  // helper function to normalise IBM words at line level\n  const normalizeTimeStampsToWords = timestamps => {\n    return timestamps.map(ibmWord => {\n      return {\n        text: ibmWord[0],\n        start: ibmWord[1],\n        end: ibmWord[2]\n      };\n    });\n  };\n\n  //\n  const normalizeIBMWordsList = ibmResults => {\n    const normalisedResults = [];\n    ibmResults.forEach(result => {\n      // nested array to keep paragraph segmentation same as IBM lines\n      normalisedResults.push(normalizeTimeStampsToWords(result.alternatives[0].timestamps));\n      // TODO: can be revisited - as separate PR by flattening the array like this\n      // normalisedResults = normalisedResults.concact(normalizeTimeStampsToWords(result.alternatives[0].timestamps));\n      // addSpeakersToWords function would need adjusting as would be dealing with a 1D array instead of 2D\n      // if edge case, like in example file, that there's one speaker recognised through all of speaker segemtnation info\n      // could break into paragraph when is over a minute? at end of IBM line?\n      // or punctuation, altho IBM does not seem to provide punctuation?\n    });\n\n    return normalisedResults;\n  };\n\n  // TODO: could be separate file\n  const findSpeakerSegmentForWord = (word, speakerSegments) => {\n    const tmpSegment = speakerSegments.find(seg => {\n      const segStart = seg.from;\n      const segEnd = seg.to;\n\n      return ((word.start === segStart) && (word.end === segEnd));\n    });\n    // if find doesn't find any matches it returns an undefined\n    if (tmpSegment === undefined) {\n      // covering edge case orphan word not belonging to any segments\n      // adding UKN speaker label\n      return 'UKN';\n    } else {\n      // find returns the first element that matches the criteria\n      return `S_${ tmpSegment.speaker }`;\n    }\n  };\n  // add speakers to words\n  const addSpeakersToWords = (ibmWords, ibmSpeakers) => {\n    return ibmWords.map(lines => {\n      return lines.map(word => {\n\n        word.speaker = findSpeakerSegmentForWord(word, ibmSpeakers);\n\n        return word;\n      });\n    });\n  };\n\n  const ibmNormalisedWordsToDraftJs = (ibmNormalisedWordsWithSpeakers) => {\n    const draftJsParagraphsResults = [];\n    ibmNormalisedWordsWithSpeakers.forEach((ibmParagraph) => {\n      const draftJsContentBlockParagraph = {\n        text: ibmParagraph.map((word) => {return word.text;}).join(' '),\n        type: 'paragraph',\n        data: {\n          // Assuming each paragraph in IBM line is the same\n          // for context it just seems like the IBM data structure gives you word level speakers,\n          // but also gives you \"lines\" so assuming each word in a line has the same speaker.\n          speaker: ibmParagraph[0].speaker,\n          words: ibmParagraph,\n          start: ibmParagraph[0].start\n        },\n        // the entities as ranges are each word in the space-joined text,\n        // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n        entityRanges: generateEntitiesRanges(ibmParagraph, 'text'), // wordAttributeName\n      };\n      draftJsParagraphsResults.push(draftJsContentBlockParagraph);\n    });\n\n    return draftJsParagraphsResults;\n  };\n\n  const normalisedWords = normalizeIBMWordsList(ibmJson.results[0].results);\n  // TODO: nested array of words, to keep some sort of paragraphs, in case there's only one speaker\n  // can be refactored/optimised later\n  const ibmNormalisedWordsWithSpeakers = addSpeakersToWords(normalisedWords, ibmJson.results[0].speaker_labels);\n  const ibmDratJs = ibmNormalisedWordsToDraftJs(ibmNormalisedWordsWithSpeakers);\n\n  return ibmDratJs;\n};\n\nexport default ibmToDraft;\n","import bbcKaldiToDraft from './bbc-kaldi/index';\nimport autoEdit2ToDraft from './autoEdit2/index';\nimport speechmaticsToDraft from './speechmatics/index';\nimport amazonTranscribeToDraft from './amazon-transcribe/index';\nimport ibmToDraft from './ibm/index';\n/**\n * Adapters for STT conversion\n * @param {json} transcriptData - A json transcript with some word accurate timecode\n * @param {string} sttJsonType - the type of transcript supported by the available adapters\n */\n\n// converts nested arrays into one dimensional array\nconst flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\nconst createEntityMap = (blocks) => {\n  const entityRanges = blocks.map(block => block.entityRanges);\n  // eslint-disable-next-line no-use-before-define\n  const flatEntityRanges = flatten(entityRanges);\n\n  const entityMap = {};\n\n  flatEntityRanges.forEach((data) => {\n    entityMap[data.key] = {\n      type: 'WORD',\n      mutability: 'MUTABLE',\n      data,\n    };\n  });\n\n  return entityMap;\n};\n\nconst sttJsonAdapter = (transcriptData, sttJsonType) => {\n  let blocks;\n  switch (sttJsonType) {\n  case 'bbckaldi':\n    blocks = bbcKaldiToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'autoedit2':\n    blocks = autoEdit2ToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'speechmatics':\n    blocks = speechmaticsToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'ibm':\n    blocks = ibmToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'draftjs':\n    return transcriptData; // (typeof transcriptData === 'string')? JSON.parse(transcriptData): transcriptData;\n\n  case 'amazontranscribe':\n    blocks = amazonTranscribeToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  default:\n    // code block\n    console.error('Did not recognize the stt engine.');\n  }\n};\n\nexport default sttJsonAdapter;\n","export default (blockData) => {\n  const lines = blockData.blocks.map(x => x.text);\n\n  return lines.join('\\n\\n');\n};\n","import draftToTxt from './txt/index';\n/**\n * Adapters for Draft.js conversion\n * @param {json} blockData - Draft.js blocks\n * @param {string} exportFormat - the type of file supported by the available adapters\n */\n\nconst exportAdapter = (blockData, exportFormat) => {\n  switch (exportFormat) {\n  case 'draftjs':\n    return { data: JSON.stringify(blockData, null, 2), ext: 'json' };\n  case 'txt':\n    return { data: draftToTxt(blockData), ext: 'txt' };\n  default:\n    // code block\n    console.error('Did not recognise the export format');\n  }\n};\n\nexport default exportAdapter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Select.module.css';\n\nclass Select extends React.Component {\n\n  render() {\n    const options = this.props.options.map((option, index) => {\n      // eslint-disable-next-line react/no-array-index-key\n      return <option key={ index } value={ option.value }>{option.label}</option>;\n    });\n\n    return (\n      <select className={ style.selectPlayerControl } name={ this.props.name } value={ this.props.currentValue } onChange={ this.props.handleChange }>\n        {options}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  currentValue: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Select from './Select';\n\nimport style from './PlayerControls.module.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  faSave,\n  faTv,\n  faPlay,\n  faPause,\n  faBackward,\n  faForward,\n  faUndo,\n  faVolumeUp,\n  faVolumeMute\n} from '@fortawesome/free-solid-svg-icons';\n\nclass PlayerControls extends React.Component {\n  // to handle backward and forward mouse pressed on btn\n  // set a 300 ms  interval to repeat the\n  // backward or forward function\n  // on mouseUp the interval is cleared\n  setIntervalHelperBackward = () => {\n    // this.props.skipBackward();\n    this.interval = setInterval(() => {\n      this.props.skipBackward();\n    }, 300);\n  }\n\n  setIntervalHelperForward = () => {\n    // this.props.skipForward();\n    this.interval = setInterval(() => {\n      this.props.skipForward();\n    }, 300);\n  }\n\n  clearIntervalHelper = () => {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div className={ style.playerControls }>\n        <div className={ style.timeBox }>\n          <span\n            title=\"Current time: alt t\"\n            className={ style.currentTime }\n            onClick={ this.props.promptSetCurrentTime }>\n            { this.props.currentTime }</span>\n          <span className={ style.separator }>|</span>\n          <span\n            title=\"Clip duration\"\n            className={ style.duration }>\n            {this.props.duration}</span>\n        </div>\n\n        <div className={ style.btnsGroup }>\n          <button\n            value=\"seek backward by a set interval: alt r\"\n            title=\"seek backward by a set interval: alt r\"\n            className={ style.playerButton }\n            onClick={ this.props.rollback }>\n            <FontAwesomeIcon icon={ faUndo } />\n          </button>\n\n          <button\n            value=\"seek backward: alt j\"\n            title=\"seek backward: alt j\"\n            className={ style.playerButton }\n            onMouseDown={ this.setIntervalHelperBackward }\n            onMouseUp={ this.clearIntervalHelper }\n            onClick={ () => {this.props.skipBackward(); } }>\n            <FontAwesomeIcon icon={ faBackward } />\n          </button>\n\n          <button\n            value=\"Play/Pause: alt k\"\n            title=\"Play/Pause: alt k\"\n            className={ style.playerButton }\n            onClick={ this.props.playMedia }>\n            {this.props.isPlaying ? <FontAwesomeIcon icon={ faPause } /> : <FontAwesomeIcon icon={ faPlay } />}\n          </button>\n\n          <button\n            value=\"seek forward: alt l\"\n            title=\"seek forward: alt l\"\n            className={ style.playerButton }\n            onMouseDown={ this.setIntervalHelperForward }\n            onMouseUp={ this.clearIntervalHelper }\n            onClick={ () => {this.props.skipForward(); } }>\n            <FontAwesomeIcon icon={ faForward } />\n          </button>\n        </div>\n\n        <div className={ style.btnsGroup }>\n          <span className={ style.playBackRate }\n            title=\"Playback rate: alt - & alt + \">\n            <Select\n              options={ this.props.playbackRateOptions }\n              currentValue={ this.props.playbackRate.toString() }\n              name={ 'playbackRate' }\n              handleChange={ this.props.setPlayBackRate } />\n          </span>\n\n          <button\n            value=\"Save\"\n            title=\"Save\"\n            className={ style.playerButton }\n            onClick={ this.props.handleSaveTranscript }>\n            <FontAwesomeIcon icon={ faSave } />\n          </button>\n\n          <button\n            value=\"Picture-in-picture\"\n            title=\"Picture-in-picture\"\n            className={ style.playerButton + ' ' + style.pip }\n            onClick={ this.props.pictureInPicture }>\n            <FontAwesomeIcon icon={ faTv } />\n          </button>\n\n          <button\n            value=\"Toggle Sound\"\n            title=\"Toggle Sound\"\n            className={ style.playerButton }\n            onClick={ this.props.handleMuteVolume }>\n            { this.props.isMute ? <FontAwesomeIcon icon={ faVolumeMute } /> : <FontAwesomeIcon icon={ faVolumeUp } /> }\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nPlayerControls.propTypes = {\n\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.string,\n  timecodeOffset: PropTypes.string,\n  promptSetCurrentTime: PropTypes.func,\n  rollback: PropTypes.func,\n  handleMuteVolume: PropTypes.func,\n  duration: PropTypes.string,\n  isPlaying: PropTypes.bool,\n  isMute: PropTypes.bool,\n  skipBackward: PropTypes.func,\n  skipForward: PropTypes.func,\n  playbackRate: PropTypes.number,\n  playbackRateOptions: PropTypes.array,\n  setPlayBackRate: PropTypes.func,\n  pictureInPicture: PropTypes.func,\n  handleSaveTranscript: PropTypes.func\n};\n\nexport default PlayerControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './ProgressBar.module.css';\n\nclass ProgressBar extends React.Component {\n\n  render() {\n    return (\n      <input\n        type='range'\n        className={ style.bar }\n        onChange={ this.props.buttonClick }\n        value={ this.props.value }\n        min='0'\n        max={ this.props.max.toString() }\n      />\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  value: PropTypes.number,\n  max: PropTypes.string,\n  buttonClick: PropTypes.func\n};\n\nexport default ProgressBar;\n","function returnHotKeys(self) {\n  return {\n    'alt+k': {\n      priority: 1,\n      handler: () => {\n        self.togglePlayMedia();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+k',\n          name: 'togglePlayMedia',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + k',\n      label: 'Play Media',\n    },\n    'alt+l': {\n      priority: 1,\n      handler: () => {\n        self.skipForward();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+l',\n          name: 'skipForward',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + l',\n      label: 'Fast Forward',\n    },\n    'alt+j': {\n      priority: 1,\n      handler: () => {\n        self.skipBackward();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+j',\n          name: 'skipBackward',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + j',\n      label: 'Rewind',\n    },\n    'alt+-': {\n      priority: 1,\n      handler: () => {\n        self.decreasePlaybackRate();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+-',\n          name: 'decreasePlaybackRate',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + -',\n      label: 'Decrease Playback Speed',\n    },\n    // https://github.com/ccampbell/mousetrap/issues/266\n    'alt+=': {\n      priority: 1,\n      handler: () => {\n        self.increasePlaybackRate();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+plus',\n          name: 'increasePlaybackRate',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + +',\n      label: 'Increase Playback Speed',\n    },\n    'alt+r': {\n      priority: 1,\n      handler: () => {\n        self.rollBack();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+r',\n          name: 'rollBack',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + r',\n      label: 'Roll Back',\n    },\n    'alt+t': {\n      priority: 1,\n      handler: () => {\n        self.promptSetCurrentTime();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+t',\n          name: 'promptSetCurrentTime',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + t',\n      label: 'set current time',\n    }\n  };\n}\nexport default returnHotKeys;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hotkeys } from 'react-keyboard-shortcuts';\nimport PlayerControls from './PlayerControls';\nimport ProgressBar from './ProgressBar';\n\nimport returnHotKeys from './defaultHotKeys';\nimport styles from './index.module.css';\n\nimport { secondsToTimecode, timecodeToSeconds } from '../../Util/timecode-converter/index';\n\nconst PLAYBACK_RATES = [\n  { value: 0.2, label: '0.2' },\n  { value: 0.25, label: '0.25' },\n  { value: 0.5, label: '0.5' },\n  { value: 0.75, label: '0.75' },\n  { value: 1, label: '1' },\n  { value: 1.25, label: '1.25' },\n  { value: 1.5, label: '1.5' },\n  { value: 1.75, label: '1.75' },\n  { value: 2, label: '2' },\n  { value: 2.5, label: '2.5' },\n  { value: 3, label: '3' },\n  { value: 3.5, label: '3.5' }\n];\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playbackRate: 1,\n      rollBackValueInSeconds: this.props.rollBackValueInSeconds,\n      timecodeOffset: this.props.timecodeOffset,\n      hotKeys: returnHotKeys(this),\n      isPlaying: false,\n      playbackRateOptions: PLAYBACK_RATES,\n      previewIsDisplayed: true,\n      isMute: false\n\n    };\n  }\n  /*eslint-disable camelcase */\n  hot_keys = returnHotKeys(this);\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.timecodeOffset !== null) {\n      let newCurrentTimeInSeconds = nextProps.timecodeOffset ;\n      if (typeof newCurrentTimeInSeconds === 'string'\n        && newCurrentTimeInSeconds.includes(':')\n        && !newCurrentTimeInSeconds.includes('NaN')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(nextProps.timecodeOffset );\n      }\n\n      return {\n        timecodeOffset: newCurrentTimeInSeconds,\n        rollBackValueInSeconds: nextProps.rollBackValueInSeconds\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.hookSeek(this.setCurrentTime);\n    this.props.hookPlayMedia(this.togglePlayMedia);\n    this.props.hookIsPlaying(this.isPlaying);\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    if (newCurrentTime !== '' && newCurrentTime !== null) {\n    // hh:mm:ss:ff - mm:ss - m:ss - ss - seconds number or string and hh:mm:ss\n      const newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTime);\n      if (this.props.videoRef.current !== null) {\n        const videoRef = this.props.videoRef.current;\n\n        if (videoRef.readyState === 4) {\n          videoRef.currentTime = newCurrentTimeInSeconds;\n          this.playMedia();\n        }\n      }\n    }\n  }\n\n  /**\n   * Prompts for a time stamp or time code to set media current time\n   * Also handles use can when the user has set a timecode offset via settings\n   * and the prompt is expected to be relative to that offset\n   */\n  promptSetCurrentTime = () => {\n    let userTimecodeValue = prompt('Jump to time - hh:mm:ss:ff hh:mm:ss mm:ss m:ss m.ss seconds');\n    // TODO: add some validation, eg if user types just a string it won't crash.\n    // needs function to check it's either timecode on the formats specified above or a number\n    // this could be part of the timecode module(?)\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'promptSetCurrentTime',\n        name: 'userTimecodeValue',\n        value: userTimecodeValue\n      });\n    }\n    // user clicks cancel to prompt, prompt returns null\n    if (userTimecodeValue !== null) {\n      if (userTimecodeValue.includes(':')) {\n        userTimecodeValue = timecodeToSeconds(userTimecodeValue);\n      }\n      // remove timecode offset if preset\n      if (this.state.timecodeOffset !== 0) {\n        userTimecodeValue -= this.state.timecodeOffset;\n      }\n\n      this.setCurrentTime(userTimecodeValue);\n    }\n  }\n\n  setTimeCodeOffset = (newTimeCodeOffSet) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'setTimeCodeOffset',\n        name: 'timecodeOffsetValue',\n        value: newTimeCodeOffSet\n      });\n    }\n\n    if (newTimeCodeOffSet !== '' && newTimeCodeOffSet !== null) {\n      // use similar helper function from above to convert\n      let newCurrentTimeInSeconds = newTimeCodeOffSet;\n      if (newTimeCodeOffSet.includes(':')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(newTimeCodeOffSet);\n        this.setState({ timecodeOffset: newCurrentTimeInSeconds });\n      }\n    }\n  }\n\n  rollBack = () => {\n    if (this.props.videoRef.current !== null) {\n\n      if (this.props.handleAnalyticsEvents !== undefined) {\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'rollBack',\n          name: 'rollBackValue',\n          value: this.state.rollBackValueInSeconds\n        });\n      }\n      // get video duration\n      const videoElem = this.props.videoRef.current;\n      const tmpDesiredCurrentTime = videoElem.currentTime - this.state.rollBackValueInSeconds;\n      // > 0 < duration of video\n      this.setCurrentTime(tmpDesiredCurrentTime);\n\n    }\n  }\n\n  handlePlayBackRateChange = (e) => {\n    this.setPlayBackRate(parseFloat(e.target.value));\n  }\n\n  /**\n   * @param {float} input - playback rate value as a float\n   */\n  setPlayBackRate = (input) => {\n    if (this.props.videoRef.current !== null) {\n      if (input >= 0.2 && input <= 3.5) {\n        this.setState({\n          playbackRate: input,\n        }, () => {\n          this.props.videoRef.current.playbackRate = input;\n\n          if (this.props.handleAnalyticsEvents !== undefined) {\n            this.props.handleAnalyticsEvents({\n              category: 'MediaPlayer',\n              action: 'setPlayBackRate',\n              name: 'playbackRateNewValue',\n              value: input\n            });\n          }\n\n        });\n      }\n    }\n  }\n\n  decreasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ].reverse();\n    const slower = speeds.find((option) => {\n      return option.value < this.state.playbackRate;\n    });\n    const newSpeed = slower ? slower.value : 0.2;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  increasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ];\n    const faster = speeds.find((option) => {\n      return option.value > this.state.playbackRate;\n    });\n    const newSpeed = faster ? faster.value : 3.5;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  handleChangeReplayRollbackValue = (e) => {\n    if (this.props.videoRef.current !== null) {\n      this.setState({\n        rollBackValueInSeconds: e.target.value,\n      });\n    }\n  }\n\n  handleMuteVolume = () => {\n    if (this.props.videoRef.current !== null) {\n      if (this.props.videoRef.current.volume > 0) {\n        this.props.videoRef.current.volume = 0;\n        this.setState({ isMute: true });\n      } else {\n        this.props.videoRef.current.volume = 1;\n        this.setState({ isMute: false });\n      }\n    }\n  }\n\n  // TEMP: keeping this in for now. Might be replaced by state\n  // The pauseWhileTyping logic (in TimedTextEditor) currently uses this\n  isPlaying = () => {\n    if (this.props.videoRef.current !== null) {\n      if (this.props.videoRef.current.paused) return false;\n\n      return true;\n    }\n  }\n\n  pauseMedia = () => {\n    this.setState({ isPlaying: false }, () => this.props.videoRef.current.pause());\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'pauseMedia',\n        name: 'pauseMedia',\n        value: secondsToTimecode(this.props.videoRef.current.currentTime)\n      });\n    }\n  }\n\n  playMedia = () => {\n    this.setState({ isPlaying: true }, () => this.props.videoRef.current.play());\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'playMedia',\n        name: 'playMedia',\n        value: secondsToTimecode(this.props.videoRef.current.currentTime)\n      });\n    }\n\n  }\n\n  // Sets isPlaying state and toggles modes on the video player\n  // TODO: modularise these / enable specific play / pause action\n  togglePlayMedia = () => {\n    if (this.props.videoRef.current !== null) {\n      if (this.state.isPlaying) {\n        this.pauseMedia();\n      }\n      else {\n        this.playMedia();\n      }\n    }\n  }\n\n  skipForward = () => {\n    if (this.props.videoRef.current !== null) {\n      // TODO track this?\n      const currentTime = this.props.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime + 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  skipBackward = () => {\n    // TODO track this?\n    if (this.props.videoRef.current !== null) {\n      const currentTime = this.props.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime - 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  handleProgressBarClick = (e) => {\n    const time = e.target.value;\n    this.setCurrentTime(time);\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'handleProgressBarClick',\n        name: 'roundNewCurrentTime',\n        value: time\n      });\n    }\n  }\n\n  getMediaCurrentTime = () => {\n    if (this.props.videoRef.current !== null) {\n      return secondsToTimecode(this.props.videoRef.current.currentTime + this.state.timecodeOffset);\n    }\n\n    return '00:00:00:00';\n  }\n\n  handlePictureInPicture = () => {\n    // console.log('this.props.videoRef', this.props.videoRef, this.props.videoRef.current );\n    if (this.props.videoRef.current !== undefined) {\n      if (document.pictureInPictureElement !== undefined) {\n      // from https://developers.google.com/web/updates/2017/09/picture-in-picture\n        if (!document.pictureInPictureElement) {\n\n          this.props.handleAnalyticsEvents({\n            category: 'MediaPlayer',\n            action: 'handlePictureInPicture',\n            name: 'turning-picture-in-picture-on'\n          });\n\n          this.props.videoRef.current.requestPictureInPicture()\n            .catch(error => {\n              // Video failed to enter Picture-in-Picture mode.\n              console.error('Video failed to enter Picture-in-Picture mode', error);\n\n              this.props.handleAnalyticsEvents({\n                category: 'MediaPlayer',\n                action: 'handlePictureInPicture',\n                name: 'turning-picture-in-picture-on-error'\n              });\n\n            });\n\n        } else {\n          this.props.handleAnalyticsEvents({\n            category: 'MediaPlayer',\n            action: 'handlePictureInPicture',\n            name: 'turning-picture-in-picture-off'\n          });\n          document.exitPictureInPicture()\n            .catch(error => {\n              // Video failed to leave Picture-in-Picture mode.\n              console.error('Video failed to leave Picture-in-Picture mode', error);\n\n              this.props.handleAnalyticsEvents({\n                category: 'MediaPlayer',\n                action: 'handlePictureInPicture',\n                name: 'turning-picture-in-picture-off-error'\n              });\n            });\n        }\n      } else {\n        alert('Picture in Picture not supported in this browser, try chrome.');\n\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'handlePictureInPicture',\n          name: 'picture-in-picture-not-supported'\n        });\n\n      }\n    }\n  }\n\n  render() {\n    const progressBar = <ProgressBar\n      max={ this.props.videoRef.current !== null ? parseInt(this.props.videoRef.current.duration).toString() : '100' }\n      value={ this.props.videoRef.current !== null ? parseInt(this.props.videoRef.current.currentTime) : 0 }\n      buttonClick={ this.handleProgressBarClick.bind(this) }\n    />;\n\n    const playerControlsSection = (\n      <div className={ styles.controlsSection }>\n        <h2 className={ styles.title }>{this.props.title}</h2>\n        <PlayerControls\n          playMedia={ this.togglePlayMedia.bind(this) }\n          isPlaying={ this.state.isPlaying }\n          isMute={ this.state.isMute }\n          playbackRate={ this.state.playbackRate }\n          skipBackward={ this.skipBackward.bind(this) }\n          skipForward={ this.skipForward.bind(this) }\n          rollback={ this.rollBack }\n          currentTime={ this.getMediaCurrentTime() }\n          duration={ this.props.mediaDuration }\n          onSetCurrentTime={ '' }\n          onSetTimecodeOffset={ '' }\n          promptSetCurrentTime={ this.promptSetCurrentTime.bind(this) }\n          setTimeCodeOffset={ this.setTimeCodeOffset.bind(this) }\n          timecodeOffset={ secondsToTimecode(this.state.timecodeOffset) }\n          handleMuteVolume={ this.handleMuteVolume.bind(this) }\n          setPlayBackRate={ this.handlePlayBackRateChange.bind(this) }\n          playbackRateOptions={ this.state.playbackRateOptions }\n          pictureInPicture={ this.handlePictureInPicture }\n          handleSaveTranscript={ () => {this.props.handleSaveTranscript();} }\n        />\n        { this.props.mediaUrl === null ? null : progressBar }\n      </div>\n    );\n\n    return (\n      <section className={ styles.topSection }>\n        <div className={ styles.playerSection }>\n          { this.props.mediaUrl === null ? null : playerControlsSection }\n        </div>\n      </section>\n    );\n  }\n}\n\nMediaPlayer.propTypes = {\n  videoRef: PropTypes.object,\n  title: PropTypes.string,\n  hookSeek: PropTypes.func,\n  hookPlayMedia: PropTypes.func,\n  hookIsPlaying: PropTypes.func,\n  mediaUrl: PropTypes.string,\n  hookOnTimeUpdate: PropTypes.func,\n  rollBackValueInSeconds: PropTypes.number,\n  timecodeOffset: PropTypes.number,\n  handleAnalyticsEvents: PropTypes.func,\n  mediaDuration: PropTypes.string,\n  handleSaveTranscript: PropTypes.func\n};\n\nexport default hotkeys(MediaPlayer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './VideoPlayer.module.css';\n\nclass VideoPlayer extends React.Component {\n\n  handlePlayMedia = () => {\n    if (this.props.videoRef.current !== null) {\n      return this.props.videoRef.current.paused ? this.props.videoRef.current.play() : this.props.videoRef.current.pause();\n    }\n  };\n  render() {\n    const isDisplayed = this.props.previewIsDisplayed ? 'inline' : 'none';\n\n    return (\n      <video\n        id=\"video\"\n        playsInline\n        src={ this.props.mediaUrl }\n        onTimeUpdate={ this.props.onTimeUpdate }\n        type=\"video/mp4\"\n        data-testid=\"media-player-id\"\n        onClick={ this.handlePlayMedia }\n        onLoadedData={ this.props.onLoadedDataGetDuration }\n        ref={ this.props.videoRef }\n        className={ styles.videoEl }\n        style={ {\n          display: isDisplayed\n        } }\n      />\n    );\n  }\n}\n\nVideoPlayer.propTypes = {\n  mediaUrl: PropTypes.string,\n  onTimeUpdate: PropTypes.func,\n  onClick: PropTypes.func,\n  videoRef: PropTypes.object,\n  onLoadedDataGetDuration: PropTypes.func,\n  previewIsDisplayed: PropTypes.bool,\n  previewViewWidth: PropTypes.string\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nclass Toggle extends React.Component {\n  render() {\n    return (\n      <div className={ style.switchContainer }>\n        <label className={ style.switch }>\n          <input type='checkbox'\n            defaultChecked={ this.props.defaultValue }\n            onChange={ this.props.handleToggle }\n          />\n          <span className={ style.slider }></span>\n        </label>\n      </div>\n    );\n  }\n}\n\nToggle.propTypes = {\n  handleToggle: PropTypes.func,\n  label: PropTypes.string,\n  defaultValue: PropTypes.bool\n};\n\nexport default Toggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nimport { timecodeToSeconds, secondsToTimecode } from '../../../Util/timecode-converter/index';\n\nclass TimecodeOffset extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timecodeOffset: secondsToTimecode(this.props.timecodeOffset)\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      timecodeOffset: e.target.value\n    });\n  }\n\n  resetTimecodeOffset = () => {\n    const resetTimecodeOffsetValue = 0;\n\n    this.props.handleAnalyticsEvents({\n      category: 'TimecodeOffset',\n      action: 'resetTimecodeOffset',\n      name: 'resetTimecodeOffset',\n      value: 0\n    });\n\n    this.setState({\n      timecodeOffset: secondsToTimecode(resetTimecodeOffsetValue)\n    }, () => {\n      this.props.handleSetTimecodeOffset(resetTimecodeOffsetValue);\n    });\n  }\n\n  setTimecodeOffset = () => {\n    this.props.handleAnalyticsEvents({\n      category: 'TimecodeOffset',\n      action: 'setTimecodeOffset',\n      name: 'setTimecodeOffset',\n      value: this.state.timecodeOffset\n    });\n\n    let newCurrentTimeInSeconds = this.state.timecodeOffset;\n    if (typeof newCurrentTimeInSeconds === 'string'\n    && newCurrentTimeInSeconds.includes(':')\n    && !newCurrentTimeInSeconds.includes('NaN')) {\n      newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTimeInSeconds );\n    }\n    this.props.handleSetTimecodeOffset(newCurrentTimeInSeconds);\n  }\n\n  render() {\n    return (\n      <div className={ style.offsetContainer }>\n        <input\n          className={ style.inputBox }\n          type=\"text\"\n          value={ this.state.timecodeOffset }\n          onChange={ this.handleChange }\n          name=\"lname\"/>\n        <span className={ style.button } onClick={ this.resetTimecodeOffset }><u>Reset</u></span>\n        <span> | </span>\n        <span className={ style.button } onClick={ this.setTimecodeOffset }><u>Save</u></span>\n      </div>\n    );\n  }\n}\n\nTimecodeOffset.propTypes = {\n  handleSetTimecodeOffset: PropTypes.func,\n  onChange: PropTypes.func,\n  timecodeOffset: PropTypes.number,\n  handleAnalyticsEvents: PropTypes.func\n};\n\nexport default TimecodeOffset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport Toggle from './Toggle/';\n\nimport style from './index.module.css';\n\nimport TimecodeOffset from './TimecodeOffset';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div className={ style.settings }>\n        <h2 className={ style.header }>Settings Panel</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleSettingsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n\n        <div className={ style.controlsContainer }>\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Pause While Typing</div>\n            <Toggle\n              defaultValue={ this.props.defaultValuePauseWhileTyping }\n              label={ 'Pause while typing' }\n              handleToggle={ this.props.handlePauseWhileTyping }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Scroll Sync</div>\n            <Toggle\n              defaultValue={ this.props.defaultValueScrollSync }\n              label={ 'ScrollSync' }\n              handleToggle={ this.props.handleIsScrollIntoViewChange }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Rollback Interval (sec)</div>\n            <input\n              className={ style.rollbackValue }\n              type=\"number\"\n              step=\"1\"\n              max=\"60\"\n              min=\"1\"\n              value={ this.props.defaultRollBackValueInSeconds }\n              onChange={ this.props.handleRollBackValueInSeconds }\n              name=\"lname\"/>\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Timecodes</div>\n            <Toggle\n              defaultValue={ this.props.showTimecodes }\n              label={ 'Hide Timecodes' }\n              handleToggle={ this.props.handleShowTimecodes }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Speaker Labels</div>\n            <Toggle\n              defaultValue={ this.props.showSpeakers }\n              label={ 'Hide Speaker Labels' }\n              handleToggle={ this.props.handleShowSpeakers }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Display Preview</div>\n            <Toggle\n              defaultValue={ this.props.previewIsDisplayed }\n              label={ 'Display Preview' }\n              handleToggle={ this.props.handlePreviewIsDisplayed }\n            />\n          </section>\n          {/*\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Video Preview width</div>\n            <input\n              className={ style.rollbackValue }\n              type=\"number\"\n              step=\"1\"\n              max=\"40\"\n              min=\"15\"\n              value={ this.props.previewViewWidth }\n              onChange={ this.props.handleChangePreviewViewWidth }\n              name=\"lname\"/>\n          </section> */}\n\n          <section className={ style.settingElement }>\n            <div className={ style.timecodeLabel }>Timecode Offset ℹ</div>\n            <TimecodeOffset\n              timecodeOffset={ this.props.timecodeOffset }\n              handleSetTimecodeOffset={ this.props.handleSetTimecodeOffset }\n              handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  showTimecodes: PropTypes.bool,\n  showSpeakers: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleShowTimecodes: PropTypes.func,\n  handleShowSpeakers: PropTypes.func,\n  handleSetTimecodeOffset: PropTypes.func,\n  handleSettingsToggle: PropTypes.func,\n  handlePauseWhileTyping: PropTypes.func,\n  handleIsScrollIntoViewChange: PropTypes.func,\n  handleRollBackValueInSeconds: PropTypes.func,\n  defaultValueScrollSync: PropTypes.bool,\n  defaultValuePauseWhileTyping: PropTypes.bool,\n  defaultRollBackValueInSeconds: PropTypes.number,\n  previewIsDisplayed: PropTypes.bool,\n  handlePreviewIsDisplayed: PropTypes.func,\n  // previewViewWidth: PropTypes.string,\n  handleChangePreviewViewWidth: PropTypes.func,\n  handleAnalyticsEvents: PropTypes.func\n};\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport returnHotKeys from '../MediaPlayer/defaultHotKeys';\n\nimport style from './Shortcuts.module.css';\n\nclass Shortcuts extends React.Component {\n  render() {\n    const hotKeys = returnHotKeys(this);\n    const hotKeysCheatsheet = Object.keys(hotKeys).map((key) => {\n    \tconst shortcut = hotKeys[key];\n\n      return <li key={ key } className={ style.listItem }>\n        <div className={ style.shortcut }>{shortcut.displayKeyCombination}</div>\n        <div className={ style.shortcutLabel }>{shortcut.label}</div>\n      </li>;\n    });\n\n    return (\n      <div className={ style.shortcuts }>\n        <h2 className={ style.header }>Shortcuts</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleShortcutsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n        <ul className={ style.list }>{ hotKeysCheatsheet }</ul>\n      </div>\n    );\n  }\n}\n\nShortcuts.propTypes = {\n  handleShortcutsToggle: PropTypes.func\n};\n\nexport default Shortcuts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCog,\n  faKeyboard,\n  faQuestionCircle,\n  faMousePointer,\n  faICursor,\n  faUserEdit,\n  faSave\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Tooltip from 'react-simple-tooltip';\n\nimport TimedTextEditor from './TimedTextEditor';\nimport MediaPlayer from './MediaPlayer';\nimport VideoPlayer from './MediaPlayer/VideoPlayer';\nimport Settings from './Settings';\nimport Shortcuts from './Settings/Shortcuts';\nimport { secondsToTimecode } from '../Util/timecode-converter/index';\n\nimport style from './index.module.css';\n\nclass TranscriptEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n\n    this.state = {\n      currentTime: 0,\n      lastLocalSavedTime: '',\n      transcriptData: null,\n      isScrollIntoViewOn: false,\n      showSettings: false,\n      showShortcuts: false,\n      isPauseWhileTypingOn: true,\n      rollBackValueInSeconds: 15,\n      timecodeOffset: 0,\n      showTimecodes: true,\n      showSpeakers: true,\n      previewIsDisplayed: true,\n      mediaDuration: '00:00:00:00'\n      // previewViewWidth: '25'\n    };\n    this.timedTextEditorRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n      return {\n        transcriptData: nextProps.transcriptData\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Transcript and media passed to component at same time\n    if (\n      prevState.transcriptData !== this.state.transcriptData &&\n      prevProps.mediaUrl !== this.props.mediaUrl\n    ) {\n      console.info('Transcript and media');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n    // Transcript first and then media passed to component\n    else if (\n      prevState.transcriptData === this.state.transcriptData &&\n      prevProps.mediaUrl !== this.props.mediaUrl\n    ) {\n      console.info('Transcript first and then media');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n    // Media first and then transcript passed to component\n    else if (\n      prevState.transcriptData !== this.state.transcriptData &&\n      prevProps.mediaUrl === this.props.mediaUrl\n    ) {\n      console.info('Media first and then transcript');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n  }\n\n  ifPresentRetrieveTranscriptFromLocalStorage = () => {\n    const timedTextEditor = this.timedTextEditorRef;\n    if (timedTextEditor && timedTextEditor.current) {\n      if (\n        timedTextEditor.current.isPresentInLocalStorage(this.props.mediaUrl)\n      ) {\n        console.info('Already present in local storage.');\n        timedTextEditor.current.loadLocalSavedData(this.props.mediaUrl);\n      } else {\n        console.info('Not present in local storage.');\n      }\n    }\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  handleWordClick = startTime => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'doubleClickOnWord',\n        name: 'startTime',\n        value: secondsToTimecode(startTime)\n      });\n    }\n\n    this.setCurrentTime(startTime);\n  };\n\n  // eslint-disable-next-line class-methods-use-this\n  handleTimeUpdate = e => {\n    const currentTime = e.target.currentTime;\n    this.setState({\n      currentTime\n    });\n  };\n\n  handlePlayMedia = isPlaying => {\n    this.playMedia(isPlaying);\n  };\n\n  handleIsPlaying = () => {\n    return this.isPlaying();\n  };\n\n  handleIsScrollIntoViewChange = e => {\n    const isChecked = e.target.checked;\n    this.setState({ isScrollIntoViewOn: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleIsScrollIntoViewChange',\n        name: 'isScrollIntoViewOn',\n        value: isChecked\n      });\n    }\n  };\n  handlePauseWhileTyping = e => {\n    const isChecked = e.target.checked;\n    this.setState({ isPauseWhileTypingOn: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handlePauseWhileTyping',\n        name: 'isPauseWhileTypingOn',\n        value: isChecked\n      });\n    }\n  };\n\n  handleRollBackValueInSeconds = e => {\n    const rollBackValue = e.target.value;\n    this.setState({ rollBackValueInSeconds: rollBackValue });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleRollBackValueInSeconds',\n        name: 'rollBackValueInSeconds',\n        value: rollBackValue\n      });\n    }\n  };\n\n  handleSetTimecodeOffset = timecodeOffset => {\n    this.setState({ timecodeOffset: timecodeOffset }, () => {\n      this.timedTextEditorRef.current.forceUpdate();\n    });\n  };\n\n  handleShowTimecodes = e => {\n    const isChecked = e.target.checked;\n    this.setState({ showTimecodes: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShowTimecodes',\n        name: 'showTimecodes',\n        value: isChecked\n      });\n    }\n  };\n\n  handleShowSpeakers = e => {\n    const isChecked = e.target.checked;\n    this.setState({ showSpeakers: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShowSpeakers',\n        name: 'showSpeakers',\n        value: isChecked\n      });\n    }\n  };\n\n  handleSettingsToggle = () => {\n    this.setState(prevState => ({\n      showSettings: !prevState.showSettings\n    }));\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleSettingsToggle',\n        name: 'showSettings',\n        value: !this.state.showSettings\n      });\n    }\n  };\n\n  handleShortcutsToggle = () => {\n    this.setState(prevState => ({\n      showShortcuts: !prevState.showShortcuts\n    }));\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShortcutsToggle',\n        name: 'showShortcuts',\n        value: !this.state.showShortcuts\n      });\n    }\n  };\n\n  getEditorContent = exportFormat => {\n    return this.timedTextEditorRef.current.getEditorContent(exportFormat);\n  };\n\n  handlePreviewIsDisplayed = () => {\n    this.setState({\n      previewIsDisplayed: !this.state.previewIsDisplayed\n    });\n  };\n\n  onLoadedDataGetDuration = e => {\n    const currentDuration = e.target.duration;\n    const currentDurationWithOffset =\n      currentDuration + this.state.timecodeOffset;\n    const durationInSeconds = secondsToTimecode(\n      currentDuration + currentDurationWithOffset\n    );\n\n    this.setState({\n      mediaDuration: durationInSeconds\n    });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'onLoadedDataGetDuration',\n        name: 'durationInSeconds-WithoutOffset',\n        value: secondsToTimecode(currentDuration)\n      });\n    }\n  };\n\n  handleChangePreviewViewWidth = e => {\n    const newPreviewViewWidth = e.target.value;\n    this.setState({\n      previewViewWidth: newPreviewViewWidth\n    });\n  };\n\n  handleSaveTranscript = () => {\n    alert('The changes to this transcript have been saved in your browser');\n\n    return this.timedTextEditorRef.current.localSave(this.props.mediaUrl);\n  };\n\n  render() {\n    const videoPlayer = (\n      <VideoPlayer\n        mediaUrl={ this.props.mediaUrl }\n        onTimeUpdate={ this.handleTimeUpdate }\n        // onClick={ this.props.onClick }\n        videoRef={ this.videoRef }\n        previewIsDisplayed={ this.state.previewIsDisplayed }\n        onLoadedDataGetDuration={ this.onLoadedDataGetDuration }\n        // viewWith={ this.state.previewViewWidth }\n      />\n    );\n\n    const mediaControls = (\n      <MediaPlayer\n        title={ this.props.title ? this.props.title : '' }\n        mediaDuration={ this.state.mediaDuration }\n        hookSeek={ foo => (this.setCurrentTime = foo) }\n        hookPlayMedia={ foo => (this.playMedia = foo) }\n        hookIsPlaying={ foo => (this.isPlaying = foo) }\n        rollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n        timecodeOffset={ this.state.timecodeOffset }\n        // hookOnTimeUpdate={ this.handleTimeUpdate }\n        mediaUrl={ this.props.mediaUrl }\n        // ref={ 'MediaPlayer' }\n        handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n        videoRef={ this.videoRef }\n        handleSaveTranscript={ this.handleSaveTranscript }\n      />\n    );\n\n    const settings = (\n      <Settings\n        handleSettingsToggle={ this.handleSettingsToggle }\n        defaultValuePauseWhileTyping={ this.state.isPauseWhileTypingOn }\n        defaultValueScrollSync={ this.state.isScrollIntoViewOn }\n        defaultRollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n        timecodeOffset={ this.state.timecodeOffset }\n        showTimecodes={ this.state.showTimecodes }\n        showSpeakers={ this.state.showSpeakers }\n        handlePauseWhileTyping={ this.handlePauseWhileTyping }\n        handleIsScrollIntoViewChange={ this.handleIsScrollIntoViewChange }\n        handleRollBackValueInSeconds={ this.handleRollBackValueInSeconds }\n        handleSetTimecodeOffset={ this.handleSetTimecodeOffset }\n        handleShowTimecodes={ this.handleShowTimecodes }\n        handleShowSpeakers={ this.handleShowSpeakers }\n        handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n        previewIsDisplayed={ this.state.previewIsDisplayed }\n        handlePreviewIsDisplayed={ this.handlePreviewIsDisplayed }\n        // previewViewWidth={ this.state.previewViewWidth }\n        handleChangePreviewViewWidth={ this.handleChangePreviewViewWidth }\n      />\n    );\n\n    const shortcuts = (\n      <Shortcuts handleShortcutsToggle={ this.handleShortcutsToggle } />\n    );\n\n    const timedTextEditor = (\n      <TimedTextEditor\n        fileName={ this.props.fileName }\n        transcriptData={ this.state.transcriptData }\n        timecodeOffset={ this.state.timecodeOffset }\n        onWordClick={ this.handleWordClick }\n        playMedia={ this.handlePlayMedia }\n        isPlaying={ this.handleIsPlaying }\n        currentTime={ this.state.currentTime }\n        isEditable={ this.props.isEditable }\n        sttJsonType={ this.props.sttJsonType }\n        mediaUrl={ this.props.mediaUrl }\n        isScrollIntoViewOn={ this.state.isScrollIntoViewOn }\n        isPauseWhileTypingOn={ this.state.isPauseWhileTypingOn }\n        showTimecodes={ this.state.showTimecodes }\n        showSpeakers={ this.state.showSpeakers }\n        ref={ this.timedTextEditorRef }\n        handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n      />\n    );\n\n    const helpMessage = (\n      <div className={ style.helpMessage }>\n        <span>\n          <FontAwesomeIcon className={ style.icon } icon={ faMousePointer } />\n          Double click on a word or timestamp to jump to that point in the\n          video.\n        </span>\n        <span>\n          <FontAwesomeIcon className={ style.icon } icon={ faICursor } />\n          Start typing to edit text.\n        </span>\n        <span>\n          <FontAwesomeIcon className={ style.icon } icon={ faUserEdit } />\n          You can add and change names of speakers in your transcript.\n        </span>\n        <span>\n          <FontAwesomeIcon className={ style.icon } icon={ faKeyboard } />\n          Use keyboard shortcuts for quick control.\n        </span>\n        <span>\n          <FontAwesomeIcon className={ style.icon } icon={ faSave } />\n          Save & export to get a copy to your desktop.\n        </span>\n      </div>\n    );\n\n    const tooltip = (\n      <Tooltip\n        className={ style.help }\n        content={ helpMessage }\n        fadeDuration={ 250 }\n        fadeEasing={ 'ease-in' }\n        placement={ 'bottom' }\n        radius={ 5 }\n        border={ '#ffffff' }\n        background={ '#f2f2f2' }\n        color={ '#000000' }\n      >\n        <FontAwesomeIcon className={ style.icon } icon={ faQuestionCircle } />\n        How does this work?\n      </Tooltip>\n    );\n\n    const header = (\n      <>\n        <header className={ style.header }>\n          {this.state.showSettings ? settings : null}\n          {this.state.showShortcuts ? shortcuts : null}\n          {tooltip}\n        </header>\n        <nav className={ style.nav }>\n          {this.props.mediaUrl === null ? null : mediaControls}\n        </nav>\n        <div className={ style.settingsContainer }>\n          <button\n            className={ style.settingsButton }\n            title=\"Settings\"\n            onClick={ this.handleSettingsToggle }\n          >\n            <FontAwesomeIcon icon={ faCog } />\n          </button>\n          <button\n            className={ `${ style.settingsButton } ${\n              style.keyboardShortcutsButon\n            }` }\n            title=\"view shortcuts\"\n            onClick={ this.handleShortcutsToggle }\n          >\n            <FontAwesomeIcon icon={ faKeyboard } />\n          </button>\n        </div>\n      </>\n    );\n\n    return (\n      <div className={ style.container }>\n        {this.props.mediaUrl === null ? null : header}\n\n        <div className={ style.grid }>\n          <section className={ style.row }>\n            <aside className={ style.aside }>\n              {this.props.mediaUrl === null ? null : videoPlayer}\n            </aside>\n            <main className={ style.main }>\n              {this.props.mediaUrl !== null &&\n              this.props.transcriptData !== null\n                ? timedTextEditor\n                : null}\n            </main>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nTranscriptEditor.propTypes = {\n  onClick: PropTypes.func,\n  title: PropTypes.string,\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  sttJsonType: PropTypes.string,\n  handleAnalyticsEvents: PropTypes.func,\n  fileName: PropTypes.string\n};\n\nexport default TranscriptEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SttTypeSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"bbckaldi\">BBC Kaldi</option>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"gentle-transcript\" disabled>Gentle Transcript</option>\n  <option value=\"gentle-alignement\" disabled>Gentle Alignement</option>\n  <option value=\"iiif\" disabled>IIIF</option>\n  <option value=\"autoedit2\">autoEdit 2</option>\n  <option value=\"speechmatics\">Speechmatics</option>\n  <option value=\"ibm\">IBM Watson STT</option>\n  <option value=\"assemblyai\" disabled>AssemblyAI</option>\n  <option value=\"rev\" disabled>Rev</option>\n  <option value=\"srt\" disabled>Srt</option>\n  <option value=\"vtt\" disabled>VTT</option>\n  <option value=\"vtt-youtube\" disabled>Youtube VTT</option>\n  <option value=\"amazontranscribe\">Amazon Transcribe</option>\n</select>);\n\nSttTypeSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default SttTypeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExportFormatSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"txt\">Text file</option>\n  <option value=\"html\" disabled>HTML</option>\n  <option value=\"word\" disabled>MS Word</option>\n</select>);\n\nExportFormatSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default ExportFormatSelect;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { TranscriptEditor } from './lib';\n\n// import kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport kaldiTedTalkTranscript from './sample-data/KateDarling-bbcKaldiTranscriptWithSpeakerSegments.json';\nimport style from './index.module.css';\nimport SttTypeSelect from './select-stt-json-type';\nimport ExportFormatSelect from './select-export-format';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faGithub } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nconst tedTalkVideoUrl = 'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null,\n      isTextEditable: true,\n      sttType: 'bbckaldi',\n      analyticsEvents: [],\n      title: 'Ted Talk Kate Kate Darling',\n      fileName: ''\n    };\n\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl,\n      sttType: 'bbckaldi'\n    });\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[0];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      const fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL,\n        fileName: file.name\n      });\n    } else {\n      alert('select a valid audio or video file');\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const file = files[0];\n\n    if (file.type === 'application/json') {\n      const fr = new FileReader();\n\n      fr.onload = event => {\n        this.setState({\n          transcriptData: JSON.parse(event.target.result)\n        });\n      };\n\n      fr.readAsText(file);\n    } else {\n      alert('select a valid json file');\n    }\n  }\n\n  handleIsTextEditable = () => {\n    this.setState(prevState => ({\n      isTextEditable: prevState.isTextEditable !== true\n    }));\n  };\n\n  // https://stackoverflow.com/questions/21733847/react-jsx-selecting-selected-on-selected-select-option\n  handleSttTypeChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleExportFormatChange = event => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  exportTranscript = () => {\n    // eslint-disable-next-line react/no-string-refs\n    const { data, ext } = this.transcriptEditorRef.current.getEditorContent(\n      this.state.exportFormat\n    );\n    this.download(data, `${ this.state.mediaUrl }.${ ext }`);\n  };\n\n  // https://stackoverflow.com/questions/2897619/using-html5-javascript-to-generate-and-save-a-file\n  download = (content, filename, contentType) => {\n    const type = contentType || 'application/octet-stream';\n    const a = document.createElement('a');\n    const blob = new Blob([ content ], { type: type });\n\n    a.href = window.URL.createObjectURL(blob);\n    a.download = filename;\n    a.click();\n  };\n\n  clearLocalStorage = () => {\n    localStorage.clear();\n    console.info('cleared local storage');\n  };\n\n  handleAnalyticsEvents = event => {\n    this.setState({ analyticsEvents: [ ...this.state.analyticsEvents, event ] });\n  };\n\n  handleChangeTranscriptTitle = newTitle => {\n    this.setState({\n      title: newTitle\n    });\n  };\n\n  handleChangeTranscriptName = value => {\n    this.setState({ fileName: value });\n  };\n\n  render() {\n    return (\n      <div className={ style.container }>\n        Demo <mark>React Transcript Editor</mark> |{' '}\n        <a\n          href=\"https://github.com/bbc/react-transcript-editor\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <FontAwesomeIcon icon={ faGithub } />\n        </a>\n        <hr />\n\n        <div className={ style.demoNav }>\n          <section className={ style.demoNavItem }>\n            <button onClick={ () => this.loadDemo() }>Load demo</button>\n          </section>\n          <section className={ style.demoNavItem }>\n            <label>Load Local Media</label>\n            <br />\n            <input\n              className={ style.demoInput }\n              type=\"file\"\n              onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n            />\n            <br />\n            or\n            <br />\n            <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n              Load Media From Url\n            </button>\n          </section>\n          <section className={ style.demoNavItem }>\n            <label>\n              Open Transcript <code>Json</code>\n            </label>\n            <br />\n            <SttTypeSelect\n              name={ 'sttType' }\n              value={ this.state.sttType }\n              handleChange={ this.handleSttTypeChange }\n            />\n            <br />\n            <input\n              className={ style.demoInput }\n              type=\"file\"\n              onChange={ e =>\n                this.handleChangeLoadTranscriptJson(e.target.files)\n              }\n            />\n          </section>\n          <section className={ style.demoNavItem }>\n            <label>Export transcript</label>\n            <br />\n            <ExportFormatSelect\n              name={ 'exportFormat' }\n              value={ this.state.exportFormat }\n              handleChange={ this.handleExportFormatChange }\n            />\n            <br />\n            <button onClick={ () => this.exportTranscript() }>Export file</button>\n          </section>\n          <section className={ style.demoNavItem }>\n            <label>Text Is Editable</label>\n            <br />\n            <label>\n              <input\n                type=\"checkbox\"\n                defaultChecked=\"true\"\n                onChange={ this.handleIsTextEditable }\n              />\n            </label>\n          </section>\n          <section className={ style.demoNavItem }>\n            <label>\n              Transcript Title <i>Optional</i>\n            </label>\n            <br />\n            <input\n              className={ style.demoInput }\n              type=\"text\"\n              value={ this.state.title }\n              onChange={ e => this.handleChangeTranscriptTitle(e.target.value) }\n            />\n          </section>\n          <section className={ style.demoNavItem }>\n            <button onClick={ () => this.clearLocalStorage() }>\n              Clear Local Storage\n            </button>\n          </section>\n        </div>\n        <hr />\n\n        <TranscriptEditor\n          transcriptData={ this.state.transcriptData }\n          fileName={ this.state.fileName }\n          mediaUrl={ this.state.mediaUrl }\n          isEditable={ this.state.isTextEditable }\n          sttJsonType={ this.state.sttType }\n          handleAnalyticsEvents={ this.handleAnalyticsEvents }\n          title={ this.state.title }\n          ref={ this.transcriptEditorRef }\n        />\n\n        <label>Components Analytics</label>\n        <textarea\n          style={ { height: '200px', width: '100%' } }\n          value={ JSON.stringify(this.state.analyticsEvents, null, 2) }\n          disabled\n        />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"color-light-grey\":\"#767676\",\"color-mid-grey\":\"#696969\",\"color-dark-grey\":\"#4a4a4a\",\"markers\":\"WrapperBlock_markers__oOsnW\",\"WrapperBlock\":\"WrapperBlock_WrapperBlock__KRhEE\",\"speaker\":\"WrapperBlock_speaker__3Jk4j\",\"text\":\"WrapperBlock_text__1lDVY\",\"time\":\"WrapperBlock_time__3Eatw\",\"EditLabel\":\"WrapperBlock_EditLabel__3cJzN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-lightest-grey\":\"#f2f2f2\",\"color-labs-red\":\"#a0372d\",\"color-dark-grey\":\"#4a4a4a\",\"shortcuts\":\"Shortcuts_shortcuts__2vH1D\",\"header\":\"Shortcuts_header__ZOVu4\",\"closeButton\":\"Shortcuts_closeButton__1J86z\",\"list\":\"Shortcuts_list__2apC7\",\"listItem\":\"Shortcuts_listItem__1-dwy\",\"shortcut\":\"Shortcuts_shortcut__196Hv\",\"shortcutLabel\":\"Shortcuts_shortcutLabel__3gcsP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"topSection\":\"MediaPlayer_topSection__1gJAM\",\"playerSection\":\"MediaPlayer_playerSection__y0g8M\",\"controlsSection\":\"MediaPlayer_controlsSection__wk446\",\"title\":\"MediaPlayer_title__h7Ojg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offsetContainer\":\"TimecodeOffset_offsetContainer__1pGLY\",\"inputBox\":\"TimecodeOffset_inputBox__20vcA\",\"button\":\"TimecodeOffset_button__B8F-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"Toggle_switchContainer__2oMzU\",\"switch\":\"Toggle_switch__39TJz\",\"slider\":\"Toggle_slider__1Lgir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"color-labs-red\":\"#a0372d\",\"DraftEditor-root\":\"TimedTextEditor_DraftEditor-root__28YV4\",\"editor\":\"TimedTextEditor_editor__2M5RK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPlayerControl\":\"Select_selectPlayerControl__H_co4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"bar\":\"ProgressBar_bar__xe2el\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoEl\":\"VideoPlayer_videoEl__YEyJ6\"};"],"sourceRoot":""}