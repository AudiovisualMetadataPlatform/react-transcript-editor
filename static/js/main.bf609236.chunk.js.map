{"version":3,"sources":["lib/TranscriptEditor/Settings/index.module.css","lib/TranscriptEditor/MediaPlayer/PlayerControls.module.css","lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/SpeakerLabel.js","lib/Util/timecode-converter/secondsToTimecode.js","lib/Util/timecode-converter/timecodeToSeconds.js","lib/Util/timecode-converter/padTimeToTimecode.js","lib/Util/timecode-converter/index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.js","lib/Util/adapters/generate-entities-ranges/index.js","lib/Util/adapters/bbc-kaldi/index.js","lib/Util/adapters/autoEdit2/index.js","lib/Util/adapters/index.js","lib/Util/export-adapters/txt/index.js","lib/Util/export-adapters/index.js","lib/TranscriptEditor/MediaPlayer/VideoPlayer.js","lib/TranscriptEditor/MediaPlayer/VolumeControl.js","lib/TranscriptEditor/MediaPlayer/Select.js","lib/TranscriptEditor/MediaPlayer/PlayerControls.js","lib/TranscriptEditor/MediaPlayer/ProgressBar.js","lib/TranscriptEditor/MediaPlayer/defaultHotKeys.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/Settings/Toggle/index.js","lib/TranscriptEditor/Settings/TimecodeOffset/index.js","lib/TranscriptEditor/Settings/index.js","lib/TranscriptEditor/Settings/Shortcuts.js","lib/TranscriptEditor/index.js","select-stt-json-type.js","select-export-format.js","index.js","lib/TranscriptEditor/TimedTextEditor/index.module.css","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.module.css","lib/TranscriptEditor/Settings/Shortcuts.module.css","lib/TranscriptEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css","lib/TranscriptEditor/MediaPlayer/VolumeControl.module.css","lib/TranscriptEditor/Settings/TimecodeOffset/index.module.css","index.module.css","lib/TranscriptEditor/Settings/Toggle/index.module.css","lib/TranscriptEditor/MediaPlayer/ProgressBar.module.css","lib/TranscriptEditor/MediaPlayer/Select.module.css"],"names":["module","exports","settings","header","closeButton","controlsContainer","settingElement","label","rollbackValue","timecodeLabel","color-darkest-grey","color-light-grey","color-labs-red","playerControls","playerButton","playBackRate","timeBox","currentTime","separator","duration","mutability","Word","generateConfidence","data","confidence","generatePreviousTimes","prevTimes","i","start","concat","dec","Math","floor","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","data-start","data-end","end","data-confidence","data-prev-times","data-entity-key","key","className","children","PureComponent","SpeakerLabel","style","speaker","EditLabel","onClick","handleOnClickEdit","index_es","icon","faUserEdit","name","secondsToTimecode","seconds","framePerSeconds","fps","undefined","normalisedSeconds","Number","toPrecision","toFixed","normalisePlayerTime","wholeSeconds","frames","_padZero","n","parseInt","timecodeToSecondsHelper","tc","s","split","timecodeToFrames","isOneDigit","str","length","padTimeToTimecode","time","timecode","includes","includesFullStop","replace","timecodeToSeconds","resultPadded","parseFloat","WrapperBlock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newSpeakerName","prompt","setState","blockProps","handleAnalyticsEvents","category","action","value","keyForCurrentCurrentBlock","block","getKey","currentBlockSelection","SelectionState","createEmpty","currentBlockSelectionState","EditorState","acceptSelection","editorState","getSelection","newBlockDataWithSpeakerName","newContentState","Modifier","mergeBlockData","setEditorNewContentState","handleTimecodeClick","onWordClick","state","timecodeOffset","get","startTimecode","speakerElement","TimedTextEditor_SpeakerLabel","timecodeElement","slice","markers","showSpeakers","showTimecodes","text","Draft","React","Component","generateEntitiesRanges","words","wordAttributeName","position","map","word","result","offset","random","toString","substring","bbcKaldiToDraft","bbcKaldiJson","results","paragraph","forEach","test","punct","push","groupWordsInParagraphs","retval","draftJsContentBlockParagraph","join","type","entityRanges","autoEdit2ToDraft","autoEdit2Json","autoEditText","autoEditparagraph","autoEditLine","line","tmpWord","startTime","endTime","createEntityMap","blocks","flatEntityRanges","flatten","list","reduce","b","Array","isArray","entityMap","sttJsonAdapter","transcriptData","sttJsonType","console","error","txt","blockData","x","exportAdapter","exportFormat","JSON","stringify","ext","draftToTxt","TimedTextEditor","KeyBindingUtil","hasCommandModifier","onChange","getCurrentContent","isPauseWhileTypingOn","isPlaying","playMedia","clearTimeout","plauseWhileTypingTimeOut","setTimeout","bind","assertThisInitialized","isEditable","saveTimer","localSave","mediaUrl","handleDoubleClick","event","element","nativeEvent","target","hasAttribute","parentElement","t","getAttribute","log","mediaUrlName","fileName","convertToRaw","localStorage","setItem","newLastLocalSavedDate","Date","getWordCount","wordArray","getPlainText","trim","match","setEditorContentState","convertFromRaw","createWithContent","decorator","forceRenderDecorator","getDecorator","newState","newEditorState","customKeyBindingFn","e","keyCode","altKey","getDefaultKeyBinding","preventDefault","handleKeyCommand","command","splitParagraph","currentSelection","isCollapsed","currentContent","splitBlock","splitState","targetSelection","originalBlock","blockMap","selectionBefore","getStartKey","blockSpeaker","wordStartTime","isEndOfParagraph","getEntityAt","getStartOffset","closestEntityToSelection","findClosestEntityKeyToSelectionPoint","entityData","afterMergeContentState","startSelectionOffsetKey","lengthPlainTextForTheBlock","getLength","remainingCharNumber","j","initialSelectionOffset","renderBlockWithTimecodes","component","editable","getCurrentWord","currentWord","isScrollIntoViewOn","document","querySelector","scrollIntoView","inline","loadData","prevProps","prevState","format","getItem","parse","lastLocalSavedDate","_this2","helpMessage","faMousePointer","faICursor","faKeyboard","faSave","tooltip","es","help","content","fadeDuration","fadeEasing","placement","radius","faQuestionCircle","round","editor","onDoubleClick","scoped","stripPastedStyles","blockRendererFn","keyBindingFn","nextProps","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","VideoPlayer","id","playsInline","src","onTimeUpdate","data-testid","onLoadedData","onLoadedDataGetDuration","ref","videoRef","VolumeControl","styles","switchContainer","switch","defaultChecked","handleMuteVolume","slider","Select","options","option","index","selectPlayerControl","currentValue","handleChange","PlayerControls","setIntervalHelperBackward","skipBackward","interval","setInterval","setIntervalHelperForward","skipForward","clearIntervalHelper","clearInterval","rollback","onMouseDown","onMouseUp","MediaPlayer_Select","playbackRateOptions","playbackRate","setPlayBackRate","promptSetCurrentTime","pictureInPicture","MediaPlayer_VolumeControl","ProgressBar","progress","bar","buttonClick","min","max","returnHotKeys","self","alt+k","priority","handler","togglePlayMedia","displayKeyCombination","alt+l","alt+j","alt+-","decreasePlaybackRate","alt+=","increasePlaybackRate","alt+r","rollBack","alt+t","PLAYBACK_RATES","MediaPlayer","hot_keys","setCurrentTime","newCurrentTime","newCurrentTimeInSeconds","current","readyState","userTimecodeValue","setTimeCodeOffset","newTimeCodeOffSet","rollBackValueInSeconds","tmpDesiredCurrentTime","handleTimeUpdate","hookOnTimeUpdate","handlePlayBackRateChange","input","slower","reverse","find","newSpeed","faster","handleChangeReplayRollbackValue","volume","paused","pauseMedia","pause","play","handleProgressBarClick","getMediaCurrentTime","handleMediaDurationChange","currentDuration","currentDurationWithOffset","durationInSeconds","mediaDuration","handlePictureInPicture","pictureInPictureElement","exitPictureInPicture","catch","requestPictureInPicture","alert","createRef","hotKeys","hookSeek","hookPlayMedia","hookIsPlaying","player","MediaPlayer_VideoPlayer","playerControlsSection","controlsSection","titleBox","title","MediaPlayer_PlayerControls","onSetCurrentTime","onSetTimecodeOffset","progressBar","MediaPlayer_ProgressBar","topSection","playerSection","hotkeys","Toggle","defaultValue","handleToggle","TimecodeOffset","resetTimecodeOffset","handleSetTimecodeOffset","setTimecodeOffset","offsetContainer","inputBox","button","Settings","handleSettingsToggle","faWindowClose","Settings_Toggle","defaultValuePauseWhileTyping","handlePauseWhileTyping","defaultValueScrollSync","handleIsScrollIntoViewChange","defaultRollBackValueInSeconds","handleRollBackValueInSeconds","handleShowTimecodes","handleShowSpeakers","Settings_TimecodeOffset","Shortcuts","hotKeysCheatsheet","keys","shortcut","listItem","shortcutLabel","shortcuts","handleShortcutsToggle","TranscriptEditor","ifPresentRetrieveTranscriptFromLocalStorage","refs","timedTextEditor","isPresentInLocalStorage","info","loadLocalSavedData","handleWordClick","handlePlayMedia","bool","handleIsPlaying","isChecked","checked","rollBackValue","forceUpdate","showSettings","showShortcuts","getEditorContent","lastLocalSavedTime","mediaPlayer","TranscriptEditor_MediaPlayer","foo","TranscriptEditor_Settings","Settings_Shortcuts","TranscriptEditor_TimedTextEditor","container","aside","settingsContainer","settingsButton","faCog","main","SttTypeSelect","disabled","ExportFormatSelect","App","handleIsTextEditable","isTextEditable","handleSttTypeChange","defineProperty","handleExportFormatChange","exportTranscript","_this$refs$transcript","transcriptEditor","download","filename","contentType","blob","Blob","href","window","URL","createObjectURL","click","clearLocalStorage","clear","analyticsEvents","toConsumableArray","handleChangeTranscriptName","sttType","kaldiTedTalkTranscript","files","file","canPlayType","fileURL","fr","FileReader","onload","evt","readAsText","_this3","rel","loadDemo","handleChangeLoadMedia","handleChangeLoadMediaUrl","select_stt_json_type","handleChangeLoadTranscriptJson","select_export_format","lib_TranscriptEditor","height","width","render","src_App","getElementById","color-subt-green","DraftEditor-root","color-mid-grey","color-dark-grey","color-lightest-grey","helpText","hideInMobile"],"mappings":"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","file":"static/js/main.bf609236.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3UPB5\",\"header\":\"Settings_header__3Y30x\",\"closeButton\":\"Settings_closeButton__1i5o9\",\"controlsContainer\":\"Settings_controlsContainer__2E90Z\",\"settingElement\":\"Settings_settingElement__2ZeKY\",\"label\":\"Settings_label__1NQsi\",\"rollbackValue\":\"Settings_rollbackValue__3dic-\",\"timecodeLabel\":\"Settings_timecodeLabel__WyMOt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-darkest-grey\":\"#282828\",\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"playerControls\":\"PlayerControls_playerControls__3emd7\",\"playerButton\":\"PlayerControls_playerButton___xv7e\",\"playBackRate\":\"PlayerControls_playBackRate__2IcvZ\",\"timeBox\":\"PlayerControls_timeBox__2T0JQ\",\"currentTime\":\"PlayerControls_currentTime__QZjCv\",\"separator\":\"PlayerControls_separator__f03Pz\",\"duration\":\"PlayerControls_duration__l__Bv\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from 'react-simple-tooltip';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle, faMousePointer, faICursor, faUserEdit, faKeyboard, faSave } from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  Editor,\n  EditorState,\n  CompositeDecorator,\n  convertFromRaw,\n  convertToRaw,\n  getDefaultKeyBinding,\n  Modifier,\n  KeyBindingUtil\n} from 'draft-js';\n\nimport Word from './Word';\nimport WrapperBlock from './WrapperBlock';\n\nimport sttJsonAdapter from '../../Util/adapters/index.js';\nimport exportAdapter from '../../Util/export-adapters/index.js';\nimport style from './index.module.css';\n\nconst { hasCommandModifier } = KeyBindingUtil;\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData,\n      isEditable: this.props.isEditable,\n      sttJsonType: this.props.sttJsonType,\n      timecodeOffset: this.props.timecodeOffset,\n      showSpeakers: this.props.showSpeakers,\n      showTimecodes: this.props.showTimecodes,\n      // inputCount: 0,\n      currentWord: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n\n      return {\n        transcriptData: nextProps.transcriptData,\n        isEditable: nextProps.isEditable,\n        timecodeOffset: nextProps.timecodeOffset,\n        showSpeakers: nextProps.showSpeakers,\n        showTimecodes: nextProps.showTimecodes\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.transcriptData !== this.state.transcriptData) {\n      this.loadData();\n    }\n    if (prevState.timecodeOffset !== this.state.timecodeOffset\n      || prevState.showSpeakers !== this.state.showSpeakers\n      || prevState.showTimecodes !== this.state.showTimecodes) {\n      // forcing a re-render is an expensive operation and\n      // there might be a way of optimising this at a later refactor (?)\n      // the issue is that WrapperBlock is not update on TimedTextEditor\n      // state change otherwise.\n      // for now compromising on this, as setting timecode offset, and\n      // display preferences for speakers and timecodes are not expected to\n      // be very frequent operations but rather one time setup in most cases.\n      this.forceRenderDecorator();\n    }\n  }\n\n  onChange = (editorState) => {\n    // https://draftjs.org/docs/api-reference-editor-state#lastchangetype\n    // https://draftjs.org/docs/api-reference-editor-change-type\n    // doing editorStateChangeType === 'insert-characters'  is triggered even\n    // outside of draftJS eg when clicking play button so using this instead\n    // see issue https://github.com/facebook/draft-js/issues/1060\n    if (this.state.editorState.getCurrentContent() !== editorState.getCurrentContent()) {\n      if (this.props.isPauseWhileTypingOn) {\n        if (this.props.isPlaying()) {\n          this.props.playMedia(false);\n          // Pause video for X seconds\n          const pauseWhileTypingIntervalInMilliseconds = 3000;\n          // resets timeout\n          clearTimeout(this.plauseWhileTypingTimeOut);\n          this.plauseWhileTypingTimeOut = setTimeout(function() {\n            // after timeout starts playing again\n            this.props.playMedia(true);\n          }.bind(this), pauseWhileTypingIntervalInMilliseconds);\n        }\n      }\n    }\n\n    if (this.state.isEditable) {\n      this.setState(() => ({\n        editorState\n      }), () => {\n        // saving when user has stopped typing for more then five seconds\n        if (this.saveTimer!== undefined) {\n          clearTimeout(this.saveTimer);\n        }\n        this.saveTimer = setTimeout(() => {\n          this.localSave(this.props.mediaUrl);\n        }, 5000);\n      });\n    }\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = sttJsonAdapter(this.props.transcriptData, this.props.sttJsonType);\n      this.setEditorContentState(blocks);\n    }\n  }\n\n  getEditorContent(exportFormat) {\n    const format = exportFormat || 'draftjs';\n\n    return exportAdapter(convertToRaw(this.state.editorState.getCurrentContent()), format);\n  }\n\n  // click on words - for navigation\n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event) => {\n    // nativeEvent --> React giving you the DOM event\n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      this.props.onWordClick(t);\n    }\n  }\n\n  localSave = () => {\n    console.log('localSave');\n    clearTimeout(this.saveTimer);\n    let mediaUrlName = this.props.mediaUrl;\n    // if using local media instead of using random blob name\n    // that makes it impossible to retrieve from on page refresh\n    // use file name\n    if (this.props.mediaUrl.includes('blob')) {\n      mediaUrlName = this.props.fileName;\n    }\n\n    const data = convertToRaw(this.state.editorState.getCurrentContent());\n    localStorage.setItem(`draftJs-${ mediaUrlName }`, JSON.stringify(data));\n    const newLastLocalSavedDate = new Date().toString();\n    localStorage.setItem(`timestamp-${ mediaUrlName }`, newLastLocalSavedDate);\n\n    // return newLastLocalSavedDate;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isPresentInLocalStorage(mediaUrl) {\n    if (mediaUrl !== null) {\n      let mediaUrlName = mediaUrl;\n\n      if (mediaUrl.includes('blob')) {\n        mediaUrlName = this.props.fileName;\n      }\n\n      const data = localStorage.getItem(`draftJs-${ mediaUrlName }`);\n      if (data !== null) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  loadLocalSavedData(mediaUrl) {\n    let mediaUrlName = mediaUrl;\n    if (mediaUrl.includes('blob')) {\n      mediaUrlName = this.props.fileName;\n    }\n    const data = JSON.parse(localStorage.getItem(`draftJs-${ mediaUrlName }`));\n    if (data !== null) {\n      const lastLocalSavedDate = localStorage.getItem(`timestamp-${ mediaUrlName }`);\n      this.setEditorContentState(data);\n\n      return lastLocalSavedDate;\n    }\n\n    return '';\n  }\n\n  // originally from\n  // https://github.com/draft-js-plugins/draft-js-plugins/blob/master/draft-js-counter-plugin/src/WordCounter/index.js#L12\n  getWordCount = (editorState) => {\n    const plainText = editorState.getCurrentContent().getPlainText('');\n    const regex = /(?:\\r\\n|\\r|\\n)/g; // new line, carriage return, line feed\n    const cleanString = plainText.replace(regex, ' ').trim(); // replace above characters w/ space\n    const wordArray = cleanString.match(/\\S+/g); // matches words according to whitespace\n\n    return wordArray ? wordArray.length : 0;\n  }\n\n  /**\n  * @param {object} data.entityMap - draftJs entity maps - used by convertFromRaw\n  * @param {object} data.blocks - draftJs blocks - used by convertFromRaw\n  * set DraftJS Editor content state from blocks\n  * contains blocks and entityMap\n  */\n  setEditorContentState = (data) => {\n    const contentState = convertFromRaw(data);\n    // eslint-disable-next-line no-use-before-define\n    const editorState = EditorState.createWithContent(contentState, decorator);\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TimedTextEditor',\n        action: 'setEditorContentState',\n        name: 'getWordCount',\n        value: this.getWordCount(editorState)\n      });\n    }\n\n    this.setState({ editorState });\n  }\n\n  // Helper function to re-render this component\n  // used to re-render WrapperBlock on timecode offset change\n  // or when show / hide preferences for speaker labels and timecodes change\n  forceRenderDecorator = () => {\n    // const { editorState, updateEditorState } = this.props;\n    const contentState = this.state.editorState.getCurrentContent();\n    const decorator = this.state.editorState.getDecorator();\n\n    const newState = EditorState.createWithContent(\n      contentState,\n      decorator\n    );\n\n    // this.setEditorNewContentState(newState);\n    const newEditorState = EditorState.push(newState, contentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n  * Update Editor content state\n  */\n  setEditorNewContentState = (newContentState) => {\n    const newEditorState = EditorState.push(this.state.editorState, newContentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n   * Listen for draftJs custom key bindings\n   */\n  customKeyBindingFn = (e) => {\n    const enterKey = 13;\n    const spaceKey =32;\n    const kKey = 75;\n    const lKey = 76;\n    const jKey = 74;\n    const equalKey = 187;//used for +\n    const minusKey = 189; // -\n    const rKey = 82;\n    const tKey = 84;\n\n    if (e.keyCode === enterKey ) {\n      return 'split-paragraph';\n    }\n    // if alt key is pressed in combination with these other keys\n    if (e.altKey && ((e.keyCode === spaceKey)\n    || (e.keyCode === spaceKey)\n    || (e.keyCode === kKey)\n    || (e.keyCode === lKey)\n    || (e.keyCode === jKey)\n    || (e.keyCode === equalKey)\n    || (e.keyCode === minusKey)\n    || (e.keyCode === rKey)\n    || (e.keyCode === tKey))\n    ) {\n      e.preventDefault();\n\n      return 'keyboard-shortcuts';\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  /**\n   * Handle draftJs custom key commands\n   */\n  handleKeyCommand = (command) => {\n    if (command === 'split-paragraph') {\n      this.splitParagraph();\n    }\n\n    if (command === 'keyboard-shortcuts') {\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function to handle splitting paragraphs with return key\n   * on enter key, perform split paragraph at selection point.\n   * Add timecode of next word after split to paragraph\n   * as well as speaker name to new paragraph\n   */\n  splitParagraph = () => {\n    // https://github.com/facebook/draft-js/issues/723#issuecomment-367918580\n    // https://draftjs.org/docs/api-reference-selection-state#start-end-vs-anchor-focus\n    const currentSelection = this.state.editorState.getSelection();\n    // only perform if selection is not selecting a range of words\n    // in that case, we'd expect delete + enter to achieve same result.\n    if (currentSelection.isCollapsed()) {\n      const currentContent = this.state.editorState.getCurrentContent();\n      // https://draftjs.org/docs/api-reference-modifier#splitblock\n      const newContentState = Modifier.splitBlock(currentContent, currentSelection);\n      // https://draftjs.org/docs/api-reference-editor-state#push\n      const splitState = EditorState.push(this.state.editorState, newContentState, 'split-block');\n      const targetSelection = splitState.getSelection();\n\n      const originalBlock = currentContent.blockMap.get(newContentState.selectionBefore.getStartKey());\n      const originalBlockData = originalBlock.getData();\n      const blockSpeaker = originalBlockData.get('speaker');\n\n      let wordStartTime = 'NA';\n      // eslint-disable-next-line prefer-const\n      let isEndOfParagraph = false;\n      // identify the entity (word) at the selection/cursor point on split.\n      // eslint-disable-next-line prefer-const\n      let entityKey = originalBlock.getEntityAt(currentSelection.getStartOffset());\n      // if there is no word entity associated with a char then there is no entity key\n      // at that selection point\n      if (entityKey === null) {\n        const closestEntityToSelection = this.findClosestEntityKeyToSelectionPoint(currentSelection, originalBlock);\n        entityKey = closestEntityToSelection.entityKey;\n        isEndOfParagraph = closestEntityToSelection.isEndOfParagraph;\n        // handle edge case when it doesn't find a closest entity (word)\n        // eg pres enter on an empty line\n        if (entityKey === null) {\n          return 'not-handled';\n        }\n      }\n      // if there is an entityKey at or close to the selection point\n      // can get the word startTime. for the new paragraph.\n      const entityInstance = currentContent.getEntity(entityKey);\n      const entityData = entityInstance.getData();\n      if (isEndOfParagraph) {\n        // if it's end of paragraph use end time of word for new paragraph\n        wordStartTime = entityData.end;\n      }\n      else {\n        wordStartTime = entityData.start;\n      }\n      // split paragraph\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const afterMergeContentState = Modifier.mergeBlockData(\n        splitState.getCurrentContent(),\n        targetSelection,\n        {\n          'start': wordStartTime,\n          'speaker': blockSpeaker\n        }\n      );\n      this.setEditorNewContentState(afterMergeContentState);\n\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function for splitParagraph\n   * to find the closest entity (word) to a selection point\n   * that does not fall on an entity to begin with\n   * Looks before if it's last char in a paragraph block.\n   * After for everything else.\n   */\n  findClosestEntityKeyToSelectionPoint = (currentSelection, originalBlock) => {\n    // set defaults\n    let entityKey = null;\n    let isEndOfParagraph = false;\n\n    // selection offset from beginning of the paragraph block\n    const startSelectionOffsetKey = currentSelection.getStartOffset();\n    // length of the plain text for the ContentBlock\n    const lengthPlainTextForTheBlock = originalBlock.getLength();\n    // number of char from selection point to end of paragraph\n    const remainingCharNumber = lengthPlainTextForTheBlock - startSelectionOffsetKey;\n    // if it's the last char in the paragraph - get previous entity\n    if (remainingCharNumber === 0 ) {\n      isEndOfParagraph = true;\n      for (let j = lengthPlainTextForTheBlock; j >0 ; j--) {\n        entityKey = originalBlock.getEntityAt(j);\n        if (entityKey!== null) {\n          // if it finds it then return\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n    // if it's first char or another within the block - get next entity\n    else {\n      console.log('Main part of paragraph');\n      let initialSelectionOffset = currentSelection.getStartOffset();\n      for (let i = 0; i < remainingCharNumber ; i++) {\n        initialSelectionOffset +=i;\n        entityKey = originalBlock.getEntityAt(initialSelectionOffset);\n        // if it finds it then return\n        if (entityKey !== null) {\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n\n    // cover edge cases where it doesn't find it\n    return { entityKey, isEndOfParagraph };\n  }\n\n  renderBlockWithTimecodes = () => {\n    return {\n      component: WrapperBlock,\n      editable: true,\n      props: {\n        showSpeakers: this.state.showSpeakers,\n        showTimecodes: this.state.showTimecodes,\n        timecodeOffset: this.state.timecodeOffset,\n        editorState: this.state.editorState,\n        setEditorNewContentState: this.setEditorNewContentState,\n        onWordClick: this.props.onWordClick,\n        handleAnalyticsEvents: this.props.handleAnalyticsEvents\n      }\n    };\n  }\n\n  getCurrentWord = () => {\n    const currentWord = {\n      start: 'NA',\n      end: 'NA'\n    };\n\n    if (this.state.transcriptData) {\n      const contentState = this.state.editorState.getCurrentContent();\n      // TODO: using convertToRaw here might be slowing down performance(?)\n      const contentStateConvertEdToRaw = convertToRaw(contentState);\n      const entityMap = contentStateConvertEdToRaw.entityMap;\n\n      for (var entityKey in entityMap) {\n        const entity = entityMap[entityKey];\n        const word = entity.data;\n\n        if (word.start <= this.props.currentTime && word.end >= this.props.currentTime) {\n          currentWord.start = word.start;\n          currentWord.end = word.end;\n        }\n      }\n    }\n\n    if (currentWord.start !== 'NA') {\n      if (this.props.isScrollIntoViewOn) {\n        const currentWordElement = document.querySelector(`span.Word[data-start=\"${ currentWord.start }\"]`);\n        currentWordElement.scrollIntoView({ block: 'nearest', inline: 'center' });\n      }\n    }\n\n    return currentWord;\n  }\n\n  render() {\n    const helpMessage = <div className={ style.helpMessage }>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faMousePointer } />Double click on a word or timestamp to jump to that point in the video.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faICursor } />Start typing to edit text.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faUserEdit } />You can add and change names of speakers in your transcript.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faKeyboard } />Use keyboard shortcuts for quick control.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faSave } />Save & export to get a copy to your desktop.</span>\n    </div>;\n\n    const tooltip = <Tooltip\n      className={ style.help }\n      content={ helpMessage }\n      fadeDuration={ 250 }\n      fadeEasing={ 'ease-in' }\n      placement={ 'bottom' }\n      radius={ 5 }>\n      <FontAwesomeIcon className={ style.icon } icon={ faQuestionCircle } />\n      How does this work?\n    </Tooltip>;\n\n    const currentWord = this.getCurrentWord();\n    const highlightColour = '#69e3c2';\n    const unplayedColor = '#767676';\n    const correctionBorder = '1px dotted blue';\n\n    // Time to the nearest half second\n    const time = Math.round(this.props.currentTime * 4.0) / 4.0;\n\n    const editor = (\n      <section\n        className={ style.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }>\n\n        <style scoped>\n          {`span.Word[data-start=\"${ currentWord.start }\"] { background-color: ${ highlightColour }; text-shadow: 0 0 0.01px black }`}\n          {`span.Word[data-start=\"${ currentWord.start }\"]+span { background-color: ${ highlightColour } }`}\n          {`span.Word[data-prev-times~=\"${ Math.floor(time) }\"] { color: ${ unplayedColor } }`}\n          {`span.Word[data-prev-times~=\"${ time }\"] { color: ${ unplayedColor } }`}\n          {`span.Word[data-confidence=\"low\"] { border-bottom: ${ correctionBorder } }`}\n        </style>\n\n        <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n          blockRendererFn={ this.renderBlockWithTimecodes }\n          handleKeyCommand={ command => this.handleKeyCommand(command) }\n          keyBindingFn={ e => this.customKeyBindingFn(e) }\n        />\n      </section>\n    );\n\n    return (\n      <section>\n        { tooltip }\n        { this.props.transcriptData !== null ? editor : null }\n      </section>\n    );\n  }\n}\n\n// DraftJs decorator to recognize which entity is which\n// and know what to apply to what component\nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs\n// defines what to use to render the entity\nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word,\n  },\n]);\n\nTimedTextEditor.propTypes = {\n  transcriptData: PropTypes.object,\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  onWordClick: PropTypes.func,\n  sttJsonType: PropTypes.string,\n  isPlaying: PropTypes.func,\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.number,\n  isScrollIntoViewOn: PropTypes.bool,\n  isPauseWhileTypingOn: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleAnalyticsEvents: PropTypes.func\n};\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Word extends PureComponent {\n  generateConfidence = (data) => {\n    // handling edge case where confidence score not present\n    if (data.confidence) {\n      return data.confidence > 0.6 ? 'high' : 'low';\n    }\n\n    return 'high';\n  }\n\n  generatePreviousTimes = (data) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < data.start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (data.start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((data.start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(data.start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n      <span\n        data-start={ data.start }\n        data-end={ data.end }\n        data-confidence = { this.generateConfidence(data) }\n        data-prev-times = { this.generatePreviousTimes(data) }\n        data-entity-key={ data.key }\n        className=\"Word\">\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  entityKey: PropTypes.string,\n  children: PropTypes.array\n};\n\nexport default Word;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons';\n\nimport style from './WrapperBlock.module.css';\n\nclass SpeakerLabel extends PureComponent {\n  render() {\n    return (\n      <span className={ style.speaker }>\n        <span\n          className={ style.EditLabel }\n          onClick={ this.props.handleOnClickEdit }>\n          <FontAwesomeIcon icon={ faUserEdit } />\n        </span>\n        {this.props.name}\n      </span>\n    );\n  }\n}\n\nSpeakerLabel.propTypes = {\n  name: PropTypes.string,\n  handleOnClickEdit: PropTypes.func\n};\n\nexport default SpeakerLabel;\n","/**\n* Raised in this comment https://github.com/bbc/react-transcript-editor/pull/9\n* abstracted from https://github.com/bbc/newslabs-cdn/blob/master/js/20-bbcnpf.utils.js\n* In broadcast VIDEO, timecode is NOT hh:mm:ss:ms, it's hh:mm:ss:ff where ff is frames,\n* dependent on the framerate of the media concerned.\n* `hh:mm:ss:ff`\n*/\n\n/**\n * Helper function\n * Rounds to the 14milliseconds boundaries\n * Time in video can only \"exist in\" 14milliseconds boundaries.\n * This makes it possible for the HTML5 player to be frame accurate.\n * @param {*} seconds\n * @param {*} fps\n */\nconst normalisePlayerTime = function (seconds, fps) {\n  return Number((1.0 / fps * Math.floor(Number((fps * seconds).toPrecision(12)))).toFixed(2));\n};\n\n/*\n* @param {*} seconds\n* @param {*} fps\n*/\nconst secondsToTimecode = function (seconds, framePerSeconds) {\n  // written for PAL non-drop timecode\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n\n  const normalisedSeconds = normalisePlayerTime(seconds, fps);\n\n  const wholeSeconds = Math.floor(normalisedSeconds);\n  const frames = ((normalisedSeconds - wholeSeconds) * fps).toFixed(2);\n\n  // prepends zero - example pads 3 to 03\n  function _padZero(n) {\n    if (n < 10) return `0${ parseInt(n) }`;\n\n    return parseInt(n);\n  }\n\n  return `${ _padZero((wholeSeconds / 60 / 60) % 60)\n  }:${\n    _padZero((wholeSeconds / 60) % 60)\n  }:${\n    _padZero(wholeSeconds % 60)\n  }:${\n    _padZero(frames) }`;\n};\n\nexport default secondsToTimecode;\n","/**\n * Helperf unction\n * @param {*} tc\n * @param {*} fps\n */\nconst timecodeToFrames = function (tc, fps) {\n  // TODO make 29.97 fps drop-frame aware - works for 25 only.\n\n  const s = tc.split(':');\n  let frames = parseInt(s[3]);\n  frames += parseInt(s[2]) * fps;\n  frames += parseInt(s[1]) * (fps * 60);\n  frames += parseInt(s[0]) * (fps * 60 * 60);\n\n  return frames;\n};\n\n/**\n * Convert broadcast timecodes to seconds\n * @param {*} tc - `hh:mm:ss:ff`\n * @param {*} framePerSeconds - defaults to 25 if not provided\n */\nconst timecodeToSecondsHelper = function (tc, framePerSeconds) {\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n  const frames = timecodeToFrames(tc, fps);\n\n  return Number(Number(frames / fps).toFixed(2));\n};\n\nexport default timecodeToSecondsHelper;\n","const countColon = timecode => timecode.split(':').length;\n\nconst includesFullStop = timecode => timecode.includes('.');\n\nconst isOneDigit = str => str.length === 1;\n\nconst padTimeToTimecode = (time) => {\n  if (typeof time === 'string') {\n    switch (countColon(time)) {\n    case 4:\n      // is already in timecode format\n      // hh:mm:ss:ff\n      return time;\n    case 2:\n      // m:ss\n      if (isOneDigit(time.split(':')[0])) {\n        return `00:0${ time }:00`;\n      }\n\n      return `00:${ time }:00`;\n    case 3:\n      // hh:mm:ss\n      return `${ time }:00`;\n    default:\n      // mm.ss\n      if (includesFullStop(time)) {\n        // m.ss\n        if (isOneDigit(time.split('.')[0])) {\n          return `00:0${ time.split('.')[0] }:${ time.split('.')[1] }:00`;\n        }\n\n        return `00:${ time.replace('.', ':') }:00`;\n      }\n\n      // if just int, then it's seconds\n      // s\n      if (isOneDigit(time)) {\n        return `00:00:0${ time }:00`;\n      }\n\n      return `00:00:${ time }:00`;\n    }\n    // edge case if it's number return a number coz cannot refactor\n    // TODO: might need to refactor and move this elsewhere\n  } else {\n    return time;\n  }\n};\n\nexport default padTimeToTimecode;\n","/**\n * Wrapping around \"time stamps\" and timecode conversion modules\n * To provide more support for variety of formats.\n */\nimport secondsToTimecode from './secondsToTimecode';\nimport timecodeToSecondsHelper from './timecodeToSeconds';\nimport padTimeToTimecode from './padTimeToTimecode';\n\n/**\n * @param {*} time\n * Can take as input timecodes in the following formats\n * - hh:mm:ss:ff\n * - mm:ss\n * - m:ss\n * - ss - seconds --> if it's already in seconds then it just returns seconds\n * - hh:mm:ff\n * @todo could be refactored with some helper functions for clarity\n */\nconst timecodeToSeconds = (time) => {\n  if (typeof time === 'string') {\n    const resultPadded = padTimeToTimecode(time);\n    const resultConverted = timecodeToSecondsHelper(resultPadded);\n\n    return resultConverted;\n  }\n\n  // assuming it receive timecode as seconds as string '600'\n  return parseFloat(time);\n};\n\nconst shortTimecode = (time) => {\n  const timecode = secondsToTimecode(time);\n\n  return timecode.slice(0, -3);\n};\n\nexport { secondsToTimecode, timecodeToSeconds, shortTimecode };\n","import React from 'react';\nimport { EditorBlock, Modifier, EditorState, SelectionState } from 'draft-js';\n\nimport SpeakerLabel from './SpeakerLabel';\nimport { shortTimecode, secondsToTimecode } from '../../Util/timecode-converter/';\n\nimport style from './WrapperBlock.module.css';\n\nclass WrapperBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      speaker: '',\n      start: 0,\n      timecodeOffset: this.props.blockProps.timecodeOffset\n    };\n  }\n\n  componentDidMount() {\n    const { block } = this.props;\n    const speaker = block.getData().get('speaker');\n\n    const start = block.getData().get('start');\n\n    this.setState({\n      speaker: speaker,\n      start: start\n    });\n  }\n\n  handleOnClickEdit = () => {\n    const newSpeakerName = prompt('New Speaker Name?');\n\n    if (newSpeakerName !== '' && newSpeakerName !== null) {\n      this.setState({ speaker: newSpeakerName });\n      if (this.props.blockProps.handleAnalyticsEvents !== undefined) {\n        this.props.blockProps.handleAnalyticsEvents({\n          category: 'WrapperBlock',\n          action: 'handleOnClickEdit',\n          name: 'newSpeakerName',\n          value: newSpeakerName\n        });\n      }\n\n      // From docs: https://draftjs.org/docs/api-reference-selection-state#keys-and-offsets\n      // selection points are tracked as key/offset pairs,\n      // where the key value is the key of the ContentBlock where the point is positioned\n      // and the offset value is the character offset within the block.\n\n      // Get key of the currentBlock\n      const keyForCurrentCurrentBlock = this.props.block.getKey();\n      // create empty selection for current block\n      // https://draftjs.org/docs/api-reference-selection-state#createempty\n      const currentBlockSelection = SelectionState.createEmpty(keyForCurrentCurrentBlock);\n      const editorStateWithSelectedCurrentBlock = EditorState.acceptSelection(this.props.blockProps.editorState, currentBlockSelection);\n\n      const currentBlockSelectionState = editorStateWithSelectedCurrentBlock.getSelection();\n      const newBlockDataWithSpeakerName = { speaker: newSpeakerName };\n\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const newContentState = Modifier.mergeBlockData(\n        this.props.contentState,\n        currentBlockSelectionState,\n        newBlockDataWithSpeakerName\n      );\n\n      this.props.blockProps.setEditorNewContentState(newContentState);\n    }\n  }\n\n  handleTimecodeClick = () => {\n    this.props.blockProps.onWordClick(this.state.start);\n    if (this.props.blockProps.handleAnalyticsEvents !== undefined) {\n      this.props.blockProps.handleAnalyticsEvents({\n        category: 'WrapperBlock',\n        action: 'handleTimecodeClick',\n        name: 'onWordClick',\n        value: secondsToTimecode(this.state.start)\n      });\n    }\n\n  }\n\n  render() {\n    let startTimecode = this.state.start;\n    if (this.props.blockProps.timecodeOffset) {\n      startTimecode += this.props.blockProps.timecodeOffset;\n    }\n\n    const speakerElement = <SpeakerLabel\n      name={ this.state.speaker }\n      handleOnClickEdit={ this.handleOnClickEdit }\n    />;\n\n    const timecodeElement = <span className={ style.time } onClick={ this.handleTimecodeClick }>{shortTimecode(startTimecode)}</span>;\n\n    return (\n      <div className={ style.WrapperBlock }>\n        <div className={ style.markers }>\n          {this.props.blockProps.showSpeakers ? speakerElement : ''}\n          {this.props.blockProps.showTimecodes ? timecodeElement : ''}\n        </div>\n        <div className={ style.text }>\n          <EditorBlock { ...this.props } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WrapperBlock;\n","/**\n * Helper function to generate draft.js entities,\n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\n\n/**\n*  @param {json} words  - List of words\n*  @param {string} wordAttributeName - eg 'punct' or 'text' or etc.\n* attribute for the word object containing the text. eg word ={ punct:'helo', ... }\n*  or eg word ={ text:'helo', ... }\n*/\nconst generateEntitiesRanges = (words, wordAttributeName) => {\n  let position = 0;\n\n  return words.map((word) => {\n    const result = {\n      start: word.start,\n      end: word.end,\n      confidence: word.confidence,\n      text: word[wordAttributeName],\n      offset: position,\n      length: word[wordAttributeName].length,\n      key: Math.random()\n        .toString(36)\n        .substring(6),\n    };\n    // increase position counter - to determine word offset in paragraph\n    position = position + word[wordAttributeName].length + 1;\n\n    return result;\n  });\n};\n\nexport default generateEntitiesRanges;\n","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        ...\n```\n *\n * into\n *\n ```\n const blocks = [\n  {\n    \"text\": \"There is a day.\",\n    \"type\": \"paragraph\",\n    \"data\": {\n      \"speaker\": \"TBC 0\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        {\n          \"start\": 13.38,\n          \"confidence\": 0.99,\n          \"end\": 13.44,\n          \"word\": \"a\",\n          \"punct\": \"a\",\n          \"index\": 2\n        },\n        {\n          \"start\": 13.44,\n          \"confidence\": 1,\n          \"end\": 13.86,\n          \"word\": \"day\",\n          \"punct\": \"day.\",\n          \"index\": 3\n        }\n      ],\n      \"start\": 13.02\n    },\n    \"entityRanges\": [\n      {\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"confidence\": 0.68,\n        \"text\": \"There\",\n        \"offset\": 0,\n        \"length\": 5,\n        \"key\": \"li6c6ld\"\n      },\n      {\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"confidence\": 0.61,\n        \"text\": \"is\",\n        \"offset\": 6,\n        \"length\": 2,\n        \"key\": \"pcgzkp6\"\n      },\n      {\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"confidence\": 0.99,\n        \"text\": \"a\",\n        \"offset\": 9,\n        \"length\": 1,\n        \"key\": \"ngomd9\"\n      },\n      {\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"confidence\": 1,\n        \"text\": \"day.\",\n        \"offset\": 11,\n        \"length\": 4,\n        \"key\": \"sgmfl4f\"\n      }\n    ]\n  },\n  ...\n```\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach((word) => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\nconst bbcKaldiToDraft = (bbcKaldiJson) => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct'), // wordAttributeName\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","/**\n * Convert autoEdit2 Json\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n * See samples folder and test file\n * for reference data structures\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index';\n\n/**\n * groups words list from autoEdit transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words objects from autoEdit transcript\n */\n\nconst groupWordsInParagraphs = (autoEditText) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  autoEditText.forEach((autoEditparagraph) => {\n    autoEditparagraph.paragraph.forEach((autoEditLine) => {\n      autoEditLine.line.forEach((word) => {\n        // adjusting time reference attributes from\n        // `startTime` `endTime` to `start` `end`\n        // for word object\n        const tmpWord = {\n          text: word.text,\n          start: word.startTime,\n          end: word.endTime,\n        };\n        //  if word contains punctuation\n        if (/[.?!]/.test(word.text)) {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n          results.push(paragraph);\n          // reset paragraph\n          paragraph = { words: [], text: [] };\n        } else {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n        }\n      });\n    });\n  });\n\n  return results;\n};\n\nconst autoEdit2ToDraft = (autoEdit2Json) => {\n  const results = [];\n  const tmpWords = autoEdit2Json.text;\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'text'),\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  // console.log(JSON.stringify(results,null,2))\n  return results;\n};\n\nexport default autoEdit2ToDraft;\n","import bbcKaldiToDraft from './bbc-kaldi/index';\nimport autoEdit2ToDraft from './autoEdit2/index';\n/**\n * Adapters for STT conversion\n * @param {json} transcriptData - A json transcript with some word accurate timecode\n * @param {string} sttJsonType - the type of transcript supported by the available adapters\n */\n\n// converts nested arrays into one dimensional array\nconst flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\nconst createEntityMap = (blocks) => {\n  const entityRanges = blocks.map(block => block.entityRanges);\n  // eslint-disable-next-line no-use-before-define\n  const flatEntityRanges = flatten(entityRanges);\n\n  const entityMap = {};\n\n  flatEntityRanges.forEach((data) => {\n    entityMap[data.key] = {\n      type: 'WORD',\n      mutability: 'MUTABLE',\n      data,\n    };\n  });\n\n  return entityMap;\n};\n\nconst sttJsonAdapter = (transcriptData, sttJsonType) => {\n  let blocks;\n  switch (sttJsonType) {\n  case 'bbckaldi':\n    blocks = bbcKaldiToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'autoedit2':\n    blocks = autoEdit2ToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'draftjs':\n    return transcriptData; // (typeof transcriptData === 'string')? JSON.parse(transcriptData): transcriptData;\n  default:\n    // code block\n    console.error('not recognised the stt enginge');\n  }\n};\n\nexport default sttJsonAdapter;\n","export default (blockData) => {\n  const lines = blockData.blocks.map(x => x.text);\n\n  return lines.join('\\n\\n');\n};\n","import draftToTxt from './txt/index';\n/**\n * Adapters for Draft.js conversion\n * @param {json} blockData - Draft.js blocks\n * @param {string} exportFormat - the type of file supported by the available adapters\n */\n\nconst exportAdapter = (blockData, exportFormat) => {\n  switch (exportFormat) {\n  case 'draftjs':\n    return { data: JSON.stringify(blockData, null, 2), ext: 'json' };\n  case 'txt':\n    return { data: draftToTxt(blockData), ext: 'txt' };\n  default:\n    // code block\n    console.error('Did not recognise the export format');\n  }\n};\n\nexport default exportAdapter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass VideoPlayer extends React.Component {\n  render() {\n    return (\n      <video\n        id=\"video\"\n        playsInline\n        src={ this.props.mediaUrl }\n        onTimeUpdate={ this.props.onTimeUpdate }\n        type=\"video/mp4\"\n        data-testid=\"media-player-id\"\n        onClick={ this.props.onClick }\n        onLoadedData={ this.props.onLoadedDataGetDuration }\n        ref={ this.props.videoRef }\n      />\n    );\n  }\n}\n\nVideoPlayer.propTypes = {\n  mediaUrl: PropTypes.string,\n  onTimeUpdate: PropTypes.func,\n  onClick: PropTypes.func,\n  videoRef: PropTypes.object,\n  onLoadedDataGetDuration: PropTypes.func\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './VolumeControl.module.css';\nclass VolumeControl extends React.Component {\n\n  render() {\n    return (\n      <div className={ styles.switchContainer }>\n        <label className={ styles.switch }>\n          <input type=\"checkbox\"\n            defaultChecked=\"true\"\n            onChange={ this.props.handleMuteVolume }\n          />\n          <span className={ styles.slider }></span>\n        </label>\n        <label className={ styles.label }>Volume</label>\n      </div>\n    );\n  }\n}\n\nVolumeControl.propTypes = {\n  handleMuteVolume: PropTypes.func\n};\n\nexport default VolumeControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Select.module.css';\n\nclass Select extends React.Component {\n\n  render() {\n    const options = this.props.options.map((option, index) => {\n      // eslint-disable-next-line react/no-array-index-key\n      return <option key={ index } value={ option.value }>{option.label}</option>;\n    });\n\n    return (\n      <select className={ style.selectPlayerControl } name={ this.props.name } value={ this.props.currentValue } onChange={ this.props.handleChange }>\n        {options}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  currentValue: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VolumeControl from './VolumeControl';\nimport Select from './Select';\n\nimport style from './PlayerControls.module.css';\n\nclass PlayerControls extends React.Component {\n  // to handle backward and forward mouse pressed on btn\n  // set a 300 ms  interval to repeat the\n  // backward or forward function\n  // on mouseUp the interval is cleared\n  setIntervalHelperBackward = () => {\n    this.props.skipBackward();\n    this.interval = setInterval(() => {\n      this.props.skipBackward();\n    }, 300);\n  }\n\n  setIntervalHelperForward = () => {\n    this.props.skipForward();\n    this.interval = setInterval(() => {\n      this.props.skipForward();\n    }, 300);\n  }\n\n  clearIntervalHelper = () => {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div className={ style.playerControls }>\n        <button\n          className={ style.playerButton }\n          onClick={ this.props.rollback }>\n          {'↺'}\n        </button>\n\n        <button\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperBackward }\n          onMouseUp={ this.clearIntervalHelper }>\n          {'◀◀'}\n\n        </button>\n\n        <button\n          className={ style.playerButton }\n          onClick={ this.props.playMedia }>\n          {this.props.isPlaying ? '❚❚' : '▶'}\n        </button>\n\n        <button\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperForward }\n          onMouseUp={ this.clearIntervalHelper }>\n          {'▶▶'}\n        </button>\n\n        <span className={ style.playBackRate }>\n          <Select\n            options={ this.props.playbackRateOptions }\n            currentValue={ this.props.playbackRate.toString() }\n            name={ 'playbackRate' }\n            handleChange={ this.props.setPlayBackRate } />\n        </span>\n\n        <div className={ style.timeBox }>\n          <span className={ style.currentTime }\n            onClick={ this.props.promptSetCurrentTime }\n          >{ this.props.currentTime }</span>\n          <span className={ style.separator }>|</span>\n          <span className={ style.duration }>{this.props.duration}</span>\n        </div>\n\n        <button\n          className={ style.playerButton }\n          onClick={ this.props.pictureInPicture }\n        >\n          {'📺'}\n        </button>\n\n        <VolumeControl\n          handleMuteVolume={ this.props.handleMuteVolume }\n        />\n      </div>\n    );\n  }\n}\n\nPlayerControls.propTypes = {\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.string,\n  timecodeOffset: PropTypes.string,\n  promptSetCurrentTime: PropTypes.func,\n  rollback: PropTypes.func,\n  handleMuteVolume: PropTypes.func,\n  duration: PropTypes.string,\n  isPlaying: PropTypes.bool,\n  skipBackward: PropTypes.func,\n  skipForward: PropTypes.func,\n  playbackRate: PropTypes.number,\n  playbackRateOptions: PropTypes.array,\n  setPlayBackRate: PropTypes.func,\n  pictureInPicture: PropTypes.func\n};\n\nexport default PlayerControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './ProgressBar.module.css';\n\nclass ProgressBar extends React.Component {\n\n  render() {\n    return (\n      <div className={ style.progress }>\n        <input\n          type='range'\n          className={ style.bar }\n          onChange={ this.props.buttonClick }\n          value={ this.props.value }\n          min='0'\n          max={ this.props.max.toString() }\n        />\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  value: PropTypes.number,\n  max: PropTypes.string,\n  buttonClick: PropTypes.func\n};\n\nexport default ProgressBar;\n","function returnHotKeys(self) {\n  return {\n    'alt+k': {\n      priority: 1,\n      handler: () => {\n        self.togglePlayMedia();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+k',\n          name: 'togglePlayMedia',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + k',\n      label: 'Play Media',\n    },\n    'alt+l': {\n      priority: 1,\n      handler: () => {\n        self.skipForward();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+l',\n          name: 'skipForward',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + l',\n      label: 'Fast Forward',\n    },\n    'alt+j': {\n      priority: 1,\n      handler: () => {\n        self.skipBackward();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+j',\n          name: 'skipBackward',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + j',\n      label: 'Rewind',\n    },\n    'alt+-': {\n      priority: 1,\n      handler: () => {\n        self.decreasePlaybackRate();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+-',\n          name: 'decreasePlaybackRate',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + -',\n      label: 'Decrease Playback Speed',\n    },\n    // https://github.com/ccampbell/mousetrap/issues/266\n    'alt+=': {\n      priority: 1,\n      handler: () => {\n        self.increasePlaybackRate();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+plus',\n          name: 'increasePlaybackRate',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + +',\n      label: 'Increase Playback Speed',\n    },\n    'alt+r': {\n      priority: 1,\n      handler: () => {\n        self.rollBack();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+r',\n          name: 'rollBack',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + r',\n      label: 'Roll Back',\n    },\n    'alt+t': {\n      priority: 1,\n      handler: () => {\n        self.promptSetCurrentTime();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+t',\n          name: 'promptSetCurrentTime',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + t',\n      label: 'set current time',\n    }\n  };\n}\nexport default returnHotKeys;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hotkeys } from 'react-keyboard-shortcuts';\n\nimport VideoPlayer from './VideoPlayer';\nimport PlayerControls from './PlayerControls';\nimport ProgressBar from './ProgressBar';\n\nimport returnHotKeys from './defaultHotKeys';\nimport styles from './index.module.css';\n\nimport { secondsToTimecode, timecodeToSeconds } from '../../Util/timecode-converter/index';\n\nconst PLAYBACK_RATES = [\n  { value: 0.2, label: '0.2' },\n  { value: 0.25, label: '0.25' },\n  { value: 0.5, label: '0.5' },\n  { value: 0.75, label: '0.75' },\n  { value: 1, label: '1' },\n  { value: 1.25, label: '1.25' },\n  { value: 1.5, label: '1.5' },\n  { value: 1.75, label: '1.75' },\n  { value: 2, label: '2' },\n  { value: 2.5, label: '2.5' },\n  { value: 3, label: '3' },\n  { value: 3.5, label: '3.5' }\n];\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n\n    this.state = {\n      playbackRate: 1,\n      rollBackValueInSeconds: this.props.rollBackValueInSeconds,\n      timecodeOffset: this.props.timecodeOffset,\n      hotKeys: returnHotKeys(this),\n      isPlaying: false,\n      playbackRateOptions: PLAYBACK_RATES,\n      mediaDuration: '00:00:00:00'\n    };\n  }\n  /*eslint-disable camelcase */\n  hot_keys = returnHotKeys(this);\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.timecodeOffset !== null) {\n      let newCurrentTimeInSeconds = nextProps.timecodeOffset ;\n      if (typeof newCurrentTimeInSeconds ==='string'\n        && newCurrentTimeInSeconds.includes(':')\n        && !newCurrentTimeInSeconds.includes('NaN')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(nextProps.timecodeOffset );\n      }\n\n      return {\n        timecodeOffset: newCurrentTimeInSeconds,\n        rollBackValueInSeconds: nextProps.rollBackValueInSeconds\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.hookSeek(this.setCurrentTime);\n    this.props.hookPlayMedia(this.togglePlayMedia);\n    this.props.hookIsPlaying(this.isPlaying);\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    if (newCurrentTime !== '' && newCurrentTime !== null) {\n    // hh:mm:ss:ff - mm:ss - m:ss - ss - seconds number or string and hh:mm:ss\n      const newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTime);\n      if (this.videoRef.current !== null) {\n        const videoRef = this.videoRef.current;\n\n        if (videoRef.readyState === 4) {\n          videoRef.currentTime = newCurrentTimeInSeconds;\n          this.playMedia();\n        }\n      }\n    }\n  }\n\n  /**\n   * Prompts for a time stamp or time code to set media current time\n   * Also handles use can when the user has set a timecode offset via settings\n   * and the prompt is expected to be relative to that offset\n   */\n  promptSetCurrentTime = () => {\n    let userTimecodeValue = prompt('Jump to time - hh:mm:ss:ff hh:mm:ss mm:ss m:ss m.ss seconds');\n    // TODO: add some validation, eg if user types just a string it won't crash.\n    // needs function to check it's either timecode on the formats specified above or a number\n    // this could be part of the timecode module(?)\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'promptSetCurrentTime',\n        name: 'userTimecodeValue',\n        value: userTimecodeValue\n      });\n    }\n    // user clicks cancel to prompt, prompt returns null\n    if (userTimecodeValue !== null) {\n      if (userTimecodeValue.includes(':')) {\n        userTimecodeValue = timecodeToSeconds(userTimecodeValue);\n      }\n      // remove timecode offset if preset\n      if (this.state.timecodeOffset !== 0) {\n        userTimecodeValue -= this.state.timecodeOffset;\n      }\n\n      this.setCurrentTime(userTimecodeValue);\n    }\n  }\n\n  setTimeCodeOffset = (newTimeCodeOffSet) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'setTimeCodeOffset',\n        name: 'timecodeOffsetValue',\n        value: newTimeCodeOffSet\n      });\n    }\n\n    if (newTimeCodeOffSet !== '' && newTimeCodeOffSet !== null) {\n      // use similar helper function from above to convert\n      let newCurrentTimeInSeconds = newTimeCodeOffSet;\n      if (newTimeCodeOffSet.includes(':')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(newTimeCodeOffSet);\n        this.setState({ timecodeOffset: newCurrentTimeInSeconds });\n      }\n    }\n  }\n\n  rollBack = () => {\n    if (this.videoRef.current !== null) {\n\n      if (this.props.handleAnalyticsEvents !== undefined) {\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'rollBack',\n          name: 'rollBackValue',\n          value: this.state.rollBackValueInSeconds\n        });\n      }\n      // get video duration\n      const videoElem = this.videoRef.current;\n      const tmpDesiredCurrentTime = videoElem.currentTime - this.state.rollBackValueInSeconds;\n      // > 0 < duration of video\n      this.setCurrentTime(tmpDesiredCurrentTime);\n\n    }\n  }\n\n  handleTimeUpdate = (e) => {\n    this.props.hookOnTimeUpdate(e.target.currentTime);\n  }\n\n  handlePlayBackRateChange = (e) => {\n    this.setPlayBackRate(parseFloat(e.target.value));\n  }\n\n  /**\n   * @param {float} input - playback rate value as a float\n   */\n  setPlayBackRate = (input) => {\n    if (this.videoRef.current !== null) {\n      if (input >= 0.2 && input <= 3.5) {\n        this.setState({\n          playbackRate: input,\n        }, () => {\n          this.videoRef.current.playbackRate = input;\n\n          if (this.props.handleAnalyticsEvents !== undefined) {\n            this.props.handleAnalyticsEvents({\n              category: 'MediaPlayer',\n              action: 'setPlayBackRate',\n              name: 'playbackRateNewValue',\n              value: input\n            });\n          }\n\n        });\n      }\n    }\n  }\n\n  decreasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ].reverse();\n    const slower = speeds.find((option) => {\n      return option.value < this.state.playbackRate;\n    });\n    const newSpeed = slower ? slower.value : 0.2;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  increasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ];\n    const faster = speeds.find((option) => {\n      return option.value > this.state.playbackRate;\n    });\n    const newSpeed = faster ? faster.value : 3.5;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  handleChangeReplayRollbackValue = (e) => {\n    if (this.videoRef.current !== null) {\n      this.setState({\n        rollBackValueInSeconds: e.target.value,\n      });\n    }\n  }\n\n  handleMuteVolume = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.volume > 0) {\n        this.videoRef.current.volume = 0;\n      } else {\n        this.videoRef.current.volume = 1;\n      }\n    }\n  }\n\n  // TEMP: keeping this in for now. Might be replaced by state\n  // The pauseWhileTyping logic (in TimedTextEditor) currently uses this\n  isPlaying = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.paused) return false;\n\n      return true;\n    }\n  }\n\n  pauseMedia = () => {\n    this.setState({ isPlaying: false }, () => this.videoRef.current.pause());\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'pauseMedia',\n        name: 'pauseMedia',\n        value: secondsToTimecode(this.videoRef.current.currentTime)\n      });\n    }\n  }\n\n  playMedia = () => {\n    this.setState({ isPlaying: true }, () => this.videoRef.current.play());\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'playMedia',\n        name: 'playMedia',\n        value: secondsToTimecode(this.videoRef.current.currentTime)\n      });\n    }\n\n  }\n\n  // Sets isPlaying state and toggles modes on the video player\n  // TODO: modularise these / enable specific play / pause action\n  togglePlayMedia = () => {\n    if (this.videoRef.current !== null) {\n      if (this.state.isPlaying) {\n        this.pauseMedia();\n      }\n      else {\n        this.playMedia();\n      }\n    }\n  }\n\n  skipForward = () => {\n    if (this.videoRef.current !== null) {\n      // TODO track this?\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime + 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  skipBackward = () => {\n    // TODO track this?\n    if (this.videoRef.current !== null) {\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime - 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  handleProgressBarClick = (e) => {\n    const time = e.target.value;\n    this.setCurrentTime(time);\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'handleProgressBarClick',\n        name: 'roundNewCurrentTime',\n        value: time\n      });\n    }\n  }\n\n  getMediaCurrentTime = () => {\n    if (this.videoRef.current !== null) {\n      return secondsToTimecode(this.videoRef.current.currentTime + this.state.timecodeOffset);\n    }\n\n    return '00:00:00:00';\n  }\n  handleMediaDurationChange =(e) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'mediaDuration',\n        name: secondsToTimecode(e.target.duration),\n        value: e.target.duration\n      });\n    }\n  }\n\n  onLoadedDataGetDuration = (e) => {\n    const currentDuration = e.target.duration;\n    const currentDurationWithOffset = currentDuration+ this.state.timecodeOffset;\n    const durationInSeconds = secondsToTimecode( currentDuration+ currentDurationWithOffset);\n\n    this.setState({\n      mediaDuration: durationInSeconds\n    });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'onLoadedDataGetDuration',\n        name: 'durationInSeconds-WithoutOffset',\n        value: secondsToTimecode( currentDuration)\n      });\n    }\n\n  }\n\n  handlePictureInPicture = () => {\n    if (this.videoRef.current !== null) {\n      if (document.pictureInPictureElement !== undefined) {\n      // from https://developers.google.com/web/updates/2017/09/picture-in-picture\n        if (!document.pictureInPictureElement) {\n\n          this.props.handleAnalyticsEvents({\n            category: 'MediaPlayer',\n            action: 'handlePictureInPicture',\n            name: 'turning-picture-in-picture-on'\n          });\n\n          this.videoRef.current.requestPictureInPicture()\n            .catch(error => {\n              // Video failed to enter Picture-in-Picture mode.\n              console.error('Video failed to enter Picture-in-Picture mode', error);\n\n              this.props.handleAnalyticsEvents({\n                category: 'MediaPlayer',\n                action: 'handlePictureInPicture',\n                name: 'turning-picture-in-picture-on-error'\n              });\n\n            });\n\n        } else {\n          this.props.handleAnalyticsEvents({\n            category: 'MediaPlayer',\n            action: 'handlePictureInPicture',\n            name: 'turning-picture-in-picture-off'\n          });\n          document.exitPictureInPicture()\n            .catch(error => {\n              // Video failed to leave Picture-in-Picture mode.\n              console.error('Video failed to leave Picture-in-Picture mode', error);\n\n              this.props.handleAnalyticsEvents({\n                category: 'MediaPlayer',\n                action: 'handlePictureInPicture',\n                name: 'turning-picture-in-picture-off-error'\n              });\n            });\n        }\n      } else {\n        alert('Picture in Picture not supported in this browser, try chrome.');\n\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'handlePictureInPicture',\n          name: 'picture-in-picture-not-supported'\n        });\n\n      }\n    }\n  }\n\n  render() {\n    const player = <VideoPlayer\n      mediaUrl={ this.props.mediaUrl }\n      onTimeUpdate= { this.handleTimeUpdate }\n      onClick= { this.togglePlayMedia.bind(this) }\n      videoRef={ this.videoRef }\n      onLoadedDataGetDuration={ this.onLoadedDataGetDuration }\n    />;\n\n    const playerControlsSection = (\n      <div className={ styles.controlsSection }>\n        <div className={ styles.titleBox }>\n          <h1 className={ styles.title }>{ this.props.fileName? this.props.fileName : this.props.mediaUrl }</h1>\n        </div>\n        <PlayerControls\n          playMedia={ this.togglePlayMedia.bind(this) }\n          isPlaying={ this.state.isPlaying }\n          playbackRate={ this.state.playbackRate }\n          skipBackward={ this.skipBackward.bind(this) }\n          skipForward={ this.skipForward.bind(this) }\n          rollback={ this.rollBack }\n          currentTime={ this.getMediaCurrentTime() }\n          duration={ this.state.mediaDuration }\n          onSetCurrentTime={ '' }\n          onSetTimecodeOffset={ '' }\n          promptSetCurrentTime={ this.promptSetCurrentTime.bind(this) }\n          setTimeCodeOffset={ this.setTimeCodeOffset.bind(this) }\n          timecodeOffset={ secondsToTimecode(this.state.timecodeOffset) }\n          handleMuteVolume={ this.handleMuteVolume.bind(this) }\n          setPlayBackRate={ this.handlePlayBackRateChange.bind(this) }\n          playbackRateOptions={ this.state.playbackRateOptions }\n          pictureInPicture={ this.handlePictureInPicture }\n        />\n      </div>\n    );\n\n    const progressBar = <ProgressBar\n      max={ this.videoRef.current !== null ? parseInt(this.videoRef.current.duration).toString() : '100' }\n      value={ this.videoRef.current !== null ? parseInt(this.videoRef.current.currentTime) : 0 }\n      buttonClick={ this.handleProgressBarClick.bind(this) }\n    />;\n\n    return (\n      <section className={ styles.topSection }>\n        <div className={ styles.playerSection }>\n          { this.props.mediaUrl !== null ? player : null }\n          { this.props.mediaUrl !== null ? playerControlsSection : null }\n        </div>\n        { this.props.mediaUrl !== null ? progressBar : null }\n      </section>\n    );\n  }\n}\n\nMediaPlayer.propTypes = {\n  fileName: PropTypes.string,\n  hookSeek: PropTypes.func,\n  hookPlayMedia: PropTypes.func,\n  hookIsPlaying: PropTypes.func,\n  mediaUrl: PropTypes.string,\n  hookOnTimeUpdate: PropTypes.func,\n  rollBackValueInSeconds: PropTypes.number,\n  timecodeOffset: PropTypes.number\n};\n\nexport default hotkeys(MediaPlayer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nclass Toggle extends React.Component {\n  render() {\n    return (\n      <div className={ style.switchContainer }>\n        <label className={ style.switch }>\n          <input type='checkbox'\n            defaultChecked={ this.props.defaultValue }\n            onChange={ this.props.handleToggle }\n          />\n          <span className={ style.slider }></span>\n        </label>\n      </div>\n    );\n  }\n}\n\nToggle.propTypes = {\n  handleToggle: PropTypes.func,\n  label: PropTypes.string,\n  defaultValue: PropTypes.bool\n};\n\nexport default Toggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nimport { timecodeToSeconds, secondsToTimecode } from '../../../Util/timecode-converter/index';\n\nclass TimecodeOffset extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timecodeOffset: secondsToTimecode(this.props.timecodeOffset)\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      timecodeOffset: e.target.value\n    });\n  }\n\n  resetTimecodeOffset = () => {\n    const resetTimecodeOffsetValue = 0;\n\n    this.props.handleAnalyticsEvents({\n      category: 'TimecodeOffset',\n      action: 'resetTimecodeOffset',\n      name: 'resetTimecodeOffset',\n      value: 0\n    });\n\n    this.setState({\n      timecodeOffset: secondsToTimecode(resetTimecodeOffsetValue)\n    }, () => {\n      this.props.handleSetTimecodeOffset(resetTimecodeOffsetValue);\n    });\n  }\n\n  setTimecodeOffset = () => {\n    this.props.handleAnalyticsEvents({\n      category: 'TimecodeOffset',\n      action: 'setTimecodeOffset',\n      name: 'setTimecodeOffset',\n      value: this.state.timecodeOffset\n    });\n\n    let newCurrentTimeInSeconds = this.state.timecodeOffset;\n    if (typeof newCurrentTimeInSeconds ==='string'\n    && newCurrentTimeInSeconds.includes(':')\n    && !newCurrentTimeInSeconds.includes('NaN')) {\n      newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTimeInSeconds );\n    }\n    this.props.handleSetTimecodeOffset(newCurrentTimeInSeconds);\n  }\n\n  render() {\n    return (\n      <div className={ style.offsetContainer }>\n        <input\n          className={ style.inputBox }\n          type=\"text\"\n          value={ this.state.timecodeOffset }\n          onChange={ this.handleChange }\n          name=\"lname\"/>\n        <span className={ style.button } onClick={ this.resetTimecodeOffset }><u>Reset</u></span>\n        <span> | </span>\n        <span className={ style.button } onClick={ this.setTimecodeOffset }><u>Save</u></span>\n      </div>\n    );\n  }\n}\n\nTimecodeOffset.propTypes = {\n  handleSetTimecodeOffset: PropTypes.func,\n  onChange: PropTypes.func,\n  timecodeOffset: PropTypes.number\n};\n\nexport default TimecodeOffset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport Toggle from './Toggle/';\n\nimport style from './index.module.css';\n\nimport TimecodeOffset from './TimecodeOffset';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div className={ style.settings }>\n        <h2 className={ style.header }>Settings Panel</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleSettingsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n\n        <div className={ style.controlsContainer }>\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Pause While Typing</div>\n            <Toggle\n              defaultValue={ this.props.defaultValuePauseWhileTyping }\n              label={ 'Pause while typing' }\n              handleToggle={ this.props.handlePauseWhileTyping }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Scroll Sync</div>\n            <Toggle\n              defaultValue={ this.props.defaultValueScrollSync }\n              label={ 'ScrollSync' }\n              handleToggle={ this.props.handleIsScrollIntoViewChange }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Rollback Interval (sec)</div>\n            <input\n              className={ style.rollbackValue }\n              type=\"text\"\n              value={ this.props.defaultRollBackValueInSeconds }\n              onChange={ this.props.handleRollBackValueInSeconds }\n              name=\"lname\"/>\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Timecodes</div>\n            <Toggle\n              defaultValue={ this.props.showTimecodes }\n              label={ 'Hide Timecodes' }\n              handleToggle={ this.props.handleShowTimecodes }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Speaker Labels</div>\n            <Toggle\n              defaultValue={ this.props.showSpeakers }\n              label={ 'Hide Speaker Labels' }\n              handleToggle={ this.props.handleShowSpeakers }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.timecodeLabel }>Timecode Offset ℹ</div>\n            <TimecodeOffset\n              timecodeOffset={ this.props.timecodeOffset }\n              handleSetTimecodeOffset={ this.props.handleSetTimecodeOffset }\n              handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  showTimecodes: PropTypes.bool,\n  showSpeakers: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleShowTimecodes: PropTypes.func,\n  handleShowSpeakers: PropTypes.func,\n  handleSetTimecodeOffset: PropTypes.func,\n  handleSettingsToggle: PropTypes.func,\n  handlePauseWhileTyping: PropTypes.func,\n  handleIsScrollIntoViewChange: PropTypes.func,\n  handleRollBackValueInSeconds: PropTypes.func,\n  defaultValueScrollSync: PropTypes.bool,\n  defaultValuePauseWhileTyping: PropTypes.bool,\n  defaultRollBackValueInSeconds: PropTypes.number\n};\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport returnHotKeys from '../MediaPlayer/defaultHotKeys';\n\nimport style from './Shortcuts.module.css';\n\nclass Shortcuts extends React.Component {\n  render() {\n    const hotKeys = returnHotKeys(this);\n    const hotKeysCheatsheet = Object.keys(hotKeys).map((key, i) => {\n    \tconst shortcut = hotKeys[key];\n\n      return <li key={ i } className={ style.listItem }>\n        <div className={ style.shortcut }>{shortcut.displayKeyCombination}</div>\n        <div className={ style.shortcutLabel }>{shortcut.label}</div>\n      </li>;\n    });\n\n    return (\n      <div className={ style.shortcuts }>\n        <h2 className={ style.header }>Shortcuts</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleShortcutsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n        <ul className={ style.list }>{ hotKeysCheatsheet }</ul>\n      </div>\n    );\n  }\n}\n\nShortcuts.propTypes = {\n  handleShortcutsToggle: PropTypes.func\n};\n\nexport default Shortcuts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faKeyboard } from '@fortawesome/free-solid-svg-icons';\n\nimport TimedTextEditor from './TimedTextEditor';\nimport MediaPlayer from './MediaPlayer';\nimport Settings from './Settings';\nimport Shortcuts from './Settings/Shortcuts';\nimport { secondsToTimecode } from '../Util/timecode-converter/index';\n\nimport style from './index.module.css';\n\nclass TranscriptEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTime: 0,\n      lastLocalSavedTime: '',\n      transcriptData: null,\n      isScrollIntoViewOn: false,\n      showSettings: false,\n      showShortcuts: false,\n      isPauseWhileTypingOn: true,\n      rollBackValueInSeconds: 15,\n      timecodeOffset: 0,\n      showTimecodes: true,\n      showSpeakers: true\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n      return {\n        transcriptData: nextProps.transcriptData\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Transcript and media passed to component at same time\n    if (\n      (prevState.transcriptData !== this.state.transcriptData)\n        && (prevProps.mediaUrl !== this.props.mediaUrl )\n    ) {\n      console.info('Transcript and media');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n    // Transcript first and then media passed to component\n    else if (\n      (prevState.transcriptData === this.state.transcriptData)\n      && (prevProps.mediaUrl !== this.props.mediaUrl)\n    ) {\n      console.info('Transcript first and then media');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n    // Media first and then transcript passed to component\n    else if (\n      (prevState.transcriptData !== this.state.transcriptData)\n      && (prevProps.mediaUrl === this.props.mediaUrl)\n    ) {\n      console.info('Media first and then transcript');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n  }\n\n  ifPresentRetrieveTranscriptFromLocalStorage = () => {\n    if (this.refs.timedTextEditor!== undefined) {\n      if (this.refs.timedTextEditor.isPresentInLocalStorage(this.props.mediaUrl)) {\n        console.info('was already present in local storage');\n        this.refs.timedTextEditor.loadLocalSavedData(this.props.mediaUrl);\n      } else {\n        console.info('not present in local storage');\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleWordClick = (startTime) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'doubleClickOnWord',\n        name: 'startTime',\n        value: secondsToTimecode(startTime)\n      });\n    }\n\n    this.setCurrentTime(startTime);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleTimeUpdate = (currentTime) => {\n    this.setState({\n      currentTime,\n    });\n  }\n\n  handlePlayMedia = (bool) => {\n    this.playMedia(bool);\n  }\n\n  handleIsPlaying = () => {\n    return this.isPlaying();\n  }\n\n  handleIsScrollIntoViewChange = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isScrollIntoViewOn: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleIsScrollIntoViewChange',\n        name: 'isScrollIntoViewOn',\n        value: isChecked\n      });\n    }\n\n  }\n  handlePauseWhileTyping = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isPauseWhileTypingOn: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handlePauseWhileTyping',\n        name: 'isPauseWhileTypingOn',\n        value: isChecked\n      });\n    }\n  }\n\n  handleRollBackValueInSeconds = (e) => {\n    const rollBackValue = e.target.value;\n    this.setState({ rollBackValueInSeconds: rollBackValue });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleRollBackValueInSeconds',\n        name: 'rollBackValueInSeconds',\n        value: rollBackValue\n      });\n    }\n  }\n\n  handleSetTimecodeOffset = (timecodeOffset) => {\n\n    this.setState({ timecodeOffset: timecodeOffset },\n      () => {\n        // eslint-disable-next-line react/no-string-refs\n        this.refs.timedTextEditor.forceUpdate();\n      });\n  }\n\n  handleShowTimecodes = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ showTimecodes: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShowTimecodes',\n        name: 'showTimecodes',\n        value: isChecked\n      });\n    }\n  }\n\n  handleShowSpeakers = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ showSpeakers: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShowSpeakers',\n        name: 'showSpeakers',\n        value:  isChecked\n      });\n    }\n  }\n\n  handleSettingsToggle = () => {\n    this.setState(prevState => ({\n      showSettings: !prevState.showSettings\n    }));\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleSettingsToggle',\n        name: 'showSettings',\n        value:  !this.state.showSettings\n      });\n    }\n  }\n\n  handleShortcutsToggle = () => {\n    this.setState(prevState => ({\n      showShortcuts: !prevState.showShortcuts\n    }));\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShortcutsToggle',\n        name: 'showShortcuts',\n        value:  !this.state.showShortcuts\n      });\n    }\n  }\n\n  getEditorContent = (exportFormat) => {\n    return this.refs.timedTextEditor.getEditorContent(exportFormat);\n  }\n\n  render() {\n    const mediaPlayer = <MediaPlayer\n      fileName={ this.props.fileName }\n      hookSeek={ foo => this.setCurrentTime = foo }\n      hookPlayMedia={ foo => this.playMedia = foo }\n      hookIsPlaying={ foo => this.isPlaying = foo }\n      rollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      hookOnTimeUpdate={ this.handleTimeUpdate }\n      mediaUrl={ this.props.mediaUrl }\n      // ref={ 'MediaPlayer' }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n    />;\n\n    const settings = <Settings\n      handleSettingsToggle={ this.handleSettingsToggle }\n      defaultValuePauseWhileTyping={ this.state.isPauseWhileTypingOn }\n      defaultValueScrollSync={ this.state.isScrollIntoViewOn }\n      defaultRollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      showTimecodes={ this.state.showTimecodes }\n      showSpeakers={ this.state.showSpeakers }\n      handlePauseWhileTyping={ this.handlePauseWhileTyping }\n      handleIsScrollIntoViewChange={ this.handleIsScrollIntoViewChange }\n      handleRollBackValueInSeconds={ this.handleRollBackValueInSeconds }\n      handleSetTimecodeOffset={ this.handleSetTimecodeOffset }\n      handleShowTimecodes={ this.handleShowTimecodes }\n      handleShowSpeakers={ this.handleShowSpeakers }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n    />;\n\n    const shortcuts = <Shortcuts\n      handleShortcutsToggle={ this.handleShortcutsToggle }\n    />;\n\n    const timedTextEditor = <TimedTextEditor\n      fileName={ this.props.fileName }\n      transcriptData={ this.state.transcriptData }\n      timecodeOffset={ this.state.timecodeOffset }\n      onWordClick={ this.handleWordClick }\n      playMedia={ this.handlePlayMedia }\n      isPlaying={ this.handleIsPlaying }\n      currentTime={ this.state.currentTime }\n      isEditable={ this.props.isEditable }\n      sttJsonType={ this.props.sttJsonType }\n      mediaUrl={ this.props.mediaUrl }\n      isScrollIntoViewOn={ this.state.isScrollIntoViewOn }\n      isPauseWhileTypingOn={ this.state.isPauseWhileTypingOn }\n      showTimecodes={ this.state.showTimecodes }\n      showSpeakers={ this.state.showSpeakers }\n      ref={ 'timedTextEditor' }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n    />;\n\n    return (\n      <div className={ style.container }>\n        <header className={ style.header }>\n          { this.state.showSettings ? settings : null }\n          { this.state.showShortcuts ? shortcuts : null }\n        </header>\n\n        <aside className={ style.aside }>{ this.props.mediaUrl ? mediaPlayer : null }</aside>\n\n        <div className={ style.settingsContainer }>\n          <button className={ style.settingsButton } onClick={ this.handleSettingsToggle }>\n            <FontAwesomeIcon icon={ faCog } />\n          </button>\n          <button className={ style.settingsButton } onClick={ this.handleShortcutsToggle }>\n            <FontAwesomeIcon icon={ faKeyboard } />\n          </button>\n        </div>\n\n        <main className={ style.main }>\n          {this.props.mediaUrl === null? null : timedTextEditor}\n        </main>\n      </div>\n    );\n  }\n}\n\nTranscriptEditor.propTypes = {\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  sttJsonType: PropTypes.string,\n  handleAnalyticsEvents: PropTypes.func,\n  fileName: PropTypes.string\n};\n\nexport default TranscriptEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SttTypeSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"bbckaldi\">BBC Kaldi</option>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"gentle-transcript\" disabled>Gentle Transcript</option>\n  <option value=\"gentle-alignement\" disabled>Gentle Alignement</option>\n  <option value=\"iiif\" disabled>IIIF</option>\n  <option value=\"autoedit2\">autoEdit 2</option>\n  <option value=\"ibm\" disabled>IBM Watson STT</option>\n  <option value=\"speechmatics\" disabled>Speechmatics</option>\n  <option value=\"assemblyai\" disabled>AssemblyAI</option>\n  <option value=\"rev\" disabled>Rev</option>\n  <option value=\"srt\" disabled>Srt</option>\n  <option value=\"vtt\" disabled>VTT</option>\n  <option value=\"vtt-youtube\" disabled>Youtube VTT</option>\n</select>);\n\nSttTypeSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default SttTypeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExportFormatSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"txt\">Text file</option>\n  <option value=\"html\" disabled>HTML</option>\n  <option value=\"word\" disabled>MS Word</option>\n</select>);\n\nExportFormatSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default ExportFormatSelect;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { TranscriptEditor } from './lib';\n\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport style from './index.module.css';\nimport SttTypeSelect from './select-stt-json-type';\nimport ExportFormatSelect from './select-export-format';\n\nconst tedTalkVideoUrl = 'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null,\n      isTextEditable: true,\n      sttType: 'bbckaldi',\n      analyticsEvents: [],\n      fileName: 'Kate Darling Ted Talk'\n    };\n  }\n\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl,\n      sttType: 'bbckaldi',\n    });\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[0];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      const fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL,\n        fileName: file.name\n      });\n    }\n    else {\n      alert('select a valid audio or video file');\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL,\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const file = files[0];\n\n    if (file.type ==='application/json') {\n      const fr = new FileReader();\n\n      fr.onload = (evt) => {\n        this.setState({\n          transcriptData: JSON.parse(evt.target.result)\n        });\n      };\n\n      fr.readAsText(file);\n\n    }\n    else {\n      alert('select a valid json file');\n    }\n  }\n\n  handleIsTextEditable = () => {\n    this.setState((prevState) => ({ isTextEditable: (prevState.isTextEditable) !== true }));\n  }\n\n  // https://stackoverflow.com/questions/21733847/react-jsx-selecting-selected-on-selected-select-option\n  handleSttTypeChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleExportFormatChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  exportTranscript = () => {\n    // eslint-disable-next-line react/no-string-refs\n    const { data, ext } = this.refs.transcriptEditor.getEditorContent(this.state.exportFormat);\n    this.download(data, `${ this.state.mediaUrl }.${ ext }`);\n  }\n\n  // https://stackoverflow.com/questions/2897619/using-html5-javascript-to-generate-and-save-a-file\n   download = (content, filename, contentType) => {\n     const type = contentType || 'application/octet-stream';\n     const a = document.createElement('a');\n     const blob = new Blob([ content ], { type: type });\n\n     a.href = window.URL.createObjectURL(blob);\n     a.download = filename;\n     a.click();\n   }\n\n   clearLocalStorage = () => {\n     localStorage.clear();\n     console.info('cleared local storage');\n   }\n\n   handleAnalyticsEvents = (event) => {\n     this.setState({ analyticsEvents: [ ...this.state.analyticsEvents, event ] });\n   }\n\n   handleChangeTranscriptName = (value) => {\n     this.setState({ fileName: value });\n   }\n\n   render() {\n     return (\n       <div className={ style.container }>\n         <span className={ style.title }>\n            Demo page for <mark>React Transcript Editor</mark> - Component |{' '}\n           <a\n             href=\"https://github.com/bbc/react-transcript-editor\"\n             rel=\"noopener noreferrer\"\n             target=\"_blank\"\n           >\n            Github Repo\n           </a>\n         </span>\n         <br />\n         <button onClick={ () => this.loadDemo() }>load demo</button>\n         <hr />\n         <label>Load Local Media</label>\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n         />\n         or\n         <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n         </button>\n         <br/>\n         <label>open Transcript Json</label>\n         <SttTypeSelect\n           name={ 'sttType' }\n           value={ this.state.sttType }\n           handleChange={ this.handleSttTypeChange }\n         />\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n         />\n\n         <br />\n         <label>Export transcript</label>\n         <button onClick={ () => this.exportTranscript() }>Export file</button>\n\n         <ExportFormatSelect\n           name={ 'exportFormat' }\n           value={ this.state.exportFormat }\n           handleChange={ this.handleExportFormatChange }\n         />\n         <br />\n         <label>Text Is Editable</label>\n         <label className={ style.switch }>\n           <input type=\"checkbox\"\n             defaultChecked=\"true\"\n             onChange={ this.handleIsTextEditable }\n           />\n           <span className={ style.slider }></span>\n         </label>\n         <br />\n         <label>Transcript Name</label>\n         <input\n           type=\"text\"\n           onChange={ e => this.handleChangeTranscriptName(e.target.value) }\n           value={ this.state.fileName }\n         />\n         <br />\n         <button onClick={ () => this.clearLocalStorage() }>Clear Local Storage</button>\n         <hr/>\n\n         <TranscriptEditor\n           transcriptData={ this.state.transcriptData }\n           fileName={ this.state.fileName }\n           mediaUrl={ this.state.mediaUrl }\n           isEditable={ this.state.isTextEditable }\n           sttJsonType={ this.state.sttType }\n           handleAnalyticsEvents={ this.handleAnalyticsEvents }\n           ref={ 'transcriptEditor' }\n         />\n         <hr/>\n         <label>Components Analytics</label>\n         <textarea\n           style={ { height: '200px', width: '100%' } }\n           value={ JSON.stringify(this.state.analyticsEvents, null, 2) }\n           disabled>\n         </textarea>\n       </div>\n     );\n   }\n}\n\nrender(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"color-labs-red\":\"#a0372d\",\"DraftEditor-root\":\"TimedTextEditor_DraftEditor-root__28YV4\",\"editor\":\"TimedTextEditor_editor__2M5RK\",\"help\":\"TimedTextEditor_help__JWPZb\",\"icon\":\"TimedTextEditor_icon__1fIek\",\"helpMessage\":\"TimedTextEditor_helpMessage__3bqJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"color-light-grey\":\"#767676\",\"color-mid-grey\":\"#696969\",\"color-dark-grey\":\"#4a4a4a\",\"WrapperBlock\":\"WrapperBlock_WrapperBlock__KRhEE\",\"markers\":\"WrapperBlock_markers__oOsnW\",\"text\":\"WrapperBlock_text__1lDVY\",\"speaker\":\"WrapperBlock_speaker__3Jk4j\",\"time\":\"WrapperBlock_time__3Eatw\",\"EditLabel\":\"WrapperBlock_EditLabel__3cJzN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-lightest-grey\":\"#f2f2f2\",\"color-labs-red\":\"#a0372d\",\"color-dark-grey\":\"#4a4a4a\",\"shortcuts\":\"Shortcuts_shortcuts__2vH1D\",\"header\":\"Shortcuts_header__ZOVu4\",\"closeButton\":\"Shortcuts_closeButton__1J86z\",\"list\":\"Shortcuts_list__2apC7\",\"listItem\":\"Shortcuts_listItem__1-dwy\",\"shortcut\":\"Shortcuts_shortcut__196Hv\",\"shortcutLabel\":\"Shortcuts_shortcutLabel__3gcsP\",\"settingElement\":\"Shortcuts_settingElement__NZaHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"color-labs-red\":\"#a0372d\",\"container\":\"TranscriptEditor_container__28OEI\",\"header\":\"TranscriptEditor_header__3t9qT\",\"main\":\"TranscriptEditor_main__2aOzn\",\"aside\":\"TranscriptEditor_aside__1f7EK\",\"settingsContainer\":\"TranscriptEditor_settingsContainer__2y-aY\",\"settingsButton\":\"TranscriptEditor_settingsButton__2_TCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"topSection\":\"MediaPlayer_topSection__1gJAM\",\"playerSection\":\"MediaPlayer_playerSection__y0g8M\",\"controlsSection\":\"MediaPlayer_controlsSection__wk446\",\"titleBox\":\"MediaPlayer_titleBox__2Hfgg\",\"title\":\"MediaPlayer_title__h7Ojg\",\"helpText\":\"MediaPlayer_helpText__2cZmN\",\"hideInMobile\":\"MediaPlayer_hideInMobile__GbrMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"VolumeControl_switchContainer__2Ekey\",\"label\":\"VolumeControl_label__aPj5I\",\"switch\":\"VolumeControl_switch__14pnI\",\"slider\":\"VolumeControl_slider__14_0H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offsetContainer\":\"TimecodeOffset_offsetContainer__1pGLY\",\"inputBox\":\"TimecodeOffset_inputBox__20vcA\",\"button\":\"TimecodeOffset_button__B8F-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"Toggle_switchContainer__2oMzU\",\"label\":\"Toggle_label__ewLfb\",\"switch\":\"Toggle_switch__39TJz\",\"slider\":\"Toggle_slider__1Lgir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"bar\":\"ProgressBar_bar__xe2el\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPlayerControl\":\"Select_selectPlayerControl__H_co4\"};"],"sourceRoot":""}