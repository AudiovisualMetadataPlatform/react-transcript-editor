{"version":3,"sources":["lib/TranscriptEditor/Settings/index.module.css","lib/TranscriptEditor/MediaPlayer/PlayerControls.module.css","lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/SpeakerLabel.js","lib/Util/timecode-converter/secondsToTimecode.js","lib/Util/timecode-converter/timecodeToSeconds.js","lib/Util/timecode-converter/padTimeToTimecode.js","lib/Util/timecode-converter/index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.js","lib/Util/adapters/generate-entities-ranges/index.js","lib/Util/adapters/bbc-kaldi/index.js","lib/Util/adapters/autoEdit2/index.js","lib/Util/adapters/index.js","lib/Util/export-adapters/index.js","lib/Util/export-adapters/txt/index.js","lib/TranscriptEditor/MediaPlayer/VideoPlayer.js","lib/TranscriptEditor/MediaPlayer/VolumeControl.js","lib/TranscriptEditor/MediaPlayer/Select.js","lib/TranscriptEditor/MediaPlayer/PlayerControls.js","lib/TranscriptEditor/MediaPlayer/ProgressBar.js","lib/TranscriptEditor/MediaPlayer/defaultHotKeys.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/Settings/Toggle/index.js","lib/TranscriptEditor/Settings/TimecodeOffset/index.js","lib/TranscriptEditor/Settings/index.js","lib/TranscriptEditor/Settings/Shortcuts.js","lib/TranscriptEditor/index.js","select-stt-json-type.js","select-export-format.js","index.js","lib/TranscriptEditor/index.module.css","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.module.css","lib/TranscriptEditor/Settings/Shortcuts.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css","lib/TranscriptEditor/MediaPlayer/VolumeControl.module.css","lib/TranscriptEditor/Settings/TimecodeOffset/index.module.css","index.module.css","lib/TranscriptEditor/Settings/Toggle/index.module.css","lib/TranscriptEditor/MediaPlayer/ProgressBar.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/Select.module.css"],"names":["module","exports","settings","header","closeButton","controlsContainer","settingElement","label","rollbackValue","timecodeLabel","color-darkest-grey","color-light-grey","color-labs-red","playerControls","playerButton","playBackRate","timeBox","currentTime","separator","duration","mutability","Word","generateConfidence","data","confidence","generatePreviousTimes","prevTimes","i","start","concat","dec","Math","floor","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","data-start","data-end","end","data-confidence","data-prev-times","data-entity-key","key","className","children","PureComponent","SpeakerLabel","style","speaker","EditLabel","onClick","handleOnClickEdit","role","aria-label","name","secondsToTimecode","seconds","framePerSeconds","fps","undefined","normalisedSeconds","Number","toPrecision","toFixed","normalisePlayerTime","wholeSeconds","frames","_padZero","n","parseInt","timecodeToSecondsHelper","tc","s","split","timecodeToFrames","isOneDigit","str","length","padTimeToTimecode","time","timecode","includes","includesFullStop","replace","timecodeToSeconds","resultPadded","parseFloat","WrapperBlock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newSpeakerName","prompt","setState","keyForCurrentCurrentBlock","block","getKey","currentBlockSelection","SelectionState","createEmpty","currentBlockSelectionState","EditorState","acceptSelection","blockProps","editorState","getSelection","newBlockDataWithSpeakerName","newContentState","Modifier","mergeBlockData","setEditorNewContentState","handleTimecodeClick","onWordClick","state","timecodeOffset","get","startTimecode","speakerElement","TimedTextEditor_SpeakerLabel","timecodeElement","slice","markers","showSpeakers","showTimecodes","text","Draft","React","Component","generateEntitiesRanges","words","wordAttributeName","position","map","word","result","offset","random","toString","substring","bbcKaldiToDraft","bbcKaldiJson","results","paragraph","forEach","test","punct","push","groupWordsInParagraphs","retval","draftJsContentBlockParagraph","join","type","entityRanges","autoEdit2ToDraft","autoEdit2Json","autoEditText","autoEditparagraph","autoEditLine","line","tmpWord","startTime","endTime","createEntityMap","blocks","flatEntityRanges","flatten","list","reduce","b","Array","isArray","entityMap","sttJsonAdapter","transcriptData","sttJsonType","console","error","exportAdapter","blockData","exportFormat","JSON","stringify","ext","x","draftToTxt","TimedTextEditor","onChange","getCurrentContent","isPauseWhileTypingOn","isPlaying","playMedia","clearTimeout","plauseWhileTypingTimeOut","setTimeout","bind","assertThisInitialized","isEditable","prevState","inputCount","localSave","mediaUrl","handleDoubleClick","event","element","nativeEvent","target","hasAttribute","parentElement","t","getAttribute","convertToRaw","localStorage","setItem","newLastLocalSavedDate","Date","setEditorContentState","convertFromRaw","createWithContent","decorator","forceRenderDecorator","getDecorator","newState","newEditorState","customKeyBindingFn","e","keyCode","getDefaultKeyBinding","handleKeyCommand","command","splitParagraph","currentSelection","isCollapsed","currentContent","splitBlock","splitState","targetSelection","originalBlock","blockMap","selectionBefore","getStartKey","blockSpeaker","wordStartTime","isEndOfParagraph","getEntityAt","getStartOffset","closestEntityToSelection","findClosestEntityKeyToSelectionPoint","entityData","afterMergeContentState","startSelectionOffsetKey","lengthPlainTextForTheBlock","getLength","remainingCharNumber","j","log","initialSelectionOffset","renderBlockWithTimecodes","component","editable","getCurrentWord","currentWord","isScrollIntoViewOn","document","querySelector","scrollIntoView","inline","loadData","prevProps","format","getItem","parse","lastLocalSavedDate","_this2","round","editor","onDoubleClick","scoped","stripPastedStyles","blockRendererFn","keyBindingFn","nextProps","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","VideoPlayer","id","playsInline","src","onTimeUpdate","data-testid","ref","videoRef","VolumeControl","styles","switchContainer","switch","defaultChecked","handleMuteVolume","slider","Select","options","option","index","value","selectPlayerControl","currentValue","handleChange","PlayerControls","setIntervalHelperBackward","skipBackward","interval","setInterval","setIntervalHelperForward","skipForward","clearIntervalHelper","clearInterval","rollback","onMouseDown","onMouseUp","MediaPlayer_Select","playbackRateOptions","playbackRate","setPlayBackRate","promptSetCurrentTime","MediaPlayer_VolumeControl","ProgressBar","progress","bar","buttonClick","min","max","returnHotKeys","self","esc","priority","handler","togglePlayMedia","ctrl+k","ctrl+1","ctrl+2","ctrl+3","decreasePlaybackRate","ctrl+4","increasePlaybackRate","ctrl+5","rollBack","PLAYBACK_RATES","MediaPlayer","hot_keys","setCurrentTime","newCurrentTime","newCurrentTimeInSeconds","current","readyState","userTimecodeValue","setTimeCodeOffset","newTimeCodeOffSet","tmpDesiredCurrentTime","rollBackValueInSeconds","handleTimeUpdate","hookOnTimeUpdate","handlePlayBackRateChange","input","slower","reverse","find","newSpeed","faster","handleChangeReplayRollbackValue","volume","paused","pauseMedia","pause","play","handleProgressBarClick","getMediaCurrentTime","getMediaDuration","createRef","hotKeys","hookSeek","hookPlayMedia","hookIsPlaying","player","MediaPlayer_VideoPlayer","playerControlsSection","controlsSection","titleBox","title","MediaPlayer_PlayerControls","onSetCurrentTime","onSetTimecodeOffset","progressBar","MediaPlayer_ProgressBar","topSection","playerSection","hotkeys","Toggle","defaultValue","handleToggle","TimecodeOffset","resetTimecodeOffset","handleSetTimecodeOffset","setTimecodeOffset","offsetContainer","inputBox","button","Settings","handleSettingsToggle","Settings_Toggle","defaultValuePauseWhileTyping","handlePauseWhileTyping","defaultValueScrollSync","handleIsScrollIntoViewChange","defaultRollBackValueInSeconds","handleRollBackValueInSeconds","handleShowTimecodes","handleShowSpeakers","Settings_TimecodeOffset","Shortcuts","hotKeysCheatsheet","keys","shortcut","listItem","shortcutLabel","shortcuts","TranscriptEditor","handleWordClick","handlePlayMedia","bool","handleIsPlaying","isChecked","checked","rollBackValue","refs","timedTextEditor","forceUpdate","showSettings","handleShortcutsToggle","showShortcuts","lastLocalSavedTime","isPresentInLocalStorage","loadLocalSavedData","mediaPlayer","TranscriptEditor_MediaPlayer","foo","TranscriptEditor_Settings","container","Settings_Shortcuts","aside","settingsContainer","settingsButton","cog","main","TranscriptEditor_TimedTextEditor","SttTypeSelect","disabled","ExportFormatSelect","App","handleIsTextEditable","isTextEditable","handleSttTypeChange","defineProperty","handleExportFormatChange","exportTranscript","_this$refs$transcript","transcriptEditor","getEditorContent","download","content","filename","contentType","blob","Blob","href","window","URL","createObjectURL","click","clearLocalStorage","clear","info","sttType","kaldiTedTalkTranscript","files","file","canPlayType","fileURL","fr","FileReader","onload","readAsText","rel","loadDemo","select_stt_json_type","handleChangeLoadTranscriptJson","handleChangeLoadMedia","handleChangeLoadMediaUrl","select_export_format","lib_TranscriptEditor","render","src_App","getElementById","color-subt-green","color-mid-grey","color-dark-grey","color-lightest-grey","helpText","hideInMobile","DraftEditor-root"],"mappings":"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","file":"static/js/main.72355691.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__3UPB5\",\"header\":\"Settings_header__3Y30x\",\"closeButton\":\"Settings_closeButton__1i5o9\",\"controlsContainer\":\"Settings_controlsContainer__2E90Z\",\"settingElement\":\"Settings_settingElement__2ZeKY\",\"label\":\"Settings_label__1NQsi\",\"rollbackValue\":\"Settings_rollbackValue__3dic-\",\"timecodeLabel\":\"Settings_timecodeLabel__WyMOt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-darkest-grey\":\"#282828\",\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"playerControls\":\"PlayerControls_playerControls__3emd7\",\"playerButton\":\"PlayerControls_playerButton___xv7e\",\"playBackRate\":\"PlayerControls_playBackRate__2IcvZ\",\"timeBox\":\"PlayerControls_timeBox__2T0JQ\",\"currentTime\":\"PlayerControls_currentTime__QZjCv\",\"separator\":\"PlayerControls_separator__f03Pz\",\"duration\":\"PlayerControls_duration__l__Bv\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Editor,\n  EditorState,\n  CompositeDecorator,\n  convertFromRaw,\n  convertToRaw,\n  getDefaultKeyBinding,\n  Modifier\n} from 'draft-js';\n\nimport Word from './Word';\nimport WrapperBlock from './WrapperBlock';\n\nimport sttJsonAdapter from '../../Util/adapters/index.js';\nimport exportAdapter from '../../Util/export-adapters/index.js';\nimport style from './index.module.css';\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData,\n      isEditable: this.props.isEditable,\n      sttJsonType: this.props.sttJsonType,\n      timecodeOffset: this.props.timecodeOffset,\n      showSpeakers: this.props.showSpeakers,\n      showTimecodes: this.props.showTimecodes,\n      inputCount: 0,\n      currentWord: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n\n      return {\n        transcriptData: nextProps.transcriptData,\n        isEditable: nextProps.isEditable,\n        timecodeOffset: nextProps.timecodeOffset,\n        showSpeakers: nextProps.showSpeakers,\n        showTimecodes: nextProps.showTimecodes\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.transcriptData !== this.state.transcriptData) {\n      this.loadData();\n    }\n    if (prevState.timecodeOffset !== this.state.timecodeOffset\n      || prevState.showSpeakers !== this.state.showSpeakers\n      || prevState.showTimecodes !== this.state.showTimecodes) {\n      // forcing a re-render is an expensive operation and\n      // there might be a way of optimising this at a later refactor (?)\n      // the issue is that WrapperBlock is not update on TimedTextEditor\n      // state change otherwise.\n      // for now compromising on this, as setting timecode offset, and\n      // display preferences for speakers and timecodes are not expected to\n      // be very frequent operations but rather one time setup in most cases.\n      this.forceRenderDecorator();\n    }\n  }\n\n  onChange = (editorState) => {\n    // https://draftjs.org/docs/api-reference-editor-state#lastchangetype\n    // https://draftjs.org/docs/api-reference-editor-change-type\n    // doing editorStateChangeType === 'insert-characters'  is triggered even\n    // outside of draftJS eg when clicking play button so using this instead\n    // see issue https://github.com/facebook/draft-js/issues/1060\n    if (this.state.editorState.getCurrentContent() !== editorState.getCurrentContent()) {\n      if (this.props.isPauseWhileTypingOn) {\n        if (this.props.isPlaying()) {\n          this.props.playMedia(false);\n          // Pause video for X seconds\n          const pauseWhileTypingIntervalInMilliseconds = 3000;\n          // resets timeout\n          clearTimeout(this.plauseWhileTypingTimeOut);\n          this.plauseWhileTypingTimeOut = setTimeout(function() {\n            // after timeout starts playing again\n            this.props.playMedia(true);\n          }.bind(this), pauseWhileTypingIntervalInMilliseconds);\n        }\n      }\n    }\n\n    if (this.state.isEditable) {\n      this.setState((prevState) => ({\n        editorState,\n        inputCount: prevState.inputCount + 1,\n      }), () => {\n        // Saving every 5 keystrokes\n        if (this.state.inputCount > 5) {\n          this.setState({\n            inputCount: 0,\n          });\n\n          this.localSave(this.props.mediaUrl);\n        }\n      });\n    }\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = sttJsonAdapter(this.props.transcriptData, this.props.sttJsonType);\n      this.setEditorContentState(blocks);\n    }\n  }\n\n  getEditorContent(exportFormat) {\n    const format = exportFormat || 'draftjs';\n\n    return exportAdapter(convertToRaw(this.state.editorState.getCurrentContent()), format);\n  }\n\n  // click on words - for navigation\n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event) => {\n    // nativeEvent --> React giving you the DOM event\n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      this.props.onWordClick(t);\n    }\n  }\n\n  localSave = () => {\n    const mediaUrl = this.props.mediaUrl;\n    const data = convertToRaw(this.state.editorState.getCurrentContent());\n    localStorage.setItem(`draftJs-${ mediaUrl }`, JSON.stringify(data));\n    const newLastLocalSavedDate = new Date().toString();\n    localStorage.setItem(`timestamp-${ mediaUrl }`, newLastLocalSavedDate);\n\n    return newLastLocalSavedDate;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isPresentInLocalStorage(mediaUrl) {\n    const data = localStorage.getItem(`draftJs-${ mediaUrl }`);\n    if (data !== null) {\n      return true;\n    }\n\n    return false;\n  }\n\n  loadLocalSavedData(mediaUrl) {\n    const data = JSON.parse(localStorage.getItem(`draftJs-${ mediaUrl }`));\n    if (data !== null) {\n      const lastLocalSavedDate = localStorage.getItem(`timestamp-${ mediaUrl }`);\n      this.setEditorContentState(data);\n\n      return lastLocalSavedDate;\n    }\n\n    return '';\n  }\n\n  /**\n  * @param {object} data.entityMap - draftJs entity maps - used by convertFromRaw\n  * @param {object} data.blocks - draftJs blocks - used by convertFromRaw\n  * set DraftJS Editor content state from blocks\n  * contains blocks and entityMap\n  */\n  setEditorContentState = (data) => {\n    const contentState = convertFromRaw(data);\n    // eslint-disable-next-line no-use-before-define\n    const editorState = EditorState.createWithContent(contentState, decorator);\n    this.setState({ editorState });\n  }\n\n  // Helper function to re-render this component\n  // used to re-render WrapperBlock on timecode offset change\n  // or when show / hide preferences for speaker labels and timecodes change\n  forceRenderDecorator= () => {\n    // const { editorState, updateEditorState } = this.props;\n    const contentState =   this.state.editorState.getCurrentContent();\n    const decorator =   this.state.editorState.getDecorator();\n\n    const newState = EditorState.createWithContent(\n      contentState,\n      decorator\n    );\n\n    // this.setEditorNewContentState(newState);\n    const newEditorState = EditorState.push(newState, contentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n  * Update Editor content state\n  */\n  setEditorNewContentState = (newContentState) => {\n    const newEditorState = EditorState.push(this.state.editorState, newContentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n   * Listen for draftJs custom key bindings\n   */\n  customKeyBindingFn = ( e) => {\n    const enterKey = 13;\n    if (e.keyCode === enterKey ) {\n      return 'split-paragraph';\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  /**\n   * Handle draftJs custom key commands\n   */\n  handleKeyCommand = (command) => {\n    if (command === 'split-paragraph') {\n      this.splitParagraph();\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function to handle splitting paragraphs with return key\n   * on enter key, perform split paragraph at selection point.\n   * Add timecode of next word after split to paragraph\n   * as well as speaker name to new paragraph\n   */\n  splitParagraph = () => {\n    // https://github.com/facebook/draft-js/issues/723#issuecomment-367918580\n    // https://draftjs.org/docs/api-reference-selection-state#start-end-vs-anchor-focus\n    const currentSelection = this.state.editorState.getSelection();\n    // only perform if selection is not selecting a range of words\n    // in that case, we'd expect delete + enter to achieve same result.\n    if (currentSelection.isCollapsed()) {\n      const currentContent = this.state.editorState.getCurrentContent();\n      // https://draftjs.org/docs/api-reference-modifier#splitblock\n      const newContentState = Modifier.splitBlock(currentContent, currentSelection);\n      // https://draftjs.org/docs/api-reference-editor-state#push\n      const splitState = EditorState.push(this.state.editorState, newContentState, 'split-block');\n      const targetSelection = splitState.getSelection();\n\n      const originalBlock = currentContent.blockMap.get(newContentState.selectionBefore.getStartKey());\n      const originalBlockData = originalBlock.getData();\n      const blockSpeaker = originalBlockData.get('speaker');\n\n      let wordStartTime = 'NA';\n      // eslint-disable-next-line prefer-const\n      let isEndOfParagraph = false;\n      // identify the entity (word) at the selection/cursor point on split.\n      // eslint-disable-next-line prefer-const\n      let entityKey = originalBlock.getEntityAt(currentSelection.getStartOffset());\n      // if there is no word entity associated with a char then there is no entity key\n      // at that selection point\n      if (entityKey === null) {\n        const closestEntityToSelection = this.findClosestEntityKeyToSelectionPoint(currentSelection, originalBlock);\n        entityKey = closestEntityToSelection.entityKey;\n        isEndOfParagraph = closestEntityToSelection.isEndOfParagraph;\n        // handle edge case when it doesn't find a closest entity (word)\n        // eg pres enter on an empty line\n        if (entityKey === null) {\n          return 'not-handled';\n        }\n      }\n      // if there is an entityKey at or close to the selection point\n      // can get the word startTime. for the new paragraph.\n      const entityInstance = currentContent.getEntity(entityKey);\n      const entityData = entityInstance.getData();\n      if (isEndOfParagraph) {\n        // if it's end of paragraph use end time of word for new paragraph\n        wordStartTime = entityData.end;\n      }\n      else {\n        wordStartTime = entityData.start;\n      }\n      // split paragraph\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const afterMergeContentState = Modifier.mergeBlockData(\n        splitState.getCurrentContent(),\n        targetSelection,\n        {\n          'start': wordStartTime,\n          'speaker': blockSpeaker\n        }\n      );\n      this.setEditorNewContentState(afterMergeContentState);\n\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function for splitParagraph\n   * to find the closest entity (word) to a selection point\n   * that does not fall on an entity to begin with\n   * Looks before if it's last char in a paragraph block.\n   * After for everything else.\n   */\n  findClosestEntityKeyToSelectionPoint = (currentSelection, originalBlock) => {\n    // set defaults\n    let entityKey = null;\n    let isEndOfParagraph = false;\n\n    // selection offset from beginning of the paragraph block\n    const startSelectionOffsetKey = currentSelection.getStartOffset();\n    // length of the plain text for the ContentBlock\n    const lengthPlainTextForTheBlock = originalBlock.getLength();\n    // number of char from selection point to end of paragraph\n    const remainingCharNumber = lengthPlainTextForTheBlock - startSelectionOffsetKey;\n    // if it's the last char in the paragraph - get previous entity\n    if (remainingCharNumber === 0 ) {\n      isEndOfParagraph = true;\n      for (let j = lengthPlainTextForTheBlock; j >0 ; j--) {\n        entityKey = originalBlock.getEntityAt(j);\n        if (entityKey!== null) {\n          // if it finds it then return\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n    // if it's first char or another within the block - get next entity\n    else {\n      console.log('Main part of paragraph');\n      let initialSelectionOffset = currentSelection.getStartOffset();\n      for (let i = 0; i < remainingCharNumber ; i++) {\n        initialSelectionOffset +=i;\n        entityKey = originalBlock.getEntityAt(initialSelectionOffset);\n        // if it finds it then return\n        if (entityKey !== null) {\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n\n    // cover edge cases where it doesn't find it\n    return { entityKey, isEndOfParagraph };\n  }\n\n  renderBlockWithTimecodes = () => {\n    return {\n      component: WrapperBlock,\n      editable: true,\n      props: {\n        showSpeakers: this.state.showSpeakers,\n        showTimecodes: this.state.showTimecodes,\n        timecodeOffset: this.state.timecodeOffset,\n        editorState: this.state.editorState,\n        setEditorNewContentState: this.setEditorNewContentState,\n        onWordClick: this.props.onWordClick\n      }\n    };\n  }\n\n  getCurrentWord = () => {\n    const currentWord = {\n      start: 'NA',\n      end: 'NA'\n    };\n\n    if (this.state.transcriptData) {\n      const contentState = this.state.editorState.getCurrentContent();\n      // TODO: using convertToRaw here might be slowing down performance(?)\n      const contentStateConvertEdToRaw = convertToRaw(contentState);\n      const entityMap = contentStateConvertEdToRaw.entityMap;\n\n      for (var entityKey in entityMap) {\n        const entity = entityMap[entityKey];\n        const word = entity.data;\n\n        if (word.start <= this.props.currentTime && word.end >= this.props.currentTime) {\n          currentWord.start = word.start;\n          currentWord.end = word.end;\n        }\n      }\n    }\n\n    if (currentWord.start !== 'NA') {\n      if (this.props.isScrollIntoViewOn) {\n        const currentWordElement = document.querySelector(`span.Word[data-start=\"${ currentWord.start }\"]`);\n        currentWordElement.scrollIntoView({ block: 'center', inline: 'center' });\n      }\n    }\n\n    return currentWord;\n  }\n\n  render() {\n    const currentWord = this.getCurrentWord();\n    const highlightColour = '#69e3c2';\n    const unplayedColor = '#767676';\n    const correctionBorder = '1px dotted blue';\n\n    // Time to the nearest half second\n    const time = Math.round(this.props.currentTime * 4.0) / 4.0;\n\n    const editor = (\n      <section\n        className={ style.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }>\n\n        <style scoped>\n          {`span.Word[data-start=\"${ currentWord.start }\"] { background-color: ${ highlightColour }; text-shadow: 0 0 0.01px black }`}\n          {`span.Word[data-start=\"${ currentWord.start }\"]+span { background-color: ${ highlightColour } }`}\n          {`span.Word[data-prev-times~=\"${ Math.floor(time) }\"] { color: ${ unplayedColor } }`}\n          {`span.Word[data-prev-times~=\"${ time }\"] { color: ${ unplayedColor } }`}\n          {`span.Word[data-confidence=\"low\"] { border-bottom: ${ correctionBorder } }`}\n        </style>\n\n        <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n          blockRendererFn={ this.renderBlockWithTimecodes }\n          handleKeyCommand={ command => this.handleKeyCommand(command) }\n          keyBindingFn={ e => this.customKeyBindingFn(e) }\n        />\n      </section>\n    );\n\n    return (\n      <section>\n        { this.props.transcriptData !== null ? editor : null }\n      </section>\n    );\n  }\n}\n\n// DraftJs decorator to recognize which entity is which\n// and know what to apply to what component\nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs\n// defines what to use to render the entity\nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word,\n  },\n]);\n\nTimedTextEditor.propTypes = {\n  transcriptData: PropTypes.object,\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  onWordClick: PropTypes.func,\n  sttJsonType: PropTypes.string,\n  isPlaying: PropTypes.func,\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.number,\n  isScrollIntoViewOn: PropTypes.bool,\n  isPauseWhileTypingOn: PropTypes.bool,\n  timecodeOffset: PropTypes.number\n};\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Word extends PureComponent {\n  generateConfidence = (data) => {\n    // handling edge case where confidence score not present\n    if (data.confidence) {\n      return  data.confidence > 0.6 ? 'high' : 'low';\n    }\n\n    return 'high';\n  }\n\n  generatePreviousTimes = (data) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < data.start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (data.start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((data.start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(data.start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n      <span\n        data-start={ data.start }\n        data-end={ data.end }\n        data-confidence = { this.generateConfidence(data) }\n        data-prev-times = { this.generatePreviousTimes(data) }\n        data-entity-key={ data.key }\n        className=\"Word\">\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  entityKey: PropTypes.string,\n  children: PropTypes.array\n};\n\nexport default Word;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './WrapperBlock.module.css';\n\nclass SpeakerLabel extends PureComponent {\n  render() {\n    return (\n      <span className={ style.speaker }>\n        <span\n          className={ style.EditLabel }\n          onClick={ this.props.handleOnClickEdit }\n          role='img'\n          aria-label='Pencil'> ✏️\n        </span>\n        {this.props.name}\n      </span>\n    );\n  }\n}\n\nSpeakerLabel.propTypes = {\n  name: PropTypes.string,\n  handleOnClickEdit: PropTypes.func\n};\n\nexport default SpeakerLabel;\n","/**\n* Raised in this comment https://github.com/bbc/react-transcript-editor/pull/9\n* abstracted from https://github.com/bbc/newslabs-cdn/blob/master/js/20-bbcnpf.utils.js\n* In broadcast VIDEO, timecode is NOT hh:mm:ss:ms, it's hh:mm:ss:ff where ff is frames,\n* dependent on the framerate of the media concerned.\n* `hh:mm:ss:ff`\n*/\n\n/**\n * Helper function\n * Rounds to the 14milliseconds boundaries\n * Time in video can only \"exist in\" 14milliseconds boundaries.\n * This makes it possible for the HTML5 player to be frame accurate.\n * @param {*} seconds\n * @param {*} fps\n */\nconst normalisePlayerTime = function (seconds, fps) {\n  return Number((1.0 / fps * Math.floor(Number((fps * seconds).toPrecision(12)))).toFixed(2));\n};\n\n/*\n* @param {*} seconds\n* @param {*} fps\n*/\nconst secondsToTimecode = function (seconds, framePerSeconds) {\n  // written for PAL non-drop timecode\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n\n  const normalisedSeconds = normalisePlayerTime(seconds, fps);\n\n  const wholeSeconds = Math.floor(normalisedSeconds);\n  const frames = ((normalisedSeconds - wholeSeconds) * fps).toFixed(2);\n\n  // prepends zero - example pads 3 to 03\n  function _padZero(n) {\n    if (n < 10) return `0${ parseInt(n) }`;\n\n    return parseInt(n);\n  }\n\n  return `${ _padZero((wholeSeconds / 60 / 60) % 60)\n  }:${\n    _padZero((wholeSeconds / 60) % 60)\n  }:${\n    _padZero(wholeSeconds % 60)\n  }:${\n    _padZero(frames) }`;\n};\n\nexport default secondsToTimecode;\n","/**\n * Helperf unction\n * @param {*} tc\n * @param {*} fps\n */\nconst timecodeToFrames = function (tc, fps) {\n  // TODO make 29.97 fps drop-frame aware - works for 25 only.\n\n  const s = tc.split(':');\n  let frames = parseInt(s[3]);\n  frames += parseInt(s[2]) * fps;\n  frames += parseInt(s[1]) * (fps * 60);\n  frames += parseInt(s[0]) * (fps * 60 * 60);\n\n  return frames;\n};\n\n/**\n * Convert broadcast timecodes to seconds\n * @param {*} tc - `hh:mm:ss:ff`\n * @param {*} framePerSeconds - defaults to 25 if not provided\n */\nconst timecodeToSecondsHelper = function (tc, framePerSeconds) {\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n  const frames = timecodeToFrames(tc, fps);\n\n  return Number(Number(frames / fps).toFixed(2));\n};\n\nexport default timecodeToSecondsHelper;\n","const countColon = timecode => timecode.split(':').length;\n\nconst includesFullStop = timecode => timecode.includes('.');\n\nconst isOneDigit = str => str.length === 1;\n\nconst padTimeToTimecode = (time) => {\n  if (typeof time === 'string') {\n    switch (countColon(time)) {\n    case 4:\n      // is already in timecode format\n      // hh:mm:ss:ff\n      return time;\n    case 2:\n      // m:ss\n      if (isOneDigit(time.split(':')[0])) {\n        return `00:0${ time }:00`;\n      }\n\n      return `00:${ time }:00`;\n    case 3:\n      // hh:mm:ss\n      return `${ time }:00`;\n    default:\n      // mm.ss\n      if (includesFullStop(time)) {\n        // m.ss\n        if (isOneDigit(time.split('.')[0])) {\n          return `00:0${ time.split('.')[0] }:${ time.split('.')[1] }:00`;\n        }\n\n        return `00:${ time.replace('.', ':') }:00`;\n      }\n\n      // if just int, then it's seconds\n      // s\n      if (isOneDigit(time)) {\n        return `00:00:0${ time }:00`;\n      }\n      \n      return `00:00:${ time }:00`;\n    }\n    // edge case if it's number return a number coz cannot refactor\n    // TODO: might need to refactor and move this elsewhere\n  } else {\n    return time;\n  }\n};\n\nexport default padTimeToTimecode;\n","/**\n * Wrapping around \"time stamps\" and timecode conversion modules\n * To provide more support for variety of formats.\n */\nimport secondsToTimecode from './secondsToTimecode';\nimport timecodeToSecondsHelper from './timecodeToSeconds';\nimport padTimeToTimecode from './padTimeToTimecode';\n\n/**\n * @param {*} time\n * Can take as input timecodes in the following formats\n * - hh:mm:ss:ff\n * - mm:ss\n * - m:ss\n * - ss - seconds --> if it's already in seconds then it just returns seconds\n * - hh:mm:ff\n * @todo could be refactored with some helper functions for clarity\n */\nconst timecodeToSeconds = (time) => {\n  if (typeof time === 'string') {\n    const resultPadded = padTimeToTimecode(time);\n    const resultConverted = timecodeToSecondsHelper(resultPadded);\n\n    return resultConverted;\n  }\n\n  // assuming it receive timecode as seconds as string '600'\n  return parseFloat(time);\n};\n\nconst shortTimecode = (time) => {\n  const timecode = secondsToTimecode(time);\n\n  return timecode.slice(0, -3);\n};\n\nexport { secondsToTimecode, timecodeToSeconds, shortTimecode };\n","import React from 'react';\nimport { EditorBlock, Modifier, EditorState, SelectionState } from 'draft-js';\n\nimport SpeakerLabel from './SpeakerLabel';\nimport { shortTimecode } from '../../Util/timecode-converter/';\n\nimport style from './WrapperBlock.module.css';\n\nclass WrapperBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      speaker: '',\n      start: 0,\n      timecodeOffset: this.props.blockProps.timecodeOffset\n    };\n  }\n\n  componentDidMount() {\n    const { block } = this.props;\n    const speaker = block.getData().get('speaker');\n\n    const start = block.getData().get('start');\n    \n    this.setState({\n      speaker: speaker,\n      start: start \n    });\n  }\n\n  handleOnClickEdit = () => {\n    const newSpeakerName = prompt('New Speaker Name?');\n    if (newSpeakerName !== '' && newSpeakerName !== null) {\n      this.setState({ speaker: newSpeakerName });\n\n      // From docs: https://draftjs.org/docs/api-reference-selection-state#keys-and-offsets\n      // selection points are tracked as key/offset pairs,\n      // where the key value is the key of the ContentBlock where the point is positioned\n      // and the offset value is the character offset within the block.\n\n      // Get key of the currentBlock\n      const keyForCurrentCurrentBlock = this.props.block.getKey();\n      // create empty selection for current block\n      // https://draftjs.org/docs/api-reference-selection-state#createempty\n      const currentBlockSelection = SelectionState.createEmpty(keyForCurrentCurrentBlock);\n      // move selection to current block\n      const EditorStateWithSelectedCurrentBlock = EditorState.acceptSelection(this.props.blockProps.editorState, currentBlockSelection);\n\n      const currentBlockSelectionState = EditorStateWithSelectedCurrentBlock.getSelection();\n      // set new speaker data for block\n      const newBlockDataWithSpeakerName = { speaker: newSpeakerName };\n      // merge data\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const newContentState = Modifier.mergeBlockData(\n        this.props.contentState,\n        currentBlockSelectionState,\n        newBlockDataWithSpeakerName\n      );\n      // cb for saving editorState in TimedTextEditor\n      this.props.blockProps.setEditorNewContentState(newContentState);\n    }\n  }\n\n  handleTimecodeClick = () => {\n    this.props.blockProps.onWordClick(this.state.start);\n  }\n\n  render() {\n    let startTimecode = this.state.start; \n    if ( this.props.blockProps.timecodeOffset) {\n      // console.log(' this.props.blockProps.timecodeOffset: ', this.props.blockProps.timecodeOffset);\n      startTimecode +=  this.props.blockProps.timecodeOffset;\n    }\n    // console.log('startTimecode: ',startTimecode);\n    const speakerElement = <SpeakerLabel\n      name={ this.state.speaker }\n      handleOnClickEdit={ this.handleOnClickEdit }\n    />;\n\n    const timecodeElement =  <span className={ style.time } onClick={ this.handleTimecodeClick }>{shortTimecode(startTimecode)}</span>;\n\n    return (\n      <div className={ style.WrapperBlock }>\n        <div className={ style.markers }>\n          {this.props.blockProps.showSpeakers? speakerElement: ''}\n         \n          {this.props.blockProps.showTimecodes? timecodeElement: ''}\n        </div>\n        <div className={ style.text }>\n          <EditorBlock { ...this.props } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WrapperBlock;\n","/**\n * Helper function to generate draft.js entities,\n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\n\n/**\n*  @param {json} words  - List of words\n*  @param {string} wordAttributeName - eg 'punct' or 'text' or etc.\n* attribute for the word object containing the text. eg word ={ punct:'helo', ... }\n*  or eg word ={ text:'helo', ... }\n*/\nconst generateEntitiesRanges = (words, wordAttributeName) => {\n  let position = 0;\n\n  return words.map((word) => {\n    const result = {\n      start: word.start,\n      end: word.end,\n      confidence: word.confidence,\n      text: word[wordAttributeName],\n      offset: position,\n      length: word[wordAttributeName].length,\n      key: Math.random()\n        .toString(36)\n        .substring(6),\n    };\n    // increase position counter - to determine word offset in paragraph\n    position = position + word[wordAttributeName].length + 1;\n\n    return result;\n  });\n};\n\nexport default generateEntitiesRanges;\n","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        ...\n```\n *\n * into\n *\n ```\n const blocks = [\n  {\n    \"text\": \"There is a day.\",\n    \"type\": \"paragraph\",\n    \"data\": {\n      \"speaker\": \"TBC 0\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        {\n          \"start\": 13.38,\n          \"confidence\": 0.99,\n          \"end\": 13.44,\n          \"word\": \"a\",\n          \"punct\": \"a\",\n          \"index\": 2\n        },\n        {\n          \"start\": 13.44,\n          \"confidence\": 1,\n          \"end\": 13.86,\n          \"word\": \"day\",\n          \"punct\": \"day.\",\n          \"index\": 3\n        }\n      ],\n      \"start\": 13.02\n    },\n    \"entityRanges\": [\n      {\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"confidence\": 0.68,\n        \"text\": \"There\",\n        \"offset\": 0,\n        \"length\": 5,\n        \"key\": \"li6c6ld\"\n      },\n      {\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"confidence\": 0.61,\n        \"text\": \"is\",\n        \"offset\": 6,\n        \"length\": 2,\n        \"key\": \"pcgzkp6\"\n      },\n      {\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"confidence\": 0.99,\n        \"text\": \"a\",\n        \"offset\": 9,\n        \"length\": 1,\n        \"key\": \"ngomd9\"\n      },\n      {\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"confidence\": 1,\n        \"text\": \"day.\",\n        \"offset\": 11,\n        \"length\": 4,\n        \"key\": \"sgmfl4f\"\n      }\n    ]\n  },\n  ...\n```\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach((word) => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\nconst bbcKaldiToDraft = (bbcKaldiJson) => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct'), // wordAttributeName\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","/**\n * Convert autoEdit2 Json\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n * See samples folder and test file\n * for reference data structures\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index';\n\n/**\n * groups words list from autoEdit transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words objects from autoEdit transcript\n */\n\nconst groupWordsInParagraphs = (autoEditText) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  autoEditText.forEach((autoEditparagraph) => {\n    autoEditparagraph.paragraph.forEach((autoEditLine) => {\n      autoEditLine.line.forEach((word) => {\n        // adjusting time reference attributes from\n        // `startTime` `endTime` to `start` `end`\n        // for word object\n        const tmpWord = {\n          text: word.text,\n          start: word.startTime,\n          end: word.endTime,\n        };\n        //  if word contains punctuation\n        if (/[.?!]/.test(word.text)) {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n          results.push(paragraph);\n          // reset paragraph\n          paragraph = { words: [], text: [] };\n        } else {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n        }\n      });\n    });\n  });\n\n  return results;\n};\n\nconst autoEdit2ToDraft = (autoEdit2Json) => {\n  const results = [];\n  const tmpWords = autoEdit2Json.text;\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words, \n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'text'),\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  // console.log(JSON.stringify(results,null,2))\n  return results;\n};\n\nexport default autoEdit2ToDraft;\n","import bbcKaldiToDraft from './bbc-kaldi/index';\nimport autoEdit2ToDraft from './autoEdit2/index';\n/**\n * Adapters for STT conversion\n * @param {json} transcriptData - A json transcript with some word accurate timecode\n * @param {string} sttJsonType - the type of transcript supported by the available adapters\n */\n\n// converts nested arrays into one dimensional array\nconst flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\nconst createEntityMap = (blocks) => {\n  const entityRanges = blocks.map(block => block.entityRanges);\n  // eslint-disable-next-line no-use-before-define\n  const flatEntityRanges = flatten(entityRanges);\n\n  const entityMap = {};\n\n  flatEntityRanges.forEach((data) => {\n    entityMap[data.key] = {\n      type: 'WORD',\n      mutability: 'MUTABLE',\n      data,\n    };\n  });\n\n  return entityMap;\n};\n\nconst sttJsonAdapter = (transcriptData, sttJsonType) => {\n  let blocks;\n  switch (sttJsonType) {\n  case 'bbckaldi':\n    blocks = bbcKaldiToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'autoedit2':\n    blocks = autoEdit2ToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'draftjs':\n    return transcriptData; // (typeof transcriptData === 'string')? JSON.parse(transcriptData): transcriptData;\n  default:\n    // code block\n    console.error('not recognised the stt enginge');\n  }\n};\n\nexport default sttJsonAdapter;\n","import draftToTxt from './txt/index';\n/**\n * Adapters for Draft.js conversion\n * @param {json} blockData - Draft.js blocks\n * @param {string} exportFormat - the type of file supported by the available adapters\n */\n\nconst exportAdapter = (blockData, exportFormat) => {\n  switch (exportFormat) {\n  case 'draftjs':\n    return { data: JSON.stringify(blockData, null, 2), ext: 'json' };\n  case 'txt':\n    return { data: draftToTxt(blockData), ext: 'txt' };\n  default:\n    // code block\n    console.error('Did not recognise the export format');\n  }\n};\n\nexport default exportAdapter;\n","export default (blockData) => {\n  const lines = blockData.blocks.map(x => x.text);\n\n  return lines.join('\\n\\n');\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass VideoPlayer extends React.Component {\n  render() {\n    return (\n      <video\n        id=\"video\"\n        playsInline\n        src={ this.props.mediaUrl }\n        onTimeUpdate={ this.props.onTimeUpdate }\n        type=\"video/mp4\"\n        data-testid=\"media-player-id\"\n        onClick={ this.props.onClick }\n        ref={ this.props.videoRef }\n      />\n    );\n  }\n}\n\nVideoPlayer.propTypes = {\n  mediaUrl: PropTypes.string,\n  onTimeUpdate: PropTypes.func,\n  onClick: PropTypes.func,\n  videoRef: PropTypes.object\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './VolumeControl.module.css';\nclass VolumeControl extends React.Component {\n\n  render() {\n    return (\n      <div className={ styles.switchContainer }>\n        <label className={ styles.switch }>\n          <input type=\"checkbox\"\n            defaultChecked=\"true\"\n            onChange={ this.props.handleMuteVolume }\n          />\n          <span className={ styles.slider }></span>\n        </label>\n        <label className={ styles.label }>Volume</label>\n      </div>\n    );\n  }\n}\n\nVolumeControl.propTypes = {\n  handleMuteVolume: PropTypes.func\n};\n\nexport default VolumeControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Select.module.css';\n\nclass Select extends React.Component {\n\n  render() {\n    const options = this.props.options.map((option, index) => {\n      // eslint-disable-next-line react/no-array-index-key\n      return <option key={ index } value={ option.value }>{option.label}</option>;\n    });\n\n    return (\n      <select className={ style.selectPlayerControl } name={ this.props.name } value={ this.props.currentValue } onChange={ this.props.handleChange }>\n        {options}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  currentValue: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport VolumeControl from './VolumeControl';\nimport Select from './Select';\n\nimport style from './PlayerControls.module.css';\n\nclass PlayerControls extends React.Component {\n  // to handle backward and forward mouse pressed on btn\n  // set a 300 ms  interval to repeat the\n  // backward or forward function\n  // on mouseUp the interval is cleared\n  setIntervalHelperBackward = () => {\n    this.props.skipBackward();\n    this.interval = setInterval(() => {\n      this.props.skipBackward();\n    }, 300);\n  }\n\n  setIntervalHelperForward = () => {\n    this.props.skipForward();\n    this.interval = setInterval(() => {\n      this.props.skipForward();\n    }, 300);\n  }\n\n  clearIntervalHelper = () => {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div className={ style.playerControls }>\n        <button\n          className={ style.playerButton }\n          onClick={ this.props.rollback }>\n          {'↺'}\n        </button>\n\n        <button\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperBackward }\n          onMouseUp={ this.clearIntervalHelper }>\n          {'◀◀'}\n        </button>\n\n        <button\n          className={ style.playerButton }\n          onClick={ this.props.playMedia }>\n          {this.props.isPlaying ? '❚❚' : '▶'}\n        </button>\n\n        <button\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperForward }\n          onMouseUp={ this.clearIntervalHelper }>\n          {'▶▶'}\n        </button>\n\n        <button\n          className={ style.playBackRate }>\n          x<Select\n            options={ this.props.playbackRateOptions }\n            currentValue={ this.props.playbackRate.toString() }\n            name={ 'playbackRate' }\n            handleChange={ this.props.setPlayBackRate }\n          />\n\n        </button>\n\n        <div className={ style.timeBox }>\n          <span className={ style.currentTime }\n            onClick={ this.props.promptSetCurrentTime }\n          >{ this.props.currentTime }</span>\n          <span className={ style.separator }>|</span>\n          <span className={ style.duration }>{this.props.duration}</span>\n        </div>\n\n        <VolumeControl\n          handleMuteVolume={ this.props.handleMuteVolume }\n        />\n      </div>\n    );\n  }\n}\n\nPlayerControls.propTypes = {\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.string,\n  timecodeOffset: PropTypes.string,\n  promptSetCurrentTime: PropTypes.func,\n  rollback: PropTypes.func,\n  handleMuteVolume: PropTypes.func,\n  duration: PropTypes.string,\n  isPlaying: PropTypes.bool,\n  skipBackward: PropTypes.func,\n  skipForward: PropTypes.func,\n  playbackRate: PropTypes.number,\n  playbackRateOptions: PropTypes.array,\n  setPlayBackRate: PropTypes.func\n};\n\nexport default PlayerControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './ProgressBar.module.css';\n\nclass ProgressBar extends React.Component {\n\n  render() {\n    return (\n      <div className={ style.progress }>\n        <input\n          type='range'\n          className={ style.bar }\n          onChange={ this.props.buttonClick }\n          value={ this.props.value }\n          min='0'\n          max={ this.props.max }\n        />\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  value: PropTypes.number,\n  max: PropTypes.number,\n  buttonClick: PropTypes.func\n};\n\nexport default ProgressBar;\n","function returnHotKeys(self) {\n  return {\n    'esc': {\n      priority: 1,\n      handler: () => { self.togglePlayMedia(); },\n      label: 'Play Media',\n    },\n    'ctrl+k': { // combo from mousetrap\n      priority: 1,\n      handler: () => { self.promptSetCurrentTime(); },\n      label: 'set current time',\n    },\n    'ctrl+1': {\n      priority: 1,\n      handler: () => { self.skipForward(); },\n      label: 'Skip Forward',\n    },\n    'ctrl+2': {\n      priority: 1,\n      handler: () => { self.skipBackward(); },\n      label: 'Skip Backward',\n    },\n    'ctrl+3': {\n      priority: 1,\n      handler: () => { self.decreasePlaybackRate(); },\n      label: 'Speed Down',\n    },\n    'ctrl+4': {\n      priority: 1,\n      handler: () => { self.increasePlaybackRate(); },\n      label: 'Speed Up',\n    },\n    'ctrl+5': {\n      priority: 1,\n      handler: () => { self.rollBack(); },\n      label: 'Roll Back',\n    }\n  };\n}\nexport default returnHotKeys;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hotkeys } from 'react-keyboard-shortcuts';\n\nimport VideoPlayer from './VideoPlayer';\nimport PlayerControls from './PlayerControls';\nimport ProgressBar from './ProgressBar';\n\nimport returnHotKeys from './defaultHotKeys';\nimport styles from './index.module.css';\n\nimport { secondsToTimecode, timecodeToSeconds } from '../../Util/timecode-converter/index';\n\nconst PLAYBACK_RATES = [\n  { value: 0.2, label: '0.2' },\n  { value: 0.25, label: '0.25' },\n  { value: 0.5, label: '0.5' },\n  { value: 0.75, label: '0.75' },\n  { value: 1, label: '1' },\n  { value: 1.25, label: '1.25' },\n  { value: 1.5, label: '1.5' },\n  { value: 1.75, label: '1.75' },\n  { value: 2, label: '2' },\n  { value: 2.5, label: '2.5' },\n  { value: 3, label: '3' },\n  { value: 3.5, label: '3.5' }\n];\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n\n    this.state = {\n      playbackRate: 1,\n      rollBackValueInSeconds: this.props.rollBackValueInSeconds,\n      timecodeOffset: this.props.timecodeOffset,\n      hotKeys: returnHotKeys(this),\n      isPlaying: false,\n      playbackRateOptions: PLAYBACK_RATES\n    };\n  }\n  /*eslint-disable camelcase */\n  hot_keys = returnHotKeys(this);\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.timecodeOffset !== null) {\n      let newCurrentTimeInSeconds = nextProps.timecodeOffset ;\n      if (typeof newCurrentTimeInSeconds ==='string'\n        && newCurrentTimeInSeconds.includes(':')\n        && !newCurrentTimeInSeconds.includes('NaN')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(nextProps.timecodeOffset );\n      }\n\n      return {\n        timecodeOffset: newCurrentTimeInSeconds,\n        rollBackValueInSeconds: nextProps.rollBackValueInSeconds\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.hookSeek(this.setCurrentTime);\n    this.props.hookPlayMedia(this.togglePlayMedia);\n    this.props.hookIsPlaying(this.isPlaying);\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    if (newCurrentTime !== '' && newCurrentTime !== null) {\n    // hh:mm:ss:ff - mm:ss - m:ss - ss - seconds number or string and hh:mm:ss\n      const newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTime);\n      if (this.videoRef.current !== null) {\n        const videoRef = this.videoRef.current;\n\n        if (videoRef.readyState === 4) {\n          videoRef.currentTime = newCurrentTimeInSeconds;\n          this.playMedia();\n        }\n      }\n    }\n  }\n\n  /**\n   * Prompts for a time stamp or time code to set media current time\n   * Also handles use can when the user has set a timecode offset via settings\n   * and the prompt is expected to be relative to that offset\n   */\n  promptSetCurrentTime = () => {\n    let userTimecodeValue = prompt('Jump to time - hh:mm:ss:ff hh:mm:ss mm:ss m:ss m.ss seconds');\n    // user clicks cancel to prompt, prompt returns null\n    if (userTimecodeValue !== null) {\n      if (userTimecodeValue.includes(':')) {\n        userTimecodeValue = timecodeToSeconds(userTimecodeValue);\n      }\n      // remove timecode offset if preset\n      if (this.state.timecodeOffset !== 0) {\n        userTimecodeValue -= this.state.timecodeOffset;\n      }\n  \n      this.setCurrentTime(userTimecodeValue);\n    }\n  }\n\n  setTimeCodeOffset = (newTimeCodeOffSet) => {\n    if (newTimeCodeOffSet !== '' && newTimeCodeOffSet !== null) {\n      // use similar helper function from above to convert\n      let newCurrentTimeInSeconds = newTimeCodeOffSet;\n      if (newTimeCodeOffSet.includes(':')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(newTimeCodeOffSet);\n        this.setState({ timecodeOffset: newCurrentTimeInSeconds });\n      }\n    }\n  }\n\n  rollBack = () => {\n    if (this.videoRef.current !== null) {\n      // get video duration\n      const videoElem = this.videoRef.current;\n      const tmpDesiredCurrentTime = videoElem.currentTime - this.state.rollBackValueInSeconds;\n      // > 0 < duration of video\n      this.setCurrentTime(tmpDesiredCurrentTime);\n    }\n  }\n\n  handleTimeUpdate = (e) => {\n    this.props.hookOnTimeUpdate(e.target.currentTime);\n  }\n\n  handlePlayBackRateChange = (e) => {\n    this.setPlayBackRate(parseFloat(e.target.value));\n  }\n\n  /**\n   * @param {float} input - playback rate value as a float\n   */\n  setPlayBackRate = (input) => {\n    if (this.videoRef.current !== null) {\n      if (input >= 0.2 && input <= 3.5) {\n        this.setState({\n          playbackRate: input,\n        }, () => {\n          this.videoRef.current.playbackRate = input;\n        });\n      }\n    }\n  }\n\n  decreasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ].reverse();\n    const slower = speeds.find((option) => {\n      return option.value < this.state.playbackRate;\n    });\n    const newSpeed = slower ? slower.value : 0.2;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  increasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ];\n    const faster = speeds.find((option) => {\n      return option.value > this.state.playbackRate;\n    });\n    const newSpeed = faster ? faster.value : 3.5;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  handleChangeReplayRollbackValue = (e) => {\n    if (this.videoRef.current !== null) {\n      this.setState({\n        rollBackValueInSeconds: e.target.value,\n      });\n    }\n  }\n\n  handleMuteVolume = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.volume > 0) {\n        this.videoRef.current.volume = 0;\n      } else {\n        this.videoRef.current.volume = 1;\n      }\n    }\n  }\n\n  // TEMP: keeping this in for now. Might be replaced by state\n  // The pauseWhileTyping logic (in TimedTextEditor) currently uses this\n  isPlaying = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.paused) return false;\n\n      return true;\n    }\n  }\n\n  pauseMedia = () => {\n    this.setState({ isPlaying: false }, () => this.videoRef.current.pause());\n  }\n\n  playMedia = () => {\n    this.setState({ isPlaying: true }, () => this.videoRef.current.play());\n  }\n\n  // Sets isPlaying state and toggles modes on the video player\n  // TODO: modularise these / enable specific play / pause action\n  togglePlayMedia = () => {\n    if (this.videoRef.current !== null) {\n      if (this.state.isPlaying) {\n        this.pauseMedia();\n      }\n      else {\n        this.playMedia();\n      }\n    }\n  }\n\n  skipForward = () => {\n    if (this.videoRef.current !== null) {\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime + 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  skipBackward = () => {\n    if (this.videoRef.current !== null) {\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime - 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  handleProgressBarClick = (e) => {\n    const time = e.target.value;\n    this.setCurrentTime(time);\n  }\n\n  getMediaCurrentTime = () => {\n    if (this.videoRef.current !== null) {\n      return secondsToTimecode(this.videoRef.current.currentTime + this.state.timecodeOffset);\n    }\n\n    return '00:00:00:00';\n  }\n\n  getMediaDuration = () => {\n    if (this.videoRef.current !== null) {\n      return secondsToTimecode(this.videoRef.current.duration + this.state.timecodeOffset);\n    }\n\n    return '00:00:00:00';\n  }\n\n  render() {\n    const player = <VideoPlayer\n      mediaUrl={ this.props.mediaUrl }\n      onTimeUpdate= { this.handleTimeUpdate }\n      onClick= { this.togglePlayMedia.bind(this) }\n      videoRef={ this.videoRef }\n    />;\n\n    const playerControlsSection = (\n      <div className={ styles.controlsSection }>\n        <div className={ styles.titleBox }>\n          <h1 className={ styles.title }>{ this.props.mediaUrl }</h1>\n        </div>\n        <PlayerControls\n          playMedia={ this.togglePlayMedia.bind(this) }\n          isPlaying={ this.state.isPlaying }\n          playbackRate={ this.state.playbackRate }\n          skipBackward={ this.skipBackward.bind(this) }\n          skipForward={ this.skipForward.bind(this) }\n          rollback={ this.rollBack }\n          currentTime={ this.getMediaCurrentTime() }\n          duration={ this.getMediaDuration() }\n          onSetCurrentTime={ '' }\n          onSetTimecodeOffset={ '' }\n          promptSetCurrentTime={ this.promptSetCurrentTime.bind(this) }\n          setTimeCodeOffset={ this.setTimeCodeOffset.bind(this) }\n          timecodeOffset={ secondsToTimecode(this.state.timecodeOffset) }\n          handleMuteVolume={ this.handleMuteVolume.bind(this) }\n          setPlayBackRate={ this.handlePlayBackRateChange.bind(this) }\n          playbackRateOptions={ this.state.playbackRateOptions }\n        />\n      </div>\n    );\n\n    const progressBar = <ProgressBar\n      max={ this.videoRef.current !== null ? parseInt(this.videoRef.current.duration) : 100 }\n      value={ this.videoRef.current !== null ? parseInt(this.videoRef.current.currentTime) : 0 }\n      buttonClick={ this.handleProgressBarClick.bind(this) }\n    />;\n\n    return (\n      <section className={ styles.topSection }>\n        <div className={ styles.playerSection }>\n          { this.props.mediaUrl !== null ? player : null }\n          { this.props.mediaUrl !== null ? playerControlsSection : null }\n        </div>\n        { this.props.mediaUrl !== null ? progressBar : null }\n      </section>\n    );\n  }\n}\n\nMediaPlayer.propTypes = {\n  hookSeek: PropTypes.func,\n  hookPlayMedia: PropTypes.func,\n  hookIsPlaying: PropTypes.func,\n  mediaUrl: PropTypes.string,\n  hookOnTimeUpdate: PropTypes.func,\n  rollBackValueInSeconds: PropTypes.number,\n  timecodeOffset: PropTypes.number\n};\n\nexport default hotkeys(MediaPlayer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nclass Toggle extends React.Component {\n  render() {\n    return (\n      <div className={ style.switchContainer }>\n        <label className={ style.switch }>\n          <input type='checkbox'\n            defaultChecked={ this.props.defaultValue }\n            onChange={ this.props.handleToggle }\n          />\n          <span className={ style.slider }></span>\n        </label>\n      </div>\n    );\n  }\n}\n\nToggle.propTypes = {\n  handleToggle: PropTypes.func,\n  label: PropTypes.string,\n  defaultValue: PropTypes.bool\n};\n\nexport default Toggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nimport { timecodeToSeconds, secondsToTimecode } from '../../../Util/timecode-converter/index';\n\nclass TimecodeOffset extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timecodeOffset: secondsToTimecode(this.props.timecodeOffset)\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      timecodeOffset: e.target.value\n    });\n  }\n\n  resetTimecodeOffset = () => {\n    const resetTimecodeOffsetValue = 0;\n\n    this.setState({\n      timecodeOffset: secondsToTimecode(resetTimecodeOffsetValue)\n    }, () => {\n      this.props.handleSetTimecodeOffset(resetTimecodeOffsetValue);\n    });\n  }\n\n  setTimecodeOffset = () => {\n    console.log(this.state.timecodeOffset);\n    let newCurrentTimeInSeconds = this.state.timecodeOffset;\n    if (typeof newCurrentTimeInSeconds ==='string'\n    && newCurrentTimeInSeconds.includes(':')\n    && !newCurrentTimeInSeconds.includes('NaN')) {\n      newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTimeInSeconds );\n    }\n    this.props.handleSetTimecodeOffset(newCurrentTimeInSeconds);\n  }\n\n  render() {\n    return (\n      <div className={ style.offsetContainer }>\n        <input\n          className={ style.inputBox }\n          type=\"text\"\n          value={ this.state.timecodeOffset }\n          onChange={ this.handleChange }\n          name=\"lname\"/>\n        <span className={ style.button } onClick={ this.resetTimecodeOffset }><u>Reset</u></span>\n        <span> | </span>\n        <span className={ style.button } onClick={ this.setTimecodeOffset }><u>Save</u></span>\n      </div>\n    );\n  }\n}\n\nTimecodeOffset.propTypes = {\n  handleSetTimecodeOffset: PropTypes.func,\n  onChange: PropTypes.func,\n  timecodeOffset: PropTypes.number\n};\n\nexport default TimecodeOffset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Toggle from './Toggle/';\n\nimport style from './index.module.css';\n\nimport TimecodeOffset from './TimecodeOffset';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div className={ style.settings }>\n        <h2 className={ style.header }>Settings Panel</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleSettingsToggle }>X</div>\n\n        <div className={ style.controlsContainer }>\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Pause While Typing</div>\n            <Toggle\n              defaultValue={ this.props.defaultValuePauseWhileTyping }\n              label={ 'Pause while typing' }\n              handleToggle={ this.props.handlePauseWhileTyping }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Scroll Sync</div>\n            <Toggle\n              defaultValue={ this.props.defaultValueScrollSync }\n              label={ 'ScrollSync' }\n              handleToggle={ this.props.handleIsScrollIntoViewChange }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Rollback Interval (sec)</div>\n            <input\n              className={ style.rollbackValue }\n              type=\"text\"\n              value={ this.props.defaultRollBackValueInSeconds }\n              onChange={ this.props.handleRollBackValueInSeconds }\n              name=\"lname\"/>\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Timecodes</div>\n            <Toggle\n              defaultValue={ this.props.showTimecodes }\n              label={ 'Hide Timecodes' }\n              handleToggle={ this.props.handleShowTimecodes }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Speaker Labels</div>\n            <Toggle\n              defaultValue={ this.props.showSpeakers }\n              label={ 'Hide Speaker Labels' }\n              handleToggle={ this.props.handleShowSpeakers }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.timecodeLabel }>Timecode Offset ℹ</div>\n            <TimecodeOffset\n              timecodeOffset={ this.props.timecodeOffset }\n              handleSetTimecodeOffset={ this.props.handleSetTimecodeOffset }\n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  showTimecodes: PropTypes.bool,\n  showSpeakers: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleShowTimecodes: PropTypes.func,\n  handleShowSpeakers: PropTypes.func,\n  handleSetTimecodeOffset: PropTypes.func,\n  handleSettingsToggle: PropTypes.func,\n  handlePauseWhileTyping: PropTypes.func,\n  handleIsScrollIntoViewChange: PropTypes.func,\n  handleRollBackValueInSeconds: PropTypes.func,\n  defaultValueScrollSync: PropTypes.bool,\n  defaultValuePauseWhileTyping: PropTypes.bool,\n  defaultRollBackValueInSeconds: PropTypes.number\n};\n\nexport default Settings;\n","import React from 'react';\n\nimport returnHotKeys from '../MediaPlayer/defaultHotKeys';\n\nimport style from './Shortcuts.module.css';\n\nclass Shortcuts extends React.Component {\n  render() {\n    const hotKeys = returnHotKeys(this);\n    const hotKeysCheatsheet = Object.keys(hotKeys).map((key, i) => {\n    \tconst shortcut = hotKeys[key];\n\n      return <li key={ i } className={ style.listItem }>\n        <div className={ style.shortcut }>{key}</div>\n        <div className={ style.shortcutLabel }>{shortcut.label}</div>\n      </li>;\n    });\n\n    return (\n      <div className={ style.shortcuts }>\n        <div className={ style.header }>ℹ Keyboard Shortcuts Help</div>\n        <ul className={ style.list }>{ hotKeysCheatsheet }</ul>\n      </div>\n    );\n  }\n}\n\nexport default Shortcuts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TimedTextEditor from './TimedTextEditor';\nimport MediaPlayer from './MediaPlayer';\nimport Settings from './Settings';\nimport Shortcuts from './Settings/Shortcuts';\n\nimport style from './index.module.css';\n\nclass TranscriptEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTime: 0,\n      lastLocalSavedTime: '',\n      transcriptData: null,\n      isScrollIntoViewOn: false,\n      showSettings: false,\n      showShortcuts: false,\n      isPauseWhileTypingOn: true,\n      rollBackValueInSeconds: 15,\n      timecodeOffset: 0,\n      showTimecodes: true,\n      showSpeakers: true\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n      return {\n        transcriptData: nextProps.transcriptData\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.transcriptData !== this.state.transcriptData) {\n      if (this.refs.timedTextEditor.isPresentInLocalStorage(this.props.mediaUrl)) {\n        console.log('was already present in local storage');\n        this.refs.timedTextEditor.loadLocalSavedData(this.props.mediaUrl);\n      } else {\n        console.log('not present in local storage');\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleWordClick = (startTime) => {\n    this.setCurrentTime(startTime);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleTimeUpdate = (currentTime) => {\n    this.setState({\n      currentTime,\n    });\n  }\n\n  handlePlayMedia = (bool) => {\n    this.playMedia(bool);\n  }\n\n  handleIsPlaying = () => {\n    return this.isPlaying();\n  }\n\n  handleIsScrollIntoViewChange = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isScrollIntoViewOn: isChecked });\n  }\n  handlePauseWhileTyping = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isPauseWhileTypingOn: isChecked });\n  }\n\n  handleRollBackValueInSeconds = (e) => {\n    const rollBackValue = e.target.value;\n    console.log(rollBackValue);\n    this.setState({ rollBackValueInSeconds: rollBackValue });\n  }\n\n  handleSetTimecodeOffset = (timecodeOffset) => {\n    console.log('TranscriptEditor', timecodeOffset );\n\n    this.setState({ timecodeOffset: timecodeOffset },\n      () => {\n        // eslint-disable-next-line react/no-string-refs\n        this.refs.timedTextEditor.forceUpdate();\n      });\n  }\n\n  handleShowTimecodes = (e) => {\n    const isChecked = e.target.checked;\n\n    this.setState({ showTimecodes: isChecked });\n  }\n\n  handleShowSpeakers = (e) => {\n    const isChecked = e.target.checked;\n\n    this.setState({ showSpeakers: isChecked });\n  }\n\n  handleSettingsToggle = () => {\n    this.setState(prevState => ({\n      showSettings: !prevState.showSettings\n    }));\n  }\n\n  handleShortcutsToggle = () => {\n    this.setState(prevState => ({\n      showShortcuts: !prevState.showShortcuts\n    }));\n  }\n\n  render() {\n    const mediaPlayer = <MediaPlayer\n      hookSeek={ foo => this.setCurrentTime = foo }\n      hookPlayMedia={ foo => this.playMedia = foo }\n      hookIsPlaying={ foo => this.isPlaying = foo }\n      rollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      hookOnTimeUpdate={ this.handleTimeUpdate }\n      mediaUrl={ this.props.mediaUrl }\n      ref={ 'MediaPlayer' }\n    />;\n\n    const settings = <Settings\n      handleSettingsToggle={ this.handleSettingsToggle }\n      defaultValuePauseWhileTyping={ this.state.isPauseWhileTypingOn }\n      defaultValueScrollSync={ this.state.isScrollIntoViewOn }\n      defaultRollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      showTimecodes={ this.state.showTimecodes }\n      showSpeakers={ this.state.showSpeakers }\n      handlePauseWhileTyping={ this.handlePauseWhileTyping }\n      handleIsScrollIntoViewChange={ this.handleIsScrollIntoViewChange }\n      handleRollBackValueInSeconds={ this.handleRollBackValueInSeconds }\n      handleSetTimecodeOffset={ this.handleSetTimecodeOffset }\n      handleShowTimecodes={ this.handleShowTimecodes }\n      handleShowSpeakers={ this.handleShowSpeakers }\n    />;\n\n    return (\n      <div className={ style.container }>\n        <header className={ style.header }>\n          { this.state.showSettings ? settings : null }\n          { this.state.showShortcuts ? <Shortcuts /> : null }\n        </header>\n\n        <aside className={ style.aside }>{ this.props.mediaUrl ? mediaPlayer : null }</aside>\n\n        <div className={ style.settingsContainer }>\n          <button className={ style.settingsButton } onClick={ this.handleSettingsToggle }><div className={ style.cog }>Settings</div></button>\n          <button className={ style.settingsButton } onClick={ this.handleShortcutsToggle }>ℹ</button>\n        </div>\n\n        <main className={ style.main }>\n          <TimedTextEditor\n            transcriptData={ this.state.transcriptData }\n            timecodeOffset={ this.state.timecodeOffset }\n            onWordClick={ this.handleWordClick }\n            playMedia={ this.handlePlayMedia }\n            isPlaying={ this.handleIsPlaying }\n            currentTime={ this.state.currentTime }\n            isEditable={ this.props.isEditable }\n            sttJsonType={ this.props.sttJsonType }\n            mediaUrl={ this.props.mediaUrl }\n            isScrollIntoViewOn={ this.state.isScrollIntoViewOn }\n            isPauseWhileTypingOn={ this.state.isPauseWhileTypingOn }\n            showTimecodes={ this.state.showTimecodes }\n            showSpeakers={ this.state.showSpeakers }\n            ref={ 'timedTextEditor' }\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nTranscriptEditor.propTypes = {\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  sttJsonType: PropTypes.string,\n};\n\nexport default TranscriptEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SttTypeSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"bbckaldi\">BBC Kaldi</option>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"gentle-transcript\" disabled>Gentle Transcript</option>\n  <option value=\"gentle-alignement\" disabled>Gentle Alignement</option>\n  <option value=\"iiif\" disabled>IIIF</option>\n  <option value=\"autoedit2\">autoEdit 2</option>\n  <option value=\"ibm\" disabled>IBM Watson STT</option>\n  <option value=\"speechmatics\" disabled>Speechmatics</option>\n  <option value=\"assemblyai\" disabled>AssemblyAI</option>\n  <option value=\"rev\" disabled>Rev</option>\n  <option value=\"srt\" disabled>Srt</option>\n  <option value=\"vtt\" disabled>VTT</option>\n  <option value=\"vtt-youtube\" disabled>Youtube VTT</option>\n</select>);\n\nSttTypeSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default SttTypeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExportFormatSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"txt\">Text file</option>\n  <option value=\"html\" disabled>HTML</option>\n  <option value=\"word\" disabled>MS Word</option>\n</select>);\n\nExportFormatSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default ExportFormatSelect;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { TranscriptEditor } from './lib';\n\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport style from './index.module.css';\nimport SttTypeSelect from './select-stt-json-type';\nimport ExportFormatSelect from './select-export-format';\n\nconst tedTalkVideoUrl = 'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null,\n      isTextEditable: true,\n      sttType: 'bbckaldi',\n    };\n    // this.handleChangeLoadTranscriptJson = this.handleChangeLoadTranscriptJson.bind(this);\n  }\n\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl,\n      sttType: 'bbckaldi',\n    });\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[0];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      const fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL,\n      });\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL,\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const self = this;\n    const file = files[0];\n    // let type = file.type;\n    // TODO: add checks\n    // let transcriptJsonContent = FileReader.readAsText(file)\n    const fr = new FileReader();\n    fr.onload = function (e) {\n      // e.target.result should contain the text\n      console.log(JSON.parse(e.target.result));\n      self.setState({\n        transcriptData: JSON.parse(e.target.result),\n        // mediaUrl: tedTalkVideoUrl\n      });\n    };\n    fr.readAsText(file);\n  }\n\n  handleIsTextEditable = () => {\n    this.setState((prevState) => ({ isTextEditable: (prevState.isTextEditable) !== true }));\n  }\n\n  // https://stackoverflow.com/questions/21733847/react-jsx-selecting-selected-on-selected-select-option\n  handleSttTypeChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleExportFormatChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  exportTranscript = () => {\n    // eslint-disable-next-line react/no-string-refs\n    const { data, ext } = this.refs.transcriptEditor.getEditorContent(this.state.exportFormat);\n    this.download(data, `${ this.state.mediaUrl }.${ ext }`);\n  }\n\n  // https://stackoverflow.com/questions/2897619/using-html5-javascript-to-generate-and-save-a-file\n   download = (content, filename, contentType) => {\n     const type = contentType || 'application/octet-stream';\n     const a = document.createElement('a');\n     const blob = new Blob([ content ], { type: type });\n\n     a.href = window.URL.createObjectURL(blob);\n     a.download = filename;\n     a.click();\n   }\n\n   clearLocalStorage = () => {\n     localStorage.clear();\n     console.info('cleared local storage');\n   }\n\n   render() {\n     return (\n       <div className={ style.container }>\n         <span className={ style.title }>\n            Demo page for <mark>React Transcript Editor</mark> - Component |{' '}\n           <a\n             href=\"https://github.com/bbc/react-transcript-editor\"\n             rel=\"noopener noreferrer\"\n             target=\"_blank\"\n           >\n            Github Repo\n           </a>\n         </span>\n         <br />\n         <button onClick={ () => this.loadDemo() }>load demo</button>\n         <hr />\n         <label>open Transcript Json</label>\n         <SttTypeSelect\n           name={ 'sttType' }\n           value={ this.state.sttType }\n           handleChange={ this.handleSttTypeChange }\n         />\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n         />\n\n         <br />\n         <label>Load Local Media</label>\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n         />\n         or\n         <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n         </button>\n\n         <br />\n         <label>Export transcript</label>\n         <button onClick={ () => this.exportTranscript() }>Export file</button>\n\n         <ExportFormatSelect\n           name={ 'exportFormat' }\n           value={ this.state.exportFormat }\n           handleChange={ this.handleExportFormatChange }\n         />\n         <br />\n         <label>Text Is Editable</label>\n         <label className={ style.switch }>\n           <input type=\"checkbox\"\n             defaultChecked=\"true\"\n             onChange={ this.handleIsTextEditable }\n           />\n           <span className={ style.slider }></span>\n         </label>\n         <br />\n         <button onClick={ () => this.clearLocalStorage() }>Clear Local Storage</button>\n         <hr/>\n\n         <TranscriptEditor\n           transcriptData={ this.state.transcriptData }\n           mediaUrl={ this.state.mediaUrl }\n           isEditable={ this.state.isTextEditable }\n           sttJsonType={ this.state.sttType }\n           // eslint-disable-next-line react/no-string-refs\n           ref={ 'transcriptEditor' }\n         />\n       </div>\n     );\n   }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"container\":\"TranscriptEditor_container__28OEI\",\"header\":\"TranscriptEditor_header__3t9qT\",\"main\":\"TranscriptEditor_main__2aOzn\",\"aside\":\"TranscriptEditor_aside__1f7EK\",\"settingsContainer\":\"TranscriptEditor_settingsContainer__2y-aY\",\"settingsButton\":\"TranscriptEditor_settingsButton__2_TCj\",\"cog\":\"TranscriptEditor_cog__1FFPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"color-light-grey\":\"#767676\",\"color-mid-grey\":\"#696969\",\"color-dark-grey\":\"#4a4a4a\",\"WrapperBlock\":\"WrapperBlock_WrapperBlock__KRhEE\",\"markers\":\"WrapperBlock_markers__oOsnW\",\"text\":\"WrapperBlock_text__1lDVY\",\"speaker\":\"WrapperBlock_speaker__3Jk4j\",\"time\":\"WrapperBlock_time__3Eatw\",\"EditLabel\":\"WrapperBlock_EditLabel__3cJzN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-lightest-grey\":\"#f2f2f2\",\"color-labs-red\":\"#a0372d\",\"color-dark-grey\":\"#4a4a4a\",\"shortcuts\":\"Shortcuts_shortcuts__2vH1D\",\"header\":\"Shortcuts_header__ZOVu4\",\"list\":\"Shortcuts_list__2apC7\",\"listItem\":\"Shortcuts_listItem__1-dwy\",\"shortcut\":\"Shortcuts_shortcut__196Hv\",\"shortcutLabel\":\"Shortcuts_shortcutLabel__3gcsP\",\"settingElement\":\"Shortcuts_settingElement__NZaHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"topSection\":\"MediaPlayer_topSection__1gJAM\",\"playerSection\":\"MediaPlayer_playerSection__y0g8M\",\"controlsSection\":\"MediaPlayer_controlsSection__wk446\",\"titleBox\":\"MediaPlayer_titleBox__2Hfgg\",\"title\":\"MediaPlayer_title__h7Ojg\",\"helpText\":\"MediaPlayer_helpText__2cZmN\",\"hideInMobile\":\"MediaPlayer_hideInMobile__GbrMc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"VolumeControl_switchContainer__2Ekey\",\"label\":\"VolumeControl_label__aPj5I\",\"switch\":\"VolumeControl_switch__14pnI\",\"slider\":\"VolumeControl_slider__14_0H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offsetContainer\":\"TimecodeOffset_offsetContainer__1pGLY\",\"inputBox\":\"TimecodeOffset_inputBox__20vcA\",\"button\":\"TimecodeOffset_button__B8F-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__2-l5-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"Toggle_switchContainer__2oMzU\",\"label\":\"Toggle_label__ewLfb\",\"switch\":\"Toggle_switch__39TJz\",\"slider\":\"Toggle_slider__1Lgir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"bar\":\"ProgressBar_bar__xe2el\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DraftEditor-root\":\"TimedTextEditor_DraftEditor-root__28YV4\",\"editor\":\"TimedTextEditor_editor__2M5RK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPlayerControl\":\"Select_selectPlayerControl__H_co4\"};"],"sourceRoot":""}