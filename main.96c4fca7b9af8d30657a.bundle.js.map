{"version":3,"file":"main.96c4fca7b9af8d30657a.bundle.js","sources":["webpack:///./packages/components/timed-text-editor/Word.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Word extends PureComponent {\n  generateConfidence = (data) => {\n    // handling edge case where confidence score not present\n    if (data.confidence) {\n      return data.confidence > 0.6 ? 'high' : 'low';\n    }\n\n    return 'high';\n  }\n\n  generatePreviousTimes = (data) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < data.start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (data.start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((data.start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(data.start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n      <span\n        data-start={ data.start }\n        data-end={ data.end }\n        data-confidence = { this.generateConfidence(data) }\n        data-prev-times = { this.generatePreviousTimes(data) }\n        data-entity-key={ data.key }\n        className=\"Word\">\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  entityKey: PropTypes.string,\n  children: PropTypes.array\n};\n\nexport default Word;\n"],"mappings":"AAGA","sourceRoot":""}